{
  "openapi": "3.0.3",
  "info": {
    "version": "2.2",
    "title": "Dynamic Yield API - Readme Choose",
    "description": "API definitions for all Dynamic Yield public endpoints.",
    "contact": {
      "name": "API Support",
      "email": "apisupport@mastercard.com",
      "url": "https://developer.mastercard.com/support"
    }
  },
  "servers": [
    {
      "url": "https://dy-api.com/v2",
      "description": "US data center"
    },
    {
      "url": "https://direct.dy-api.com/v2",
      "description": "US data center, direct endpoint"
    },
    {
      "url": "https://dy-api.eu/v2",
      "description": "EU data center"
    },
    {
      "url": "https://direct.dy-api.eu/v2",
      "description": "EU data center, direct endpoint"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Experience APIs",
      "description": "Serve user experience and track user interactions."
    },
    {
      "name": "Profile Anywhere",
      "description": "Retrieve user affinity data."
    },
    {
      "name": "User Data API",
      "description": "Update user data."
    },
    {
      "name": "Product Data",
      "description": "Update and monitor product data."
    }
  ],
  "paths": {
    "/serve/user/choose": {
      "summary": "Choose Variations",
      "post": {
        "summary": "Choose Variations",
        "description": "Get the chosen variations for one or more campaigns.<br>If you are not sure which server URL you should use, [see here](https://support.dynamicyield.com/hc/en-us/articles/360017534877-Experience-API-Basics).",
        "operationId": "chooseVariations",
        "tags": [
          "Experience APIs"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "title": "Choose Request - E-Commerce",
                    "type": "object",
                    "properties": {
                      "user": {
                        "title": "User",
                        "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                        "type": "object",
                        "properties": {
                          "dyid": {
                            "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                            "type": "string"
                          },
                          "dyid_server": {
                            "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                            "type": "string"
                          },
                          "active_consent_accepted": {
                            "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      },
                      "session": {
                        "title": "Session",
                        "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                        "type": "object",
                        "properties": {
                          "dy": {
                            "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                            "type": "string"
                          }
                        }
                      },
                      "context": {
                        "title": "Context",
                        "description": "The request's context.",
                        "type": "object",
                        "properties": {
                          "page": {
                            "description": "Data for the page currently being browsed.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                                "type": "string",
                                "enum": [
                                  "HOMEPAGE",
                                  "CATEGORY",
                                  "PRODUCT",
                                  "CART",
                                  "OTHER"
                                ],
                                "example": "HOMEPAGE"
                              },
                              "data": {
                                "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "p76311-020"
                                ]
                              },
                              "location": {
                                "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                                "type": "string",
                                "example": "https://shop.biz/nice-shirt-p76311.html"
                              },
                              "referrer": {
                                "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                                "type": "string",
                                "example": "https://google.cz"
                              },
                              "locale": {
                                "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                                "type": "string",
                                "example": "en_US"
                              }
                            },
                            "required": [
                              "type",
                              "location"
                            ]
                          },
                          "device": {
                            "description": "Data for the served device.",
                            "type": "object",
                            "properties": {
                              "userAgent": {
                                "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                                "type": "string",
                                "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                              },
                              "type": {
                                "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                                "type": "string",
                                "enum": [
                                  "DESKTOP",
                                  "SMARTPHONE",
                                  "TABLET",
                                  "KIOSK"
                                ]
                              },
                              "browser": {
                                "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                                "type": "string",
                                "enum": [
                                  "Chrome",
                                  "Firefox",
                                  "Opera",
                                  "Safari",
                                  "Other"
                                ],
                                "example": "Firefox"
                              },
                              "ip": {
                                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                                "type": "string",
                                "example": "54.100.200.255"
                              },
                              "dateTime": {
                                "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                                "type": "string",
                                "example": "2024-01-01T22:30:00.000-05:00"
                              }
                            }
                          },
                          "channel": {
                            "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                            "type": "string",
                            "enum": [
                              "WEB",
                              "APP"
                            ]
                          },
                          "pageAttributes": {
                            "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            }
                          },
                          "listedItems": {
                            "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "SKU1",
                              "SKU2"
                            ]
                          },
                          "branch": {
                            "description": "The branch where the user experience is taking place.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The branch's unique identifier.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "required": [
                          "page",
                          "device"
                        ]
                      },
                      "selector": {
                        "title": "Selector",
                        "description": "Campaigns to choose variations for.",
                        "type": "object",
                        "properties": {
                          "names": {
                            "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Banner Main",
                              "German Banner",
                              "PDP Recs Tray"
                            ]
                          },
                          "groups": {
                            "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "preview": {
                            "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                            "type": "object",
                            "properties": {
                              "ids": {
                                "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "ids"
                            ]
                          },
                          "args": {
                            "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                              "type": "object",
                              "properties": {
                                "realtimeRules": {
                                  "description": "A list of realtime filtering rules.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Valid values are: `include`, `exclude`.",
                                        "type": "string",
                                        "enum": [
                                          "include",
                                          "exclude"
                                        ]
                                      },
                                      "slots": {
                                        "description": "All or specific slot positions. The first slot is in position 0.",
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "query": {
                                        "description": "The filtering query.",
                                        "type": "object",
                                        "properties": {
                                          "conditions": {
                                            "description": "The realtime rule's query conditions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "field": {
                                                  "description": "Field within the returned results to apply the query for.",
                                                  "type": "string",
                                                  "example": "categories"
                                                },
                                                "arguments": {
                                                  "description": "A list of arguments for a query condition.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "action": {
                                                        "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                                        "type": "string",
                                                        "enum": [
                                                          "IS",
                                                          "IS_NOT",
                                                          "CONTAINS",
                                                          "EQ",
                                                          "GT",
                                                          "GTE",
                                                          "LT",
                                                          "LTE"
                                                        ]
                                                      },
                                                      "value": {
                                                        "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                                        "example": "basketball"
                                                      }
                                                    },
                                                    "required": [
                                                      "action",
                                                      "value"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "field",
                                                "arguments"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "names"
                        ]
                      },
                      "options": {
                        "title": "Options",
                        "description": "Request configuration parameters.",
                        "type": "object",
                        "properties": {
                          "isImplicitPageview": {
                            "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                            "type": "boolean",
                            "default": false
                          },
                          "returnAnalyticsMetadata": {
                            "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                            "type": "boolean",
                            "default": false
                          },
                          "isImplicitImpressionMode": {
                            "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
                            "type": "boolean",
                            "default": true
                          },
                          "isImplicitClientData": {
                            "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                            "type": "boolean",
                            "default": false
                          },
                          "recsProductData": {
                            "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                            "type": "object",
                            "properties": {
                              "fieldFilter": {
                                "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "skusOnly": {
                                "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "user",
                      "session",
                      "context",
                      "selector"
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "title": "Choose Request - Financial Institutions"
                      },
                      {
                        "title": "Choose Request - E-Commerce",
                        "type": "object",
                        "properties": {
                          "user": {
                            "title": "User",
                            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                            "type": "object",
                            "properties": {
                              "dyid": {
                                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                "type": "string"
                              },
                              "dyid_server": {
                                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                "type": "string"
                              },
                              "active_consent_accepted": {
                                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "session": {
                            "title": "Session",
                            "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                            "type": "object",
                            "properties": {
                              "dy": {
                                "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                                "type": "string"
                              }
                            }
                          },
                          "context": {
                            "title": "Context",
                            "description": "The request's context.",
                            "type": "object",
                            "properties": {
                              "page": {
                                "description": "Data for the page currently being browsed.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                                    "type": "string",
                                    "enum": [
                                      "HOMEPAGE",
                                      "CATEGORY",
                                      "PRODUCT",
                                      "CART",
                                      "OTHER"
                                    ],
                                    "example": "HOMEPAGE"
                                  },
                                  "data": {
                                    "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "p76311-020"
                                    ]
                                  },
                                  "location": {
                                    "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                                    "type": "string",
                                    "example": "https://shop.biz/nice-shirt-p76311.html"
                                  },
                                  "referrer": {
                                    "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                                    "type": "string",
                                    "example": "https://google.cz"
                                  },
                                  "locale": {
                                    "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                                    "type": "string",
                                    "example": "en_US"
                                  }
                                },
                                "required": [
                                  "type",
                                  "location"
                                ]
                              },
                              "device": {
                                "description": "Data for the served device.",
                                "type": "object",
                                "properties": {
                                  "userAgent": {
                                    "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                                    "type": "string",
                                    "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                                  },
                                  "type": {
                                    "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                                    "type": "string",
                                    "enum": [
                                      "DESKTOP",
                                      "SMARTPHONE",
                                      "TABLET",
                                      "KIOSK"
                                    ]
                                  },
                                  "browser": {
                                    "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                                    "type": "string",
                                    "enum": [
                                      "Chrome",
                                      "Firefox",
                                      "Opera",
                                      "Safari",
                                      "Other"
                                    ],
                                    "example": "Firefox"
                                  },
                                  "ip": {
                                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                                    "type": "string",
                                    "example": "54.100.200.255"
                                  },
                                  "dateTime": {
                                    "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                                    "type": "string",
                                    "example": "2024-01-01T22:30:00.000-05:00"
                                  }
                                }
                              },
                              "channel": {
                                "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                                "type": "string",
                                "enum": [
                                  "WEB",
                                  "APP"
                                ]
                              },
                              "pageAttributes": {
                                "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "listedItems": {
                                "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "SKU1",
                                  "SKU2"
                                ]
                              },
                              "branch": {
                                "description": "The branch where the user experience is taking place.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The branch's unique identifier.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "required": [
                              "page",
                              "device"
                            ]
                          },
                          "selector": {
                            "title": "Selector",
                            "description": "Campaigns to choose variations for.",
                            "type": "object",
                            "properties": {
                              "names": {
                                "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Banner Main",
                                  "German Banner",
                                  "PDP Recs Tray"
                                ]
                              },
                              "groups": {
                                "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "preview": {
                                "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "ids"
                                ]
                              },
                              "args": {
                                "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                                  "type": "object",
                                  "properties": {
                                    "realtimeRules": {
                                      "description": "A list of realtime filtering rules.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "description": "Valid values are: `include`, `exclude`.",
                                            "type": "string",
                                            "enum": [
                                              "include",
                                              "exclude"
                                            ]
                                          },
                                          "slots": {
                                            "description": "All or specific slot positions. The first slot is in position 0.",
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          },
                                          "query": {
                                            "description": "The filtering query.",
                                            "type": "object",
                                            "properties": {
                                              "conditions": {
                                                "description": "The realtime rule's query conditions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "field": {
                                                      "description": "Field within the returned results to apply the query for.",
                                                      "type": "string",
                                                      "example": "categories"
                                                    },
                                                    "arguments": {
                                                      "description": "A list of arguments for a query condition.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "action": {
                                                            "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                                            "type": "string",
                                                            "enum": [
                                                              "IS",
                                                              "IS_NOT",
                                                              "CONTAINS",
                                                              "EQ",
                                                              "GT",
                                                              "GTE",
                                                              "LT",
                                                              "LTE"
                                                            ]
                                                          },
                                                          "value": {
                                                            "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                                            "example": "basketball"
                                                          }
                                                        },
                                                        "required": [
                                                          "action",
                                                          "value"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "field",
                                                    "arguments"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "names"
                            ]
                          },
                          "options": {
                            "title": "Options",
                            "description": "Request configuration parameters.",
                            "type": "object",
                            "properties": {
                              "isImplicitPageview": {
                                "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                                "type": "boolean",
                                "default": false
                              },
                              "returnAnalyticsMetadata": {
                                "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                                "type": "boolean",
                                "default": false
                              },
                              "isImplicitImpressionMode": {
                                "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
                                "type": "boolean",
                                "default": true
                              },
                              "isImplicitClientData": {
                                "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                                "type": "boolean",
                                "default": false
                              },
                              "recsProductData": {
                                "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                                "type": "object",
                                "properties": {
                                  "fieldFilter": {
                                    "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "skusOnly": {
                                    "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "user",
                          "session",
                          "context",
                          "selector"
                        ]
                      }
                    ]
                  },
                  {
                    "title": "Choose Request - Restaurants",
                    "type": "object",
                    "properties": {
                      "user": {
                        "oneOf": [
                          {
                            "title": "User (sharedDevice: true)",
                            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                            "type": "object",
                            "properties": {
                              "sharedDevice": {
                                "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                                "type": "boolean",
                                "default": true
                              },
                              "cuid": {
                                "description": "User identifier value. Required for identified user flows.",
                                "type": "string"
                              },
                              "cuidType": {
                                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**<br>Required for identified user flows.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "sharedDevice"
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "User (sharedDevice: false)"
                              },
                              {
                                "title": "User",
                                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                                "type": "object",
                                "properties": {
                                  "dyid": {
                                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                    "type": "string"
                                  },
                                  "dyid_server": {
                                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                    "type": "string"
                                  },
                                  "active_consent_accepted": {
                                    "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                                    "type": "boolean",
                                    "default": false
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "sharedDevice": {
                                    "description": "Set to `false` for transactions made on personal devices.",
                                    "type": "boolean",
                                    "default": false
                                  }
                                }
                              }
                            ],
                            "required": [
                              "sharedDevice"
                            ]
                          }
                        ]
                      },
                      "session": {
                        "title": "Session",
                        "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                        "type": "object",
                        "properties": {
                          "dy": {
                            "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                            "type": "string"
                          }
                        }
                      },
                      "context": {
                        "title": "Context",
                        "description": "The request's context.",
                        "type": "object",
                        "properties": {
                          "page": {
                            "description": "Data for the page currently being browsed.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                                "type": "string",
                                "enum": [
                                  "HOMEPAGE",
                                  "CATEGORY",
                                  "PRODUCT",
                                  "CART",
                                  "OTHER"
                                ],
                                "example": "HOMEPAGE"
                              },
                              "data": {
                                "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "p76311-020"
                                ]
                              },
                              "location": {
                                "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                                "type": "string",
                                "example": "https://shop.biz/nice-shirt-p76311.html"
                              },
                              "referrer": {
                                "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                                "type": "string",
                                "example": "https://google.cz"
                              },
                              "locale": {
                                "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                                "type": "string",
                                "example": "en_US"
                              }
                            },
                            "required": [
                              "type",
                              "location"
                            ]
                          },
                          "device": {
                            "description": "Data for the served device.",
                            "type": "object",
                            "properties": {
                              "userAgent": {
                                "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                                "type": "string",
                                "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                              },
                              "type": {
                                "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
                                "type": "string",
                                "enum": [
                                  "DESKTOP",
                                  "SMARTPHONE",
                                  "TABLET",
                                  "KIOSK",
                                  "ODMB"
                                ]
                              },
                              "browser": {
                                "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                                "type": "string",
                                "enum": [
                                  "Chrome",
                                  "Firefox",
                                  "Opera",
                                  "Safari",
                                  "Other"
                                ],
                                "example": "Firefox"
                              },
                              "ip": {
                                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                                "type": "string",
                                "example": "54.100.200.255"
                              },
                              "dateTime": {
                                "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                                "type": "string",
                                "example": "2024-01-01T22:30:00.000-05:00"
                              },
                              "id": {
                                "description": "The identifier of the device in the branch.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "dateTime",
                              "type"
                            ]
                          },
                          "branch": {
                            "description": "Use to recommend only items in stock at the branch the user is browsing.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The ID of the branch the recommendation is for.",
                                "type": "string"
                              },
                              "dayPart": {
                                "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                                "type": "string",
                                "enum": [
                                  "BREAKFAST",
                                  "LUNCH",
                                  "DINNER",
                                  "LATENIGHT"
                                ]
                              },
                              "orderFulfillment": {
                                "description": "The fulfillment type of the order the request relates to.",
                                "type": "string",
                                "enum": [
                                  "DELIVERY",
                                  "PICKUP",
                                  "DINEIN",
                                  "CURBSIDE"
                                ]
                              }
                            },
                            "required": [
                              "dayPart"
                            ]
                          },
                          "channel": {
                            "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
                            "type": "string",
                            "enum": [
                              "WEB",
                              "APP",
                              "KIOSK",
                              "DRIVE-THRU"
                            ]
                          },
                          "cart": {
                            "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "productId": {
                                  "description": "The product ID from the restaurant product catalog.",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "Number of items.",
                                  "type": "number"
                                },
                                "itemPrice": {
                                  "description": "unit.cents format using the section default currency.",
                                  "type": "number",
                                  "example": 23.99
                                },
                                "innerProducts": {
                                  "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "The product ID from the restaurant product catalog.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number"
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    },
                                    "required": [
                                      "productId"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "productId"
                              ]
                            }
                          },
                          "pageAttributes": {
                            "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "branch",
                          "channel"
                        ]
                      },
                      "selector": {
                        "title": "Selector",
                        "description": "Campaigns to choose variations for.",
                        "type": "object",
                        "properties": {
                          "names": {
                            "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Banner Main",
                              "German Banner",
                              "PDP Recs Tray"
                            ]
                          },
                          "groups": {
                            "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "preview": {
                            "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                            "type": "object",
                            "properties": {
                              "ids": {
                                "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "ids"
                            ]
                          },
                          "args": {
                            "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                              "type": "object",
                              "properties": {
                                "realtimeRules": {
                                  "description": "A list of realtime filtering rules.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Valid values are: `include`, `exclude`.",
                                        "type": "string",
                                        "enum": [
                                          "include",
                                          "exclude"
                                        ]
                                      },
                                      "slots": {
                                        "description": "All or specific slot positions. The first slot is in position 0.",
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "query": {
                                        "description": "The filtering query.",
                                        "type": "object",
                                        "properties": {
                                          "conditions": {
                                            "description": "The realtime rule's query conditions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "field": {
                                                  "description": "Field within the returned results to apply the query for.",
                                                  "type": "string",
                                                  "example": "categories"
                                                },
                                                "arguments": {
                                                  "description": "A list of arguments for a query condition.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "action": {
                                                        "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                                        "type": "string",
                                                        "enum": [
                                                          "IS",
                                                          "IS_NOT",
                                                          "CONTAINS",
                                                          "EQ",
                                                          "GT",
                                                          "GTE",
                                                          "LT",
                                                          "LTE"
                                                        ]
                                                      },
                                                      "value": {
                                                        "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                                        "example": "basketball"
                                                      }
                                                    },
                                                    "required": [
                                                      "action",
                                                      "value"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "field",
                                                "arguments"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "names"
                        ]
                      },
                      "options": {
                        "title": "Options",
                        "description": "Request configuration parameters.",
                        "type": "object",
                        "properties": {
                          "isImplicitPageview": {
                            "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                            "type": "boolean",
                            "default": false
                          },
                          "returnAnalyticsMetadata": {
                            "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                            "type": "boolean",
                            "default": false
                          },
                          "isImplicitImpressionMode": {
                            "description": "Report an impression of the chosen variation. For Restaurants, this is set to `false` by default, which means that impressions should be reported explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call. Pass this as `true` in case the user's impression of the variation should be reported immediately when the variation is chosen.",
                            "type": "boolean",
                            "default": false
                          },
                          "isImplicitClientData": {
                            "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                            "type": "boolean",
                            "default": false
                          },
                          "recsProductData": {
                            "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                            "type": "object",
                            "properties": {
                              "fieldFilter": {
                                "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "skusOnly": {
                                "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "user",
                      "session",
                      "context",
                      "selector"
                    ]
                  }
                ]
              },
              "examples": {
                "ChooseRequestExample": {
                  "value": {
                    "user": {
                      "dyid": "-4350463893986789401",
                      "dyid_server": "-4350463893986789401"
                    },
                    "session": {
                      "dy": "ohyr6v42l9zd4bpinnvp7urjjx9lrssw"
                    },
                    "selector": {
                      "names": [
                        "PDP Top Banner",
                        "PDP Recs"
                      ]
                    },
                    "context": {
                      "page": {
                        "type": "PRODUCT",
                        "data": [
                          "7383723-010"
                        ],
                        "location": "<https://sugoi-ne.com/men-pants/p7383723-010>",
                        "referrer": "<https://sugoi-ne.com/men-pants>",
                        "locale": "en_US"
                      },
                      "device": {
                        "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
                        "ip": "54.100.200.255"
                      },
                      "pageAttributes": {
                        "customPageAttribute": "someValue"
                      }
                    },
                    "options": {
                      "isImplicitPageview": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Variation chosen successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Choice",
                  "type": "object",
                  "properties": {
                    "choices": {
                      "description": "The chosen variation for each campaign.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "type: DECISION",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "default": "DECISION",
                                "pattern": "DECISION"
                              },
                              "variations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "oneOf": [
                                        {
                                          "title": "Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "CUSTOM_JSON",
                                              "pattern": "CUSTOM_JSON"
                                            },
                                            "data": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        {
                                          "title": "Control Group Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "CUSTOM_JSON_CONTROL_GROUP_VARIATION",
                                              "pattern": "CUSTOM_JSON_CONTROL_GROUP_VARIATION"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "analyticsMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "campaignId": {
                                          "type": "number"
                                        },
                                        "campaignName": {
                                          "type": "string"
                                        },
                                        "experienceId": {
                                          "type": "number"
                                        },
                                        "experienceName": {
                                          "type": "string"
                                        },
                                        "variationId": {
                                          "type": "number"
                                        },
                                        "variationName": {
                                          "type": "string",
                                          "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "decisionId": {
                                "type": "string"
                              },
                              "allocationGroup": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "title": "type: RECS_DECISION",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "default": "RECS_DECISION",
                                "pattern": "RECS_DECISION"
                              },
                              "variations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "oneOf": [
                                        {
                                          "title": "Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "RECS",
                                              "pattern": "RECS"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {
                                                "custom": {
                                                  "type": "object"
                                                },
                                                "slots": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sku": {
                                                        "type": "string"
                                                      },
                                                      "slotId": {
                                                        "type": "string"
                                                      },
                                                      "productData": {
                                                        "type": "object"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "title": "Control Group Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "RECS_CONTROL_GROUP_VARIATION",
                                              "pattern": "RECS_CONTROL_GROUP_VARIATION"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "analyticsMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "campaignId": {
                                          "type": "number"
                                        },
                                        "campaignName": {
                                          "type": "string"
                                        },
                                        "experienceId": {
                                          "type": "number"
                                        },
                                        "experienceName": {
                                          "type": "string"
                                        },
                                        "variationId": {
                                          "type": "number"
                                        },
                                        "variationName": {
                                          "type": "string",
                                          "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "decisionId": {
                                "type": "string"
                              },
                              "allocationGroup": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "title": "type: STORE_RECS_DECISION",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "default": "STORE_RECS_DECISION",
                                "pattern": "STORE_RECS_DECISION"
                              },
                              "variations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "oneOf": [
                                        {
                                          "title": "Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "STORE_RECS",
                                              "pattern": "STORE_RECS"
                                            },
                                            "data": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        {
                                          "title": "Control Group Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "STORE_RECS_CONTROL_GROUP_VARIATION",
                                              "pattern": "STORE_RECS_CONTROL_GROUP_VARIATION"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "analyticsMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "campaignId": {
                                          "type": "number"
                                        },
                                        "campaignName": {
                                          "type": "string"
                                        },
                                        "experienceId": {
                                          "type": "number"
                                        },
                                        "experienceName": {
                                          "type": "string"
                                        },
                                        "variationId": {
                                          "type": "number"
                                        },
                                        "variationName": {
                                          "type": "string",
                                          "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "decisionId": {
                                "type": "string"
                              },
                              "allocationGroup": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "title": "type: SORTING_DECISION",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string",
                                "default": "SORTING_DECISION",
                                "pattern": "SORTING_DECISION"
                              },
                              "decisionId": {
                                "type": "string"
                              },
                              "variations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "payload": {
                                      "oneOf": [
                                        {
                                          "title": "Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "SORT",
                                              "pattern": "SORT"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {
                                                "slots": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sku": {
                                                        "type": "string"
                                                      },
                                                      "slotId": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "title": "Control Group Payload",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "SORT_CONTROL_GROUP_VARIATION",
                                              "pattern": "SORT_CONTROL_GROUP_VARIATION"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "analyticsMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "campaignId": {
                                          "type": "number"
                                        },
                                        "campaignName": {
                                          "type": "string"
                                        },
                                        "experienceId": {
                                          "type": "number"
                                        },
                                        "experienceName": {
                                          "type": "string"
                                        },
                                        "variationId": {
                                          "type": "number"
                                        },
                                        "variationName": {
                                          "type": "string",
                                          "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "cookies": {
                      "description": "Cookies returned from the server.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "warnings": {
                      "description": "Errors returned by the server.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "ChooseResponseExample": {
                    "value": {
                      "choices": [
                        {
                          "id": 5,
                          "name": "PDP Top Banner",
                          "type": "DECISION",
                          "decisionId": "aGVsbG8K",
                          "variations": [
                            {
                              "id": 52,
                              "payload": {
                                "type": "CUSTOM_JSON",
                                "data": {
                                  "key1": "value1",
                                  "key2": "value2"
                                }
                              },
                              "analyticsMetadata": {
                                "campaignId": 771007,
                                "campaignName": "Global control group",
                                "experienceId": 1464264,
                                "experienceName": "Served DY",
                                "variationId": 27883308,
                                "variationName": "Variation 1"
                              }
                            }
                          ]
                        },
                        {
                          "id": 24,
                          "name": "PDP Recs",
                          "type": "RECS_DECISION",
                          "decisionId": "d29ybGQK",
                          "variations": [
                            {
                              "id": 203,
                              "payload": {
                                "type": "RECS",
                                "data": {
                                  "slots": [
                                    {
                                      "slotId": "aGVsbG93b3JsZAo=",
                                      "sku": "6323723",
                                      "productData": {
                                        "name": "Plaid shirt",
                                        "price": 39.99,
                                        "url": "https://website.com/men-pants/p6323723-020"
                                      }
                                    },
                                    {
                                      "slotId": "d2VsY29tZWR1ZAo=",
                                      "sku": "5413764",
                                      "productData": {
                                        "name": "Khaki pants",
                                        "price": 59.99,
                                        "url": "https://website.com/men-pants/p5413764-010"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "ChooseResponseExampleControl": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "choices": [
                          {
                            "id": "652700",
                            "name": "demoBanner",
                            "type": "DECISION",
                            "variations": null,
                            "groups": [
                              "demo"
                            ],
                            "decisionId": "mbQtNDMxOTQxODU1MTU3ODI0MjY2Ms4AGKErqDEyNjkyNjU4AJECkc4BsFonpTQ1OTg4wMA="
                          }
                        ],
                        "cookies": [
                          {
                            "name": "_dyid_server",
                            "value": "7282320792394869879",
                            "maxAge": "31556926"
                          },
                          {
                            "name": "_dyjsession",
                            "value": "e3xi77qrxbsxxxmi18d8kxek6tdd12qj",
                            "maxAge": "1800"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Error code.",
                      "type": "string",
                      "example": "401"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response object for an invalid request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error description.",
                      "type": "string",
                      "example": "request must contain context page location"
                    },
                    "type": {
                      "description": "The type of error encountered.",
                      "type": "string",
                      "example": "badRequest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/serve/user/search": {
      "summary": "Search",
      "post": {
        "summary": "Search",
        "description": "Get search variations for Semantic Search, Visual Search, and Shopping Muse campaigns.",
        "operationId": "search",
        "tags": [
          "Experience APIs"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "Search Request - E-Commerce",
                "type": "object",
                "properties": {
                  "user": {
                    "title": "User",
                    "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                    "type": "object",
                    "properties": {
                      "dyid": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "dyid_server": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "active_consent_accepted": {
                        "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  "session": {
                    "title": "Session",
                    "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                    "type": "object",
                    "properties": {
                      "dy": {
                        "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                        "type": "string"
                      }
                    }
                  },
                  "query": {
                    "oneOf": [
                      {
                        "title": "Semantic Search Query",
                        "description": "The user query for which to conduct the search.",
                        "type": "object",
                        "properties": {
                          "text": {
                            "description": "The user's input text that specifies what should be searched.",
                            "type": "string"
                          },
                          "filters": {
                            "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "title": "Numeric Filter",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "description": "Column name, as reported in the product feed.",
                                      "type": "string"
                                    },
                                    "min": {
                                      "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                                      "type": "number"
                                    },
                                    "max": {
                                      "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "field"
                                  ]
                                },
                                {
                                  "title": "String Filter",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "description": "Column name, as reported in the product feed.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "field"
                                  ]
                                }
                              ]
                            }
                          },
                          "pagination": {
                            "description": "Pagination parameters for the query result.",
                            "type": "object",
                            "properties": {
                              "numItems": {
                                "description": "The number of items to be returned in the query result.",
                                "type": "number"
                              },
                              "offset": {
                                "description": "The starting offset.",
                                "type": "number"
                              }
                            },
                            "required": [
                              "numItems",
                              "offset"
                            ]
                          }
                        },
                        "required": [
                          "text",
                          "pagination"
                        ]
                      },
                      {
                        "title": "Visual Search Query",
                        "description": "The user query for which to conduct the search.",
                        "type": "object",
                        "properties": {
                          "imageBase64": {
                            "description": "A base64 representation of the input image.",
                            "type": "string"
                          },
                          "filters": {
                            "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "title": "Numeric Filter",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "description": "Column name, as reported in the product feed.",
                                      "type": "string"
                                    },
                                    "min": {
                                      "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                                      "type": "number"
                                    },
                                    "max": {
                                      "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "field"
                                  ]
                                },
                                {
                                  "title": "String Filter",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "description": "Column name, as reported in the product feed.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "field"
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "imageBase64"
                        ]
                      },
                      {
                        "title": "Shopping Muse Query",
                        "description": "The user prompt and conversation ID for triggering a contextual Shopping Muse response.",
                        "type": "object",
                        "properties": {
                          "text": {
                            "description": "The user's prompt that specifies a search request, question or an answer.",
                            "type": "string"
                          },
                          "chatId": {
                            "description": "A unique identifier used to maintain conversational context. Include `chatId` when sending follow-up requests related to the response that contains it.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "text"
                        ]
                      }
                    ]
                  },
                  "context": {
                    "title": "Context",
                    "description": "The request's context.",
                    "type": "object",
                    "properties": {
                      "page": {
                        "description": "Data for the page currently being browsed.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                            "type": "string",
                            "enum": [
                              "HOMEPAGE",
                              "CATEGORY",
                              "PRODUCT",
                              "CART",
                              "OTHER"
                            ],
                            "example": "HOMEPAGE"
                          },
                          "data": {
                            "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "p76311-020"
                            ]
                          },
                          "location": {
                            "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                            "type": "string",
                            "example": "https://shop.biz/nice-shirt-p76311.html"
                          },
                          "referrer": {
                            "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                            "type": "string",
                            "example": "https://google.cz"
                          },
                          "locale": {
                            "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                            "type": "string",
                            "example": "en_US"
                          }
                        },
                        "required": [
                          "type",
                          "location"
                        ]
                      },
                      "device": {
                        "description": "Data for the served device.",
                        "type": "object",
                        "properties": {
                          "userAgent": {
                            "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                            "type": "string",
                            "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                          },
                          "type": {
                            "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                            "type": "string",
                            "enum": [
                              "DESKTOP",
                              "SMARTPHONE",
                              "TABLET",
                              "KIOSK"
                            ]
                          },
                          "browser": {
                            "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                            "type": "string",
                            "enum": [
                              "Chrome",
                              "Firefox",
                              "Opera",
                              "Safari",
                              "Other"
                            ],
                            "example": "Firefox"
                          },
                          "ip": {
                            "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                            "type": "string",
                            "example": "54.100.200.255"
                          },
                          "dateTime": {
                            "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                            "type": "string",
                            "example": "2024-01-01T22:30:00.000-05:00"
                          }
                        }
                      },
                      "channel": {
                        "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                        "type": "string",
                        "enum": [
                          "WEB",
                          "APP"
                        ]
                      },
                      "pageAttributes": {
                        "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        }
                      },
                      "branch": {
                        "description": "The branch where the user experience is taking place.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The branch's unique identifier.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "page",
                      "device"
                    ]
                  },
                  "selector": {
                    "title": "Selector",
                    "description": "Campaigns to choose variations for.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The selector name for the applicable search campaign. Must be one of the following:<ul><li>`Semantic Search`</li><li>`Visual Search`</li><li>`Shopping Muse`</li></ul>",
                        "type": "string",
                        "enum": [
                          "Semantic Search",
                          "Visual Search",
                          "Shopping Muse"
                        ]
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "options": {
                    "title": "Options",
                    "description": "Request configuration parameters.",
                    "type": "object",
                    "properties": {
                      "returnAnalyticsMetadata": {
                        "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                        "type": "boolean",
                        "default": false
                      },
                      "isImplicitClientData": {
                        "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                        "type": "boolean",
                        "default": false
                      },
                      "recsProductData": {
                        "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                        "type": "object",
                        "properties": {
                          "fieldFilter": {
                            "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "skusOnly": {
                            "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "user",
                  "session",
                  "query",
                  "context",
                  "selector"
                ]
              },
              "examples": {
                "SearchRequestExample": {
                  "value": {
                    "query": {
                      "imageBase64": "bGlnaHQgd29yay4=",
                      "text": "dress",
                      "filters": [
                        {
                          "field": "category",
                          "values": [
                            "dresses",
                            "tops"
                          ]
                        },
                        {
                          "field": "price",
                          "min": 100,
                          "max": 200
                        }
                      ],
                      "pagination": {
                        "numItems": 10,
                        "offset": 0
                      },
                      "enableSpellCheck": true
                    },
                    "user": {
                      "active_consent_accepted": true,
                      "dyid": "122113",
                      "dyid_server": "3213213"
                    },
                    "session": {
                      "dy": "3123123"
                    },
                    "context": {
                      "page": {
                        "type": "HOMEPAGE",
                        "location": "https://shop.biz/nice-shirt-p76311.html",
                        "referrer": "https://google.cz",
                        "locale": "en_US"
                      }
                    },
                    "selector": {
                      "name": "Visual Search"
                    },
                    "options": {
                      "returnAnalyticsMetadata": false,
                      "isImplicitClientData": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query results returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Query Results",
                  "type": "object",
                  "properties": {
                    "choices": {
                      "description": "The chosen variation for each campaign.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "type: \"SEMANTIC_SEARCH_DECISION\"",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": "Semantic Search",
                                "pattern": "Semantic Search"
                              },
                              "type": {
                                "type": "string",
                                "default": "SEMANTIC_SEARCH_DECISION",
                                "pattern": "SEMANTIC_SEARCH_DECISION"
                              },
                              "variations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "SEARCH",
                                          "pattern": "SEARCH"
                                        },
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "totalNumResults": {
                                              "type": "number"
                                            },
                                            "facets": {
                                              "type": "array",
                                              "items": {
                                                "oneOf": [
                                                  {
                                                    "title": "valuesType: \"string\"",
                                                    "type": "object",
                                                    "properties": {
                                                      "column": {
                                                        "type": "string"
                                                      },
                                                      "valuesType": {
                                                        "type": "string",
                                                        "enum": [
                                                          "string"
                                                        ]
                                                      },
                                                      "displayName": {
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "count": {
                                                              "type": "number"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "title": "valuesType: \"number\"",
                                                    "type": "object",
                                                    "properties": {
                                                      "column": {
                                                        "type": "string"
                                                      },
                                                      "valuesType": {
                                                        "type": "string",
                                                        "enum": [
                                                          "number"
                                                        ]
                                                      },
                                                      "displayName": {
                                                        "type": "string"
                                                      },
                                                      "min": {
                                                        "type": "number"
                                                      },
                                                      "max": {
                                                        "type": "number"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "slots": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "slotId": {
                                                    "type": "string"
                                                  },
                                                  "sku": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "analyticsMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "campaignId": {
                                          "type": "number"
                                        },
                                        "campaignName": {
                                          "type": "string"
                                        },
                                        "experienceId": {
                                          "type": "number"
                                        },
                                        "experienceName": {
                                          "type": "string"
                                        },
                                        "variationId": {
                                          "type": "number"
                                        },
                                        "variationName": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "decisionId": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "title": "type: \"VISUAL_SEARCH_DECISION\"",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": "Visual Search",
                                "pattern": "Visual Search"
                              },
                              "type": {
                                "type": "string",
                                "default": "VISUAL_SEARCH_DECISION",
                                "pattern": "VISUAL_SEARCH_DECISION"
                              },
                              "variations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "SEARCH",
                                          "pattern": "SEARCH"
                                        },
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "totalNumResults": {
                                              "type": "number"
                                            },
                                            "facets": {
                                              "type": "array",
                                              "items": {
                                                "oneOf": [
                                                  {
                                                    "title": "valuesType: \"string\"",
                                                    "type": "object",
                                                    "properties": {
                                                      "column": {
                                                        "type": "string"
                                                      },
                                                      "valuesType": {
                                                        "type": "string",
                                                        "enum": [
                                                          "string"
                                                        ]
                                                      },
                                                      "displayName": {
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "count": {
                                                              "type": "number"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "title": "valuesType: \"number\"",
                                                    "type": "object",
                                                    "properties": {
                                                      "column": {
                                                        "type": "string"
                                                      },
                                                      "valuesType": {
                                                        "type": "string",
                                                        "enum": [
                                                          "number"
                                                        ]
                                                      },
                                                      "displayName": {
                                                        "type": "string"
                                                      },
                                                      "min": {
                                                        "type": "number"
                                                      },
                                                      "max": {
                                                        "type": "number"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "slots": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "slotId": {
                                                    "type": "string"
                                                  },
                                                  "sku": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "analyticsMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "campaignId": {
                                          "type": "number"
                                        },
                                        "campaignName": {
                                          "type": "string"
                                        },
                                        "experienceId": {
                                          "type": "number"
                                        },
                                        "experienceName": {
                                          "type": "string"
                                        },
                                        "variationId": {
                                          "type": "number"
                                        },
                                        "variationName": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "decisionId": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "title": "type: SHOPPING_MUSE_DECISION",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": "Shopping Muse",
                                "pattern": "Shopping Muse"
                              },
                              "type": {
                                "type": "string",
                                "default": "SHOPPING_MUSE_DECISION",
                                "pattern": "SHOPPING_MUSE_DECISION"
                              },
                              "variations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "SHOPPING_MUSE",
                                          "pattern": "SHOPPING_MUSE"
                                        },
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "assistant": {
                                              "type": "string"
                                            },
                                            "widgets": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string"
                                                  },
                                                  "slots": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "sku": {
                                                          "type": "string"
                                                        },
                                                        "slotId": {
                                                          "type": "string"
                                                        },
                                                        "productData": {
                                                          "type": "object"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "support": {
                                              "type": "boolean"
                                            },
                                            "chatId": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "analyticsMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "campaignId": {
                                          "type": "number"
                                        },
                                        "campaignName": {
                                          "type": "string"
                                        },
                                        "experienceId": {
                                          "type": "number"
                                        },
                                        "experienceName": {
                                          "type": "string"
                                        },
                                        "variationId": {
                                          "type": "number"
                                        },
                                        "variationName": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "decisionId": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "cookies": {
                      "description": "Cookies returned from the server.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "warnings": {
                      "description": "Errors returned by the server.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Error code.",
                      "type": "string",
                      "example": "401"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response object for an invalid request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error description.",
                      "type": "string",
                      "example": "request must contain context page location"
                    },
                    "type": {
                      "description": "The type of error encountered.",
                      "type": "string",
                      "example": "badRequest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChoosePayloadEcom": {
        "title": "Choose Request - E-Commerce",
        "type": "object",
        "properties": {
          "user": {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "page": {
                "description": "Data for the page currently being browsed.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                    "type": "string",
                    "enum": [
                      "HOMEPAGE",
                      "CATEGORY",
                      "PRODUCT",
                      "CART",
                      "OTHER"
                    ],
                    "example": "HOMEPAGE"
                  },
                  "data": {
                    "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "p76311-020"
                    ]
                  },
                  "location": {
                    "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                    "type": "string",
                    "example": "https://shop.biz/nice-shirt-p76311.html"
                  },
                  "referrer": {
                    "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                    "type": "string",
                    "example": "https://google.cz"
                  },
                  "locale": {
                    "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "string",
                    "example": "en_US"
                  }
                },
                "required": [
                  "type",
                  "location"
                ]
              },
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "userAgent": {
                    "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                    "type": "string",
                    "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                  },
                  "type": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                    "type": "string",
                    "enum": [
                      "DESKTOP",
                      "SMARTPHONE",
                      "TABLET",
                      "KIOSK"
                    ]
                  },
                  "browser": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                    "type": "string",
                    "enum": [
                      "Chrome",
                      "Firefox",
                      "Opera",
                      "Safari",
                      "Other"
                    ],
                    "example": "Firefox"
                  },
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  },
                  "dateTime": {
                    "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                    "type": "string",
                    "example": "2024-01-01T22:30:00.000-05:00"
                  }
                }
              },
              "channel": {
                "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP"
                ]
              },
              "pageAttributes": {
                "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              },
              "listedItems": {
                "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "SKU1",
                  "SKU2"
                ]
              },
              "branch": {
                "description": "The branch where the user experience is taking place.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The branch's unique identifier.",
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "required": [
              "page",
              "device"
            ]
          },
          "selector": {
            "title": "Selector",
            "description": "Campaigns to choose variations for.",
            "type": "object",
            "properties": {
              "names": {
                "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "Banner Main",
                  "German Banner",
                  "PDP Recs Tray"
                ]
              },
              "groups": {
                "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "preview": {
                "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "ids"
                ]
              },
              "args": {
                "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                "type": "object",
                "additionalProperties": {
                  "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                  "type": "object",
                  "properties": {
                    "realtimeRules": {
                      "description": "A list of realtime filtering rules.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Valid values are: `include`, `exclude`.",
                            "type": "string",
                            "enum": [
                              "include",
                              "exclude"
                            ]
                          },
                          "slots": {
                            "description": "All or specific slot positions. The first slot is in position 0.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "query": {
                            "description": "The filtering query.",
                            "type": "object",
                            "properties": {
                              "conditions": {
                                "description": "The realtime rule's query conditions.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "description": "Field within the returned results to apply the query for.",
                                      "type": "string",
                                      "example": "categories"
                                    },
                                    "arguments": {
                                      "description": "A list of arguments for a query condition.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                            "type": "string",
                                            "enum": [
                                              "IS",
                                              "IS_NOT",
                                              "CONTAINS",
                                              "EQ",
                                              "GT",
                                              "GTE",
                                              "LT",
                                              "LTE"
                                            ]
                                          },
                                          "value": {
                                            "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                            "example": "basketball"
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "value"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "field",
                                    "arguments"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "names"
            ]
          },
          "options": {
            "title": "Options",
            "description": "Request configuration parameters.",
            "type": "object",
            "properties": {
              "isImplicitPageview": {
                "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                "type": "boolean",
                "default": false
              },
              "returnAnalyticsMetadata": {
                "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                "type": "boolean",
                "default": false
              },
              "isImplicitImpressionMode": {
                "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
                "type": "boolean",
                "default": true
              },
              "isImplicitClientData": {
                "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                "type": "boolean",
                "default": false
              },
              "recsProductData": {
                "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                "type": "object",
                "properties": {
                  "fieldFilter": {
                    "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "skusOnly": {
                    "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "required": [
          "user",
          "session",
          "context",
          "selector"
        ]
      },
      "ChoosePayloadFi": {
        "allOf": [
          {
            "title": "Choose Request - Financial Institutions"
          },
          {
            "title": "Choose Request - E-Commerce",
            "type": "object",
            "properties": {
              "user": {
                "title": "User",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                "type": "object",
                "properties": {
                  "dyid": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "dyid_server": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "active_consent_accepted": {
                    "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "session": {
                "title": "Session",
                "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                "type": "object",
                "properties": {
                  "dy": {
                    "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                    "type": "string"
                  }
                }
              },
              "context": {
                "title": "Context",
                "description": "The request's context.",
                "type": "object",
                "properties": {
                  "page": {
                    "description": "Data for the page currently being browsed.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                        "type": "string",
                        "enum": [
                          "HOMEPAGE",
                          "CATEGORY",
                          "PRODUCT",
                          "CART",
                          "OTHER"
                        ],
                        "example": "HOMEPAGE"
                      },
                      "data": {
                        "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "p76311-020"
                        ]
                      },
                      "location": {
                        "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                        "type": "string",
                        "example": "https://shop.biz/nice-shirt-p76311.html"
                      },
                      "referrer": {
                        "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                        "type": "string",
                        "example": "https://google.cz"
                      },
                      "locale": {
                        "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                        "type": "string",
                        "example": "en_US"
                      }
                    },
                    "required": [
                      "type",
                      "location"
                    ]
                  },
                  "device": {
                    "description": "Data for the served device.",
                    "type": "object",
                    "properties": {
                      "userAgent": {
                        "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                        "type": "string",
                        "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                      },
                      "type": {
                        "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                        "type": "string",
                        "enum": [
                          "DESKTOP",
                          "SMARTPHONE",
                          "TABLET",
                          "KIOSK"
                        ]
                      },
                      "browser": {
                        "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                        "type": "string",
                        "enum": [
                          "Chrome",
                          "Firefox",
                          "Opera",
                          "Safari",
                          "Other"
                        ],
                        "example": "Firefox"
                      },
                      "ip": {
                        "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                        "type": "string",
                        "example": "54.100.200.255"
                      },
                      "dateTime": {
                        "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                        "type": "string",
                        "example": "2024-01-01T22:30:00.000-05:00"
                      }
                    }
                  },
                  "channel": {
                    "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                    "type": "string",
                    "enum": [
                      "WEB",
                      "APP"
                    ]
                  },
                  "pageAttributes": {
                    "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    }
                  },
                  "listedItems": {
                    "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "SKU1",
                      "SKU2"
                    ]
                  },
                  "branch": {
                    "description": "The branch where the user experience is taking place.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The branch's unique identifier.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "required": [
                  "page",
                  "device"
                ]
              },
              "selector": {
                "title": "Selector",
                "description": "Campaigns to choose variations for.",
                "type": "object",
                "properties": {
                  "names": {
                    "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "Banner Main",
                      "German Banner",
                      "PDP Recs Tray"
                    ]
                  },
                  "groups": {
                    "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "preview": {
                    "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                    "type": "object",
                    "properties": {
                      "ids": {
                        "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "ids"
                    ]
                  },
                  "args": {
                    "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                      "type": "object",
                      "properties": {
                        "realtimeRules": {
                          "description": "A list of realtime filtering rules.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Valid values are: `include`, `exclude`.",
                                "type": "string",
                                "enum": [
                                  "include",
                                  "exclude"
                                ]
                              },
                              "slots": {
                                "description": "All or specific slot positions. The first slot is in position 0.",
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "query": {
                                "description": "The filtering query.",
                                "type": "object",
                                "properties": {
                                  "conditions": {
                                    "description": "The realtime rule's query conditions.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "field": {
                                          "description": "Field within the returned results to apply the query for.",
                                          "type": "string",
                                          "example": "categories"
                                        },
                                        "arguments": {
                                          "description": "A list of arguments for a query condition.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "action": {
                                                "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                                "type": "string",
                                                "enum": [
                                                  "IS",
                                                  "IS_NOT",
                                                  "CONTAINS",
                                                  "EQ",
                                                  "GT",
                                                  "GTE",
                                                  "LT",
                                                  "LTE"
                                                ]
                                              },
                                              "value": {
                                                "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                                "example": "basketball"
                                              }
                                            },
                                            "required": [
                                              "action",
                                              "value"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "field",
                                        "arguments"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "names"
                ]
              },
              "options": {
                "title": "Options",
                "description": "Request configuration parameters.",
                "type": "object",
                "properties": {
                  "isImplicitPageview": {
                    "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                    "type": "boolean",
                    "default": false
                  },
                  "returnAnalyticsMetadata": {
                    "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                    "type": "boolean",
                    "default": false
                  },
                  "isImplicitImpressionMode": {
                    "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
                    "type": "boolean",
                    "default": true
                  },
                  "isImplicitClientData": {
                    "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                    "type": "boolean",
                    "default": false
                  },
                  "recsProductData": {
                    "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                    "type": "object",
                    "properties": {
                      "fieldFilter": {
                        "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "skusOnly": {
                        "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "user",
              "session",
              "context",
              "selector"
            ]
          }
        ]
      },
      "ChoosePayloadQsr": {
        "title": "Choose Request - Restaurants",
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "title": "User (sharedDevice: true)",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                "type": "object",
                "properties": {
                  "sharedDevice": {
                    "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                    "type": "boolean",
                    "default": true
                  },
                  "cuid": {
                    "description": "User identifier value. Required for identified user flows.",
                    "type": "string"
                  },
                  "cuidType": {
                    "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**<br>Required for identified user flows.",
                    "type": "string"
                  }
                },
                "required": [
                  "sharedDevice"
                ]
              },
              {
                "allOf": [
                  {
                    "title": "User (sharedDevice: false)"
                  },
                  {
                    "title": "User",
                    "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                    "type": "object",
                    "properties": {
                      "dyid": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "dyid_server": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "active_consent_accepted": {
                        "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  {
                    "properties": {
                      "sharedDevice": {
                        "description": "Set to `false` for transactions made on personal devices.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                ],
                "required": [
                  "sharedDevice"
                ]
              }
            ]
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "page": {
                "description": "Data for the page currently being browsed.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                    "type": "string",
                    "enum": [
                      "HOMEPAGE",
                      "CATEGORY",
                      "PRODUCT",
                      "CART",
                      "OTHER"
                    ],
                    "example": "HOMEPAGE"
                  },
                  "data": {
                    "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "p76311-020"
                    ]
                  },
                  "location": {
                    "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                    "type": "string",
                    "example": "https://shop.biz/nice-shirt-p76311.html"
                  },
                  "referrer": {
                    "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                    "type": "string",
                    "example": "https://google.cz"
                  },
                  "locale": {
                    "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "string",
                    "example": "en_US"
                  }
                },
                "required": [
                  "type",
                  "location"
                ]
              },
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "userAgent": {
                    "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                    "type": "string",
                    "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                  },
                  "type": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
                    "type": "string",
                    "enum": [
                      "DESKTOP",
                      "SMARTPHONE",
                      "TABLET",
                      "KIOSK",
                      "ODMB"
                    ]
                  },
                  "browser": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                    "type": "string",
                    "enum": [
                      "Chrome",
                      "Firefox",
                      "Opera",
                      "Safari",
                      "Other"
                    ],
                    "example": "Firefox"
                  },
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  },
                  "dateTime": {
                    "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                    "type": "string",
                    "example": "2024-01-01T22:30:00.000-05:00"
                  },
                  "id": {
                    "description": "The identifier of the device in the branch.",
                    "type": "string"
                  }
                },
                "required": [
                  "dateTime",
                  "type"
                ]
              },
              "branch": {
                "description": "Use to recommend only items in stock at the branch the user is browsing.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the branch the recommendation is for.",
                    "type": "string"
                  },
                  "dayPart": {
                    "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                    "type": "string",
                    "enum": [
                      "BREAKFAST",
                      "LUNCH",
                      "DINNER",
                      "LATENIGHT"
                    ]
                  },
                  "orderFulfillment": {
                    "description": "The fulfillment type of the order the request relates to.",
                    "type": "string",
                    "enum": [
                      "DELIVERY",
                      "PICKUP",
                      "DINEIN",
                      "CURBSIDE"
                    ]
                  }
                },
                "required": [
                  "dayPart"
                ]
              },
              "channel": {
                "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP",
                  "KIOSK",
                  "DRIVE-THRU"
                ]
              },
              "cart": {
                "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productId": {
                      "description": "The product ID from the restaurant product catalog.",
                      "type": "string"
                    },
                    "quantity": {
                      "description": "Number of items.",
                      "type": "number"
                    },
                    "itemPrice": {
                      "description": "unit.cents format using the section default currency.",
                      "type": "number",
                      "example": 23.99
                    },
                    "innerProducts": {
                      "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "description": "The product ID from the restaurant product catalog.",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "Number of items.",
                            "type": "number"
                          },
                          "itemPrice": {
                            "description": "unit.cents format using the section default currency.",
                            "type": "number",
                            "example": 23.99
                          }
                        },
                        "required": [
                          "productId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "productId"
                  ]
                }
              },
              "pageAttributes": {
                "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              }
            },
            "required": [
              "branch",
              "channel"
            ]
          },
          "selector": {
            "title": "Selector",
            "description": "Campaigns to choose variations for.",
            "type": "object",
            "properties": {
              "names": {
                "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "Banner Main",
                  "German Banner",
                  "PDP Recs Tray"
                ]
              },
              "groups": {
                "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "preview": {
                "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "ids"
                ]
              },
              "args": {
                "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                "type": "object",
                "additionalProperties": {
                  "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                  "type": "object",
                  "properties": {
                    "realtimeRules": {
                      "description": "A list of realtime filtering rules.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Valid values are: `include`, `exclude`.",
                            "type": "string",
                            "enum": [
                              "include",
                              "exclude"
                            ]
                          },
                          "slots": {
                            "description": "All or specific slot positions. The first slot is in position 0.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "query": {
                            "description": "The filtering query.",
                            "type": "object",
                            "properties": {
                              "conditions": {
                                "description": "The realtime rule's query conditions.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "description": "Field within the returned results to apply the query for.",
                                      "type": "string",
                                      "example": "categories"
                                    },
                                    "arguments": {
                                      "description": "A list of arguments for a query condition.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                            "type": "string",
                                            "enum": [
                                              "IS",
                                              "IS_NOT",
                                              "CONTAINS",
                                              "EQ",
                                              "GT",
                                              "GTE",
                                              "LT",
                                              "LTE"
                                            ]
                                          },
                                          "value": {
                                            "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                            "example": "basketball"
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "value"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "field",
                                    "arguments"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "names"
            ]
          },
          "options": {
            "title": "Options",
            "description": "Request configuration parameters.",
            "type": "object",
            "properties": {
              "isImplicitPageview": {
                "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                "type": "boolean",
                "default": false
              },
              "returnAnalyticsMetadata": {
                "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                "type": "boolean",
                "default": false
              },
              "isImplicitImpressionMode": {
                "description": "Report an impression of the chosen variation. For Restaurants, this is set to `false` by default, which means that impressions should be reported explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call. Pass this as `true` in case the user's impression of the variation should be reported immediately when the variation is chosen.",
                "type": "boolean",
                "default": false
              },
              "isImplicitClientData": {
                "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                "type": "boolean",
                "default": false
              },
              "recsProductData": {
                "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                "type": "object",
                "properties": {
                  "fieldFilter": {
                    "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "skusOnly": {
                    "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "required": [
          "user",
          "session",
          "context",
          "selector"
        ]
      },
      "SearchPayloadEcom": {
        "title": "Search Request - E-Commerce",
        "type": "object",
        "properties": {
          "user": {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                "type": "string"
              }
            }
          },
          "query": {
            "oneOf": [
              {
                "title": "Semantic Search Query",
                "description": "The user query for which to conduct the search.",
                "type": "object",
                "properties": {
                  "text": {
                    "description": "The user's input text that specifies what should be searched.",
                    "type": "string"
                  },
                  "filters": {
                    "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "title": "Numeric Filter",
                          "type": "object",
                          "properties": {
                            "field": {
                              "description": "Column name, as reported in the product feed.",
                              "type": "string"
                            },
                            "min": {
                              "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                              "type": "number"
                            },
                            "max": {
                              "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "field"
                          ]
                        },
                        {
                          "title": "String Filter",
                          "type": "object",
                          "properties": {
                            "field": {
                              "description": "Column name, as reported in the product feed.",
                              "type": "string"
                            },
                            "values": {
                              "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field"
                          ]
                        }
                      ]
                    }
                  },
                  "pagination": {
                    "description": "Pagination parameters for the query result.",
                    "type": "object",
                    "properties": {
                      "numItems": {
                        "description": "The number of items to be returned in the query result.",
                        "type": "number"
                      },
                      "offset": {
                        "description": "The starting offset.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "numItems",
                      "offset"
                    ]
                  }
                },
                "required": [
                  "text",
                  "pagination"
                ]
              },
              {
                "title": "Visual Search Query",
                "description": "The user query for which to conduct the search.",
                "type": "object",
                "properties": {
                  "imageBase64": {
                    "description": "A base64 representation of the input image.",
                    "type": "string"
                  },
                  "filters": {
                    "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "title": "Numeric Filter",
                          "type": "object",
                          "properties": {
                            "field": {
                              "description": "Column name, as reported in the product feed.",
                              "type": "string"
                            },
                            "min": {
                              "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                              "type": "number"
                            },
                            "max": {
                              "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "field"
                          ]
                        },
                        {
                          "title": "String Filter",
                          "type": "object",
                          "properties": {
                            "field": {
                              "description": "Column name, as reported in the product feed.",
                              "type": "string"
                            },
                            "values": {
                              "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "imageBase64"
                ]
              },
              {
                "title": "Shopping Muse Query",
                "description": "The user prompt and conversation ID for triggering a contextual Shopping Muse response.",
                "type": "object",
                "properties": {
                  "text": {
                    "description": "The user's prompt that specifies a search request, question or an answer.",
                    "type": "string"
                  },
                  "chatId": {
                    "description": "A unique identifier used to maintain conversational context. Include `chatId` when sending follow-up requests related to the response that contains it.",
                    "type": "string"
                  }
                },
                "required": [
                  "text"
                ]
              }
            ]
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "page": {
                "description": "Data for the page currently being browsed.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                    "type": "string",
                    "enum": [
                      "HOMEPAGE",
                      "CATEGORY",
                      "PRODUCT",
                      "CART",
                      "OTHER"
                    ],
                    "example": "HOMEPAGE"
                  },
                  "data": {
                    "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "p76311-020"
                    ]
                  },
                  "location": {
                    "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                    "type": "string",
                    "example": "https://shop.biz/nice-shirt-p76311.html"
                  },
                  "referrer": {
                    "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                    "type": "string",
                    "example": "https://google.cz"
                  },
                  "locale": {
                    "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "string",
                    "example": "en_US"
                  }
                },
                "required": [
                  "type",
                  "location"
                ]
              },
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "userAgent": {
                    "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                    "type": "string",
                    "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                  },
                  "type": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                    "type": "string",
                    "enum": [
                      "DESKTOP",
                      "SMARTPHONE",
                      "TABLET",
                      "KIOSK"
                    ]
                  },
                  "browser": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                    "type": "string",
                    "enum": [
                      "Chrome",
                      "Firefox",
                      "Opera",
                      "Safari",
                      "Other"
                    ],
                    "example": "Firefox"
                  },
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  },
                  "dateTime": {
                    "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                    "type": "string",
                    "example": "2024-01-01T22:30:00.000-05:00"
                  }
                }
              },
              "channel": {
                "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP"
                ]
              },
              "pageAttributes": {
                "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              },
              "branch": {
                "description": "The branch where the user experience is taking place.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The branch's unique identifier.",
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "required": [
              "page",
              "device"
            ]
          },
          "selector": {
            "title": "Selector",
            "description": "Campaigns to choose variations for.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The selector name for the applicable search campaign. Must be one of the following:<ul><li>`Semantic Search`</li><li>`Visual Search`</li><li>`Shopping Muse`</li></ul>",
                "type": "string",
                "enum": [
                  "Semantic Search",
                  "Visual Search",
                  "Shopping Muse"
                ]
              }
            },
            "required": [
              "name"
            ]
          },
          "options": {
            "title": "Options",
            "description": "Request configuration parameters.",
            "type": "object",
            "properties": {
              "returnAnalyticsMetadata": {
                "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                "type": "boolean",
                "default": false
              },
              "isImplicitClientData": {
                "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                "type": "boolean",
                "default": false
              },
              "recsProductData": {
                "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                "type": "object",
                "properties": {
                  "fieldFilter": {
                    "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "skusOnly": {
                    "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "required": [
          "user",
          "session",
          "query",
          "context",
          "selector"
        ]
      },
      "EngagementPayloadEcom": {
        "title": "Engagement Request - E-Commerce",
        "type": "object",
        "properties": {
          "user": {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  }
                }
              },
              "channel": {
                "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP"
                ]
              }
            }
          },
          "engagements": {
            "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Engagement (type: IMP, CLICK)",
                  "description": "A user engagement with a DY campaign.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Pass the value `CLICK` or `IMP` (impressions) for API custom code campaigns.",
                      "type": "string",
                      "enum": [
                        "CLICK",
                        "IMP"
                      ]
                    },
                    "decisionId": {
                      "description": "**Required for reporting `CLICK` or `IMP`:** The unique Decision ID as returned from the `/choose` endpoint.",
                      "type": "string"
                    },
                    "variations": {
                      "description": "Use to report explicit impressions over custom code campaigns that return multiple variations on each decision (for example, a slider). Values are variation IDs.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  },
                  "required": [
                    "type",
                    "decisionId",
                    "variations"
                  ]
                },
                {
                  "title": "Engagement (type: SLOT_CLICK)",
                  "description": "A user engagement with a DY campaign.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Pass the value `SLOT_CLICK` for API recommendation campaigns.",
                      "type": "string",
                      "enum": [
                        "SLOT_CLICK"
                      ]
                    },
                    "slotId": {
                      "description": "Use to report a click on an API recommendation or a search result. Pass the Slot ID for the clicked product as returned in the `/choose` response. Do not use for for API custom code campaigns.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "slotId"
                  ]
                },
                {
                  "title": "Engagement (type: PN_CLICK)",
                  "description": "A user engagement with a DY campaign.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Pass the value `PN_CLICK` for Reconnect push notification campaigns.",
                      "type": "string",
                      "enum": [
                        "PN_CLICK"
                      ]
                    },
                    "trackingData": {
                      "description": "Enables Dynamic Yield to track actions attributable to the push notification. Must be extracted from messaging provider. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/13472246286749-Create-a-Reconnect-Campaign#tracklink).",
                      "type": "object",
                      "properties": {
                        "rri": {
                          "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                          "type": "string",
                          "example": "987001424"
                        },
                        "sectionID": {
                          "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                          "type": "string",
                          "example": "9878785"
                        },
                        "reqTs": {
                          "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                          "type": "string",
                          "example": "1652622484055"
                        },
                        "userID": {
                          "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                          "type": "string",
                          "example": "4656722918296846673"
                        },
                        "version": {
                          "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                          "type": "string",
                          "example": "2"
                        },
                        "events": {
                          "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ver": {
                                "type": "string",
                                "example": "101482916"
                              },
                              "expVisitId": {
                                "type": "string",
                                "example": "4032971100745578591"
                              },
                              "smech": {
                                "type": "string",
                                "example": ""
                              },
                              "vars": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "101098971"
                                }
                              },
                              "exp": {
                                "type": "string",
                                "example": "1296028"
                              },
                              "mech": {
                                "type": "string",
                                "example": "1"
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "rri": "987001424",
                        "sectionID": "9878785",
                        "reqTs": "1652622484055",
                        "userID": "4656722918296846673",
                        "version": "2",
                        "events": [
                          {
                            "ver": "101482916",
                            "expVisitId": "4032971100745578591",
                            "smech": "",
                            "vars": "[101098971]",
                            "exp": "1296028",
                            "mech": "1"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "trackingData"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "user",
          "session",
          "engagements"
        ]
      },
      "EngagementPayloadFi": {
        "allOf": [
          {
            "title": "Engagement Request - Financial Institutions"
          },
          {
            "title": "Engagement Request - E-Commerce",
            "type": "object",
            "properties": {
              "user": {
                "title": "User",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                "type": "object",
                "properties": {
                  "dyid": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "dyid_server": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "active_consent_accepted": {
                    "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "session": {
                "title": "Session",
                "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                "type": "object",
                "properties": {
                  "dy": {
                    "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                    "type": "string"
                  }
                }
              },
              "context": {
                "title": "Context",
                "description": "The request's context.",
                "type": "object",
                "properties": {
                  "device": {
                    "description": "Data for the served device.",
                    "type": "object",
                    "properties": {
                      "ip": {
                        "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                        "type": "string",
                        "example": "54.100.200.255"
                      }
                    }
                  },
                  "channel": {
                    "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                    "type": "string",
                    "enum": [
                      "WEB",
                      "APP"
                    ]
                  }
                }
              },
              "engagements": {
                "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "title": "Engagement (type: IMP, CLICK)",
                      "description": "A user engagement with a DY campaign.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Pass the value `CLICK` or `IMP` (impressions) for API custom code campaigns.",
                          "type": "string",
                          "enum": [
                            "CLICK",
                            "IMP"
                          ]
                        },
                        "decisionId": {
                          "description": "**Required for reporting `CLICK` or `IMP`:** The unique Decision ID as returned from the `/choose` endpoint.",
                          "type": "string"
                        },
                        "variations": {
                          "description": "Use to report explicit impressions over custom code campaigns that return multiple variations on each decision (for example, a slider). Values are variation IDs.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "decisionId",
                        "variations"
                      ]
                    },
                    {
                      "title": "Engagement (type: SLOT_CLICK)",
                      "description": "A user engagement with a DY campaign.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Pass the value `SLOT_CLICK` for API recommendation campaigns.",
                          "type": "string",
                          "enum": [
                            "SLOT_CLICK"
                          ]
                        },
                        "slotId": {
                          "description": "Use to report a click on an API recommendation or a search result. Pass the Slot ID for the clicked product as returned in the `/choose` response. Do not use for for API custom code campaigns.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "slotId"
                      ]
                    },
                    {
                      "title": "Engagement (type: PN_CLICK)",
                      "description": "A user engagement with a DY campaign.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Pass the value `PN_CLICK` for Reconnect push notification campaigns.",
                          "type": "string",
                          "enum": [
                            "PN_CLICK"
                          ]
                        },
                        "trackingData": {
                          "description": "Enables Dynamic Yield to track actions attributable to the push notification. Must be extracted from messaging provider. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/13472246286749-Create-a-Reconnect-Campaign#tracklink).",
                          "type": "object",
                          "properties": {
                            "rri": {
                              "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                              "type": "string",
                              "example": "987001424"
                            },
                            "sectionID": {
                              "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                              "type": "string",
                              "example": "9878785"
                            },
                            "reqTs": {
                              "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                              "type": "string",
                              "example": "1652622484055"
                            },
                            "userID": {
                              "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                              "type": "string",
                              "example": "4656722918296846673"
                            },
                            "version": {
                              "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                              "type": "string",
                              "example": "2"
                            },
                            "events": {
                              "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ver": {
                                    "type": "string",
                                    "example": "101482916"
                                  },
                                  "expVisitId": {
                                    "type": "string",
                                    "example": "4032971100745578591"
                                  },
                                  "smech": {
                                    "type": "string",
                                    "example": ""
                                  },
                                  "vars": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "101098971"
                                    }
                                  },
                                  "exp": {
                                    "type": "string",
                                    "example": "1296028"
                                  },
                                  "mech": {
                                    "type": "string",
                                    "example": "1"
                                  }
                                }
                              }
                            }
                          },
                          "example": {
                            "rri": "987001424",
                            "sectionID": "9878785",
                            "reqTs": "1652622484055",
                            "userID": "4656722918296846673",
                            "version": "2",
                            "events": [
                              {
                                "ver": "101482916",
                                "expVisitId": "4032971100745578591",
                                "smech": "",
                                "vars": "[101098971]",
                                "exp": "1296028",
                                "mech": "1"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "trackingData"
                      ]
                    }
                  ]
                }
              }
            },
            "required": [
              "user",
              "session",
              "engagements"
            ]
          }
        ]
      },
      "EngagementPayloadQsr": {
        "title": "Engagement Request - Restaurants",
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "title": "User (sharedDevice: true)",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                "type": "object",
                "properties": {
                  "sharedDevice": {
                    "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "sharedDevice"
                ]
              },
              {
                "allOf": [
                  {
                    "title": "User (sharedDevice: false)"
                  },
                  {
                    "title": "User",
                    "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                    "type": "object",
                    "properties": {
                      "dyid": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "dyid_server": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "active_consent_accepted": {
                        "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  {
                    "properties": {
                      "sharedDevice": {
                        "description": "Set to `false` for transactions made on personal devices.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                ],
                "required": [
                  "sharedDevice"
                ]
              }
            ]
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  }
                }
              },
              "branch": {
                "description": "Use to recommend only items in stock at the branch the user is browsing.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the branch the recommendation is for.",
                    "type": "string"
                  },
                  "dayPart": {
                    "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                    "type": "string",
                    "enum": [
                      "BREAKFAST",
                      "LUNCH",
                      "DINNER",
                      "LATENIGHT"
                    ]
                  }
                },
                "required": [
                  "id",
                  "dayPart"
                ]
              },
              "channel": {
                "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP",
                  "KIOSK",
                  "DRIVE-THRU"
                ]
              }
            },
            "required": [
              "branch",
              "channel"
            ]
          },
          "engagements": {
            "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Engagement (type: SLOT_CLICK)",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Pass `SLOT_CLICK`.",
                      "type": "string",
                      "enum": [
                        "SLOT_CLICK"
                      ]
                    },
                    "slotId": {
                      "description": "Use to report a click on an API recommendation. Pass the Slot ID for the clicked product as returned in the `/choose` response.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "slotId"
                  ]
                },
                {
                  "title": "Engagement (type: SLOT_IMP)",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Pass `SLOT_IMP`.",
                      "type": "string",
                      "enum": [
                        "SLOT_IMP"
                      ]
                    },
                    "slotIds": {
                      "description": "Use to report impressions of an API recommendation. Pass the Slot IDs for the products as returned in the `/choose` response.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "type",
                    "slotIds"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "user",
          "session",
          "engagements"
        ]
      },
      "EventPayloadEcom": {
        "title": "Event Request - E-Commerce",
        "type": "object",
        "properties": {
          "user": {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  }
                }
              },
              "channel": {
                "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP"
                ]
              }
            }
          },
          "events": {
            "description": "One or more events to report.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Add to Cart",
                  "description": "Reports that the user added a product to the cart.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `add-to-cart-v1`.",
                              "type": "string",
                              "pattern": "add-to-cart-v1",
                              "default": "add-to-cart-v1"
                            },
                            "value": {
                              "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 19.9
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "allOf": [
                                {
                                  "description": "Number of items.",
                                  "type": "number",
                                  "example": 1
                                },
                                {
                                  "description": "The number of items with this SKU added to the cart in the scope of this event."
                                }
                              ]
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "The updated contents of the cart, including the items added to trigger this event. Each object is a unique item/SKU.<br>This object is required for Reconnect campaigns, as well as to enable the recommendations engine to filter out products that are already in the cart. [Learn more about this filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178-Recommendation-Filters#exclude)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "productId",
                            "quantity"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Add To Cart",
                    "properties": {
                      "dyType": "add-to-cart-v1",
                      "value": 118.26,
                      "currency": "any supported currency code",
                      "productId": "item-34454",
                      "quantity": 2,
                      "cart": [
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 12.34
                        },
                        {
                          "productId": "item-34454",
                          "quantity": 2,
                          "itemPrice": 59.13
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Purchase",
                  "description": "Reports that the user completed a purchase.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `purchase-v1`.",
                              "type": "string",
                              "pattern": "purchase-v1",
                              "default": "purchase-v1"
                            },
                            "value": {
                              "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 98.8
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "uniqueTransactionId": {
                              "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                              "type": "string",
                              "example": "38373991919193830033"
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "cart"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Purchase",
                    "properties": {
                      "uniqueTransactionId": 123456,
                      "dyType": "purchase-v1",
                      "value": 90.55,
                      "currency": "any supported currency code",
                      "cart": [
                        {
                          "productId": "item-34454",
                          "quantity": 1,
                          "itemPrice": 65.87
                        },
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 12.34
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Remove from Cart",
                  "description": "Reports that the user removed an item from the cart.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `remove-from-cart-v1`.",
                              "type": "string",
                              "pattern": "remove-from-cart-v1",
                              "default": "remove-from-cart-v1"
                            },
                            "value": {
                              "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 19.9
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "allOf": [
                                {
                                  "description": "Number of items.",
                                  "type": "number",
                                  "example": 1
                                },
                                {
                                  "description": "The total number of items removed."
                                }
                              ]
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "The cart's current state, after the removal of the item. Products are ordered from the first added to the cart to the most recent.<br>*Optional, but recommended.*"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "productId",
                            "quantity"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Remove from Cart",
                    "properties": {
                      "dyType": "remove-from-cart-v1",
                      "value": 34.45,
                      "currency": "any supported currency code",
                      "productId": "gswefd-34-454",
                      "quantity": 1,
                      "cart": [
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 12.34
                        },
                        {
                          "productId": "item-34454",
                          "quantity": 1,
                          "itemPrice": 34.45
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Sync Cart",
                  "description": "**THIS EVENT IS MANDATORY FOR:**<br><ul><li>The [*Exclude items currently in cart* filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178#h_01FZW8C8C9JSHT05QW6764K0XV), and must be fired upon every page load.</li><li>[Reconnect](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect) implementation.</li></ul>",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `sync-cart-v1`.",
                              "type": "string",
                              "pattern": "sync-cart-v1",
                              "default": "sync-cart-v1"
                            },
                            "value": {
                              "allOf": [
                                {
                                  "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                  "type": "number",
                                  "example": 98.8
                                },
                                {
                                  "description": "The total monetary value of the event (the total value of the cart, not just the item that triggered the event); in the actual payment currency."
                                }
                              ]
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "The cart's absolute current state, including the last item added. Products are ordered from the first added to the cart to the most recent."
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "cart"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Sync Cart",
                    "properties": {
                      "dyType": "sync-cart-v1",
                      "value": 125.5,
                      "currency": "any supported currency code",
                      "cart": [
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 12.34
                        },
                        {
                          "productId": "item-34454",
                          "quantity": 1,
                          "itemPrice": 34.45
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Identify User",
                  "type": "object",
                  "description": "Use to identify visitors at any point during their journey on your site or app, such as during the checkout process.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `identify-v1`.",
                              "type": "string",
                              "pattern": "identify-v1",
                              "default": "identify-v1"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/identify-user#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Identify",
                    "properties": {
                      "dyType": "identify-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Login",
                  "type": "object",
                  "description": "Reports that a user has logged in.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `login-v1`.",
                              "type": "string",
                              "pattern": "login-v1",
                              "default": "login-v1"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/login#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Login",
                    "properties": {
                      "dyType": "login-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Signup",
                  "type": "object",
                  "description": "Reports that the user completed the signup process and is a registered user.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `signup-v1`.",
                              "type": "string"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/signup#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Signup",
                    "properties": {
                      "dyType": "signup-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Newsletter Subscription",
                  "description": "Reports that a user subscribed to a newsletter. Identification event.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `newsletter-subscription-v1`.",
                              "type": "string",
                              "pattern": "newsletter-subscription-v1",
                              "default": "newsletter-subscription-v1"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/newsletter-subscription#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Newsletter Subscription",
                    "properties": {
                      "dyType": "newsletter-subscription-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Push Opt-In",
                  "description": "Reports that a user opted in to receive Reconnect push notifications.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `message-optin-v1`.",
                              "type": "string",
                              "pattern": "message-optin-v1",
                              "default": "message-optin-v1"
                            },
                            "pushId": {
                              "description": "Reports that a user opted in to receive Reconnect push notifications.",
                              "type": "string",
                              "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                            }
                          },
                          "required": [
                            "dyType",
                            "pushId"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Push Opt-in",
                    "properties": {
                      "dyType": "message-optin-v1",
                      "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                    }
                  }
                },
                {
                  "title": "Push Opt-Out",
                  "description": "Reports that a user opted out of receiving Reconnect push notifications.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `message-optout-v1`.",
                              "type": "string",
                              "pattern": "message-optout-v1",
                              "default": "message-optout-v1"
                            },
                            "pushId": {
                              "description": "Reports that a user opted in to receive Reconnect push notifications.",
                              "type": "string",
                              "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                            }
                          },
                          "required": [
                            "dyType",
                            "pushId"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Push Opt-Out",
                    "properties": {
                      "dyType": "message-optout-v1",
                      "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                    }
                  }
                },
                {
                  "title": "Keyword Search",
                  "description": "Reports that a user ran a freestyle keyword search.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `keyword-search-v1`.",
                              "type": "string",
                              "pattern": "keyword-search-v1",
                              "default": "keyword-search-v1"
                            },
                            "keywords": {
                              "description": "The search string.",
                              "type": "string",
                              "example": "contact info"
                            }
                          },
                          "required": [
                            "dyType",
                            "keywords"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Keyword search",
                    "properties": {
                      "dyType": "keyword-search-v1",
                      "keywords": "contact info"
                    }
                  }
                },
                {
                  "title": "Add to Wishlist",
                  "description": "Reports that a user added a product to their wishlist.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `add-to-wishlist-v1`.",
                              "type": "string",
                              "pattern": "add-to-wishlist-v1",
                              "default": "add-to-wishlist-v1"
                            },
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "size": {
                              "description": "Product size.",
                              "type": "string",
                              "example": "L"
                            }
                          },
                          "required": [
                            "dyType",
                            "productId"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Add to Wishlist",
                    "properties": {
                      "dyType": "add-to-wishlist-v1",
                      "productId": "item-34454",
                      "size": "XL"
                    }
                  }
                },
                {
                  "title": "Filter Items",
                  "description": "Reports that the user filtered the product list by a specific field value.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `filter-items-v1`.",
                              "type": "string",
                              "pattern": "filter-items-v1",
                              "default": "filter-items-v1"
                            },
                            "filterType": {
                              "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
                              "type": "string",
                              "example": "color"
                            },
                            "filterNumericValue": {
                              "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
                              "type": "number",
                              "example": 20
                            },
                            "filterStringValue": {
                              "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
                              "type": "string",
                              "example": "Gray"
                            }
                          },
                          "required": [
                            "dyType",
                            "filterType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Filter Items",
                    "properties": {
                      "dyType": "filter-items-v1",
                      "filterType": "color",
                      "filterNumericValue": 4
                    }
                  }
                },
                {
                  "title": "Change Attribute",
                  "description": "Reports that a user changed an attribute of the displayed product (such as color or size).<br>**Note:** The attribute type and value must match information in your product feed. The currently displayed product is inferred from the in-page context.<br>**This event is currently available for script implementation only.**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `change-attribute-v1`.",
                              "type": "string",
                              "pattern": "change-attr-v1",
                              "default": "change-attr-v1"
                            },
                            "attributeType": {
                              "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
                              "type": "string",
                              "example": "Color"
                            },
                            "attributeValue": {
                              "description": "The new value (for example, new color is Gray).",
                              "type": "string",
                              "example": "Navy Blue"
                            }
                          },
                          "required": [
                            "dyType",
                            "attributeType",
                            "attributeValue"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Change Attribute",
                    "properties": {
                      "dyType": "change-attr-v1",
                      "attributeType": "Color",
                      "attributeValue": "Navy Blue"
                    }
                  }
                },
                {
                  "title": "Video Watch",
                  "description": "Reports that a user watched a video on a media site or application.<br>This event can report that the user watched a video in part or in full. You can distinguish between auto-play videos and those that the user explicitly clicked to watch.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `video-watch-v1`.",
                              "type": "string",
                              "pattern": "video-watch-v1",
                              "default": "video-watch-v1"
                            },
                            "itemId": {
                              "description": "ID that matches an item ID in the content feed.",
                              "type": "string",
                              "example": "33849492012003"
                            },
                            "categories": {
                              "description": "*Optional*",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Sports",
                                "Baseball"
                              ]
                            },
                            "autoplay": {
                              "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
                              "type": "boolean",
                              "default": false
                            },
                            "progress": {
                              "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
                              "type": "string",
                              "enum": [
                                "VIDEO_STARTED",
                                "PREROLL_FINISHED",
                                "VIDEO_FINISHED",
                                "VIDEO_PROGRESS"
                              ],
                              "example": "VIDEO_STARTED"
                            },
                            "progressPercent": {
                              "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
                              "type": "number",
                              "example": 65
                            }
                          },
                          "required": [
                            "dyType",
                            "itemId",
                            "autoplay",
                            "progress",
                            "progressPercent"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Video Watch",
                    "properties": {
                      "dyType": "video-watch-v1",
                      "itemId": "33849492012003",
                      "categories": [
                        "Sports",
                        "Baseball"
                      ],
                      "autoplay": true,
                      "progress": "VIDEO_PROGRESS",
                      "progressPercent": 65
                    }
                  }
                },
                {
                  "title": "Sort Items",
                  "description": "Reports that the user changed the sorting of a product list.<br>**This event is currently available for script implementation only.**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `sort-items-v1`.",
                              "type": "string",
                              "pattern": "sort-items-v1",
                              "default": "sort-items-v1"
                            },
                            "sortBy": {
                              "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
                              "type": "string",
                              "example": "price"
                            },
                            "sortOrder": {
                              "description": "`ASC` or `DESC`.",
                              "type": "string",
                              "example": "ASC"
                            }
                          },
                          "required": [
                            "dyType",
                            "sortBy",
                            "sortOrder"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Sort Items",
                    "properties": {
                      "dyType": "sort-items-v1",
                      "sortBy": "PRICE",
                      "sortOrder": "ASC"
                    }
                  }
                },
                {
                  "title": "Promo Code Entered",
                  "description": "Reports that the user entered a valid promotion code.<br>**This event is currently available for script implementation only.**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `enter-promo-code-v1`.",
                              "type": "string",
                              "pattern": "enter-promo-code-v1",
                              "default": "enter-promo-code-v1"
                            },
                            "code": {
                              "description": "The promo code.",
                              "type": "string",
                              "example": "SPECIALOFFER"
                            }
                          },
                          "required": [
                            "dyType",
                            "code"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Promo Code Entered",
                    "properties": {
                      "dyType": "enter-promo-code-v1",
                      "code": "SPECIALOFFER"
                    }
                  }
                },
                {
                  "title": "Custom Event",
                  "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Event name for display. Does not have a `dyType` property.",
                      "type": "string",
                      "example": "VIP Login"
                    },
                    "properties": {
                      "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                      "type": "object",
                      "properties": {
                        "value": {
                          "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                          "type": "number",
                          "example": 98.7
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        }
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "example": {
                    "name": "Custom Event Example 1",
                    "properties": {
                      "isVIP": true
                    }
                  }
                },
                {
                  "title": "Inform Affinity",
                  "description": "Report an array of product attributes to use in affinity personalization.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `inform-affinity-v1`.",
                              "type": "string",
                              "pattern": "inform-affinity-v1"
                            },
                            "source": {
                              "description": "The source of the user data",
                              "type": "string"
                            },
                            "data": {
                              "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "description": "name of attribute"
                                  },
                                  "values": {
                                    "type": "array",
                                    "maxItems": 10,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "dyType",
                            "data"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Inform Affinity",
                    "properties": {
                      "dyType": "inform-affinity-v1",
                      "source": "registration-form",
                      "data": [
                        {
                          "attribute": "categories",
                          "values": [
                            "shoes",
                            "tops",
                            "accessories"
                          ]
                        },
                        {
                          "attribute": "brand",
                          "values": [
                            "adidas"
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "required": [
          "user",
          "session",
          "context",
          "events"
        ]
      },
      "EventPayloadFi": {
        "title": "Event Request - Financial Institutions",
        "type": "object",
        "properties": {
          "user": {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  }
                }
              },
              "channel": {
                "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP"
                ]
              }
            }
          },
          "events": {
            "description": "One or more events to report.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Application",
                  "description": "Reports that a user started the application process for a product.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `add-to-cart-v1`.",
                              "type": "string",
                              "pattern": "add-to-cart-v1",
                              "default": "add-to-cart-v1"
                            },
                            "value": {
                              "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 19.9
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "allOf": [
                                {
                                  "description": "Number of items.",
                                  "type": "number",
                                  "example": 1
                                },
                                {
                                  "description": "The total number of items that were added to the cart."
                                }
                              ]
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "The cart's current state, including the last item added. Products are ordered from the first added to the cart to the most recent.<br><br>**Note:** Pass the updated cart with the newly added products to ensure that the cart state is fully in sync with your system. This is important mainly for triggered email and push notifications. *Optional, but recommended.*"
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "productId",
                            "quantity"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Application Started",
                    "properties": {
                      "dyType": "add-to-cart-v1",
                      "value": 400,
                      "currency": "EUR",
                      "productId": "item-34454",
                      "quantity": 2,
                      "cart": [
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 100
                        },
                        {
                          "productId": "item-34454",
                          "quantity": 2,
                          "itemPrice": 200
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Submission",
                  "description": "Reports that the user submitted an application.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `purchase-v1`.",
                              "type": "string",
                              "pattern": "purchase-v1",
                              "default": "purchase-v1"
                            },
                            "value": {
                              "allOf": [
                                {
                                  "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                  "type": "number",
                                  "example": 98.8
                                },
                                {
                                  "description": "The total monetary value of the event. This refers only to the item or items removed that triggered the event, not the entire cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0."
                                }
                              ]
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "uniqueTransactionId": {
                              "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                              "type": "string",
                              "example": "38373991919193830033"
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "cart"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Submission",
                    "properties": {
                      "uniqueTransactionId": 123456,
                      "dyType": "purchase-v1",
                      "value": 90.55,
                      "currency": "any supported currency code",
                      "cart": [
                        {
                          "productId": "item-34454",
                          "quantity": 1,
                          "itemPrice": 65.87
                        },
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 12.34
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Remove from Cart",
                  "description": "Reports that the user removed an item from the cart.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `remove-from-cart-v1`.",
                              "type": "string",
                              "pattern": "remove-from-cart-v1",
                              "default": "remove-from-cart-v1"
                            },
                            "value": {
                              "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 19.9
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "allOf": [
                                {
                                  "description": "Number of items.",
                                  "type": "number",
                                  "example": 1
                                },
                                {
                                  "description": "The total number of items removed."
                                }
                              ]
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "The cart's current state, after the removal of the item. Products are ordered from the first added to the cart to the most recent.<br>*Optional, but recommended.*"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "productId",
                            "quantity"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Remove from Cart",
                    "properties": {
                      "dyType": "remove-from-cart-v1",
                      "value": 34.45,
                      "currency": "any supported currency code",
                      "productId": "gswefd-34-454",
                      "quantity": 1,
                      "cart": [
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 12.34
                        },
                        {
                          "productId": "item-34454",
                          "quantity": 1,
                          "itemPrice": 34.45
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Sync Cart",
                  "description": "**THIS EVENT IS MANDATORY FOR:**<br><ul><li>The [*Exclude items currently in cart* filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178#h_01FZW8C8C9JSHT05QW6764K0XV), and must be fired upon every page load.</li><li>[Reconnect](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect) implementation.</li></ul>",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `sync-cart-v1`.",
                              "type": "string",
                              "pattern": "sync-cart-v1",
                              "default": "sync-cart-v1"
                            },
                            "value": {
                              "allOf": [
                                {
                                  "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                  "type": "number",
                                  "example": 98.8
                                },
                                {
                                  "description": "The total monetary value of the event (the total value of the cart, not just the item that triggered the event); in the actual payment currency."
                                }
                              ]
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "The cart's absolute current state, including the last item added. Products are ordered from the first added to the cart to the most recent."
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "cart"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Sync Cart",
                    "properties": {
                      "dyType": "sync-cart-v1",
                      "value": 125.5,
                      "currency": "any supported currency code",
                      "cart": [
                        {
                          "productId": "sku-4324-bg",
                          "quantity": 2,
                          "itemPrice": 12.34
                        },
                        {
                          "productId": "item-34454",
                          "quantity": 1,
                          "itemPrice": 34.45
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Identify User",
                  "type": "object",
                  "description": "Use to identify visitors at any point during their journey on your site or app, such as during the checkout process.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `identify-v1`.",
                              "type": "string",
                              "pattern": "identify-v1",
                              "default": "identify-v1"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/identify-user#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Identify",
                    "properties": {
                      "dyType": "identify-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Login",
                  "type": "object",
                  "description": "Reports that a user has logged in.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `login-v1`.",
                              "type": "string",
                              "pattern": "login-v1",
                              "default": "login-v1"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/login#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Login",
                    "properties": {
                      "dyType": "login-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Signup",
                  "type": "object",
                  "description": "Reports that the user completed the signup process and is a registered user.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `signup-v1`.",
                              "type": "string"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/signup#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Signup",
                    "properties": {
                      "dyType": "signup-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Newsletter Subscription",
                  "description": "Reports that a user subscribed to a newsletter. Identification event.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `newsletter-subscription-v1`.",
                              "type": "string",
                              "pattern": "newsletter-subscription-v1",
                              "default": "newsletter-subscription-v1"
                            },
                            "cuid": {
                              "description": "User identifier value. Max 250 characters.",
                              "type": "string",
                              "enum": [
                                "demo@email.com",
                                "123456789"
                              ]
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                              "type": "string"
                            },
                            "secondaryIdentifiers": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "hashedPhoneNumber"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                      }
                                    }
                                  }
                                },
                                {
                                  "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/newsletter-subscription#parameters)."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Newsletter Subscription",
                    "properties": {
                      "dyType": "newsletter-subscription-v1",
                      "cuid": "demo@email.com",
                      "cuidType": "EcommerceID",
                      "secondaryIdentifiers": [
                        {
                          "type": "hashedPhoneNumber",
                          "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                        },
                        {
                          "type": "ecommerceID",
                          "value": "12345"
                        },
                        {
                          "type": "vipClub",
                          "value": "678910"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Push Opt-In",
                  "description": "Reports that a user opted in to receive Reconnect push notifications.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `message-optin-v1`.",
                              "type": "string",
                              "pattern": "message-optin-v1",
                              "default": "message-optin-v1"
                            },
                            "pushId": {
                              "description": "Reports that a user opted in to receive Reconnect push notifications.",
                              "type": "string",
                              "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                            }
                          },
                          "required": [
                            "dyType",
                            "pushId"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Push Opt-in",
                    "properties": {
                      "dyType": "message-optin-v1",
                      "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                    }
                  }
                },
                {
                  "title": "Push Opt-Out",
                  "description": "Reports that a user opted out of receiving Reconnect push notifications.",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `message-optout-v1`.",
                              "type": "string",
                              "pattern": "message-optout-v1",
                              "default": "message-optout-v1"
                            },
                            "pushId": {
                              "description": "Reports that a user opted in to receive Reconnect push notifications.",
                              "type": "string",
                              "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                            }
                          },
                          "required": [
                            "dyType",
                            "pushId"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Push Opt-Out",
                    "properties": {
                      "dyType": "message-optout-v1",
                      "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                    }
                  }
                },
                {
                  "title": "Keyword Search",
                  "description": "Reports that a user ran a freestyle keyword search.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `keyword-search-v1`.",
                              "type": "string",
                              "pattern": "keyword-search-v1",
                              "default": "keyword-search-v1"
                            },
                            "keywords": {
                              "description": "The search string.",
                              "type": "string",
                              "example": "contact info"
                            }
                          },
                          "required": [
                            "dyType",
                            "keywords"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Keyword search",
                    "properties": {
                      "dyType": "keyword-search-v1",
                      "keywords": "contact info"
                    }
                  }
                },
                {
                  "title": "Add to Wishlist",
                  "description": "Reports that a user added a product to their wishlist.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `add-to-wishlist-v1`.",
                              "type": "string",
                              "pattern": "add-to-wishlist-v1",
                              "default": "add-to-wishlist-v1"
                            },
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "size": {
                              "description": "Product size.",
                              "type": "string",
                              "example": "L"
                            }
                          },
                          "required": [
                            "dyType",
                            "productId"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Add to Wishlist",
                    "properties": {
                      "dyType": "add-to-wishlist-v1",
                      "productId": "item-34454",
                      "size": "XL"
                    }
                  }
                },
                {
                  "title": "Filter Items",
                  "description": "Reports that the user filtered the product list by a specific field value.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `filter-items-v1`.",
                              "type": "string",
                              "pattern": "filter-items-v1",
                              "default": "filter-items-v1"
                            },
                            "filterType": {
                              "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
                              "type": "string",
                              "example": "color"
                            },
                            "filterNumericValue": {
                              "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
                              "type": "number",
                              "example": 20
                            },
                            "filterStringValue": {
                              "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
                              "type": "string",
                              "example": "Gray"
                            }
                          },
                          "required": [
                            "dyType",
                            "filterType"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Filter Items",
                    "properties": {
                      "dyType": "filter-items-v1",
                      "filterType": "color",
                      "filterNumericValue": 4
                    }
                  }
                },
                {
                  "title": "Change Attribute",
                  "description": "Reports that a user changed an attribute of the displayed product (such as color or size).<br>**Note:** The attribute type and value must match information in your product feed. The currently displayed product is inferred from the in-page context.<br>**This event is currently available for script implementation only.**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `change-attribute-v1`.",
                              "type": "string",
                              "pattern": "change-attr-v1",
                              "default": "change-attr-v1"
                            },
                            "attributeType": {
                              "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
                              "type": "string",
                              "example": "Color"
                            },
                            "attributeValue": {
                              "description": "The new value (for example, new color is Gray).",
                              "type": "string",
                              "example": "Navy Blue"
                            }
                          },
                          "required": [
                            "dyType",
                            "attributeType",
                            "attributeValue"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Change Attribute",
                    "properties": {
                      "dyType": "change-attr-v1",
                      "attributeType": "Color",
                      "attributeValue": "Navy Blue"
                    }
                  }
                },
                {
                  "title": "Video Watch",
                  "description": "Reports that a user watched a video on a media site or application.<br>This event can report that the user watched a video in part or in full. You can distinguish between auto-play videos and those that the user explicitly clicked to watch.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `video-watch-v1`.",
                              "type": "string",
                              "pattern": "video-watch-v1",
                              "default": "video-watch-v1"
                            },
                            "itemId": {
                              "description": "ID that matches an item ID in the content feed.",
                              "type": "string",
                              "example": "33849492012003"
                            },
                            "categories": {
                              "description": "*Optional*",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Sports",
                                "Baseball"
                              ]
                            },
                            "autoplay": {
                              "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
                              "type": "boolean",
                              "default": false
                            },
                            "progress": {
                              "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
                              "type": "string",
                              "enum": [
                                "VIDEO_STARTED",
                                "PREROLL_FINISHED",
                                "VIDEO_FINISHED",
                                "VIDEO_PROGRESS"
                              ],
                              "example": "VIDEO_STARTED"
                            },
                            "progressPercent": {
                              "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
                              "type": "number",
                              "example": 65
                            }
                          },
                          "required": [
                            "dyType",
                            "itemId",
                            "autoplay",
                            "progress",
                            "progressPercent"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Video Watch",
                    "properties": {
                      "dyType": "video-watch-v1",
                      "itemId": "33849492012003",
                      "categories": [
                        "Sports",
                        "Baseball"
                      ],
                      "autoplay": true,
                      "progress": "VIDEO_PROGRESS",
                      "progressPercent": 65
                    }
                  }
                },
                {
                  "title": "Sort Items",
                  "description": "Reports that the user changed the sorting of a product list.<br>**This event is currently available for script implementation only.**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `sort-items-v1`.",
                              "type": "string",
                              "pattern": "sort-items-v1",
                              "default": "sort-items-v1"
                            },
                            "sortBy": {
                              "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
                              "type": "string",
                              "example": "price"
                            },
                            "sortOrder": {
                              "description": "`ASC` or `DESC`.",
                              "type": "string",
                              "example": "ASC"
                            }
                          },
                          "required": [
                            "dyType",
                            "sortBy",
                            "sortOrder"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Sort Items",
                    "properties": {
                      "dyType": "sort-items-v1",
                      "sortBy": "PRICE",
                      "sortOrder": "ASC"
                    }
                  }
                },
                {
                  "title": "Promo Code Entered",
                  "description": "Reports that the user entered a valid promotion code.<br>**This event is currently available for script implementation only.**",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `enter-promo-code-v1`.",
                              "type": "string",
                              "pattern": "enter-promo-code-v1",
                              "default": "enter-promo-code-v1"
                            },
                            "code": {
                              "description": "The promo code.",
                              "type": "string",
                              "example": "SPECIALOFFER"
                            }
                          },
                          "required": [
                            "dyType",
                            "code"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Promo Code Entered",
                    "properties": {
                      "dyType": "enter-promo-code-v1",
                      "code": "SPECIALOFFER"
                    }
                  }
                },
                {
                  "title": "Custom Event",
                  "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Event name for display. Does not have a `dyType` property.",
                      "type": "string",
                      "example": "VIP Login"
                    },
                    "properties": {
                      "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                      "type": "object",
                      "properties": {
                        "value": {
                          "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                          "type": "number",
                          "example": 98.7
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        }
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "example": {
                    "name": "Custom Event Example 1",
                    "properties": {
                      "isVIP": true
                    }
                  }
                },
                {
                  "title": "Inform Affinity",
                  "description": "Report an array of product attributes to use in affinity personalization.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `inform-affinity-v1`.",
                              "type": "string",
                              "pattern": "inform-affinity-v1"
                            },
                            "source": {
                              "description": "The source of the user data",
                              "type": "string"
                            },
                            "data": {
                              "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "description": "name of attribute"
                                  },
                                  "values": {
                                    "type": "array",
                                    "maxItems": 10,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "dyType",
                            "data"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Inform Affinity",
                    "properties": {
                      "dyType": "inform-affinity-v1",
                      "source": "registration-form",
                      "data": [
                        {
                          "attribute": "categories",
                          "values": [
                            "shoes",
                            "tops",
                            "accessories"
                          ]
                        },
                        {
                          "attribute": "brand",
                          "values": [
                            "adidas"
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "required": [
          "user",
          "session",
          "context",
          "events"
        ]
      },
      "EventPayloadQsr": {
        "title": "Event Request - Restaurants",
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "title": "User (sharedDevice: true)",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                "type": "object",
                "properties": {
                  "sharedDevice": {
                    "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "sharedDevice"
                ]
              },
              {
                "allOf": [
                  {
                    "title": "User (sharedDevice: false)"
                  },
                  {
                    "title": "User",
                    "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                    "type": "object",
                    "properties": {
                      "dyid": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "dyid_server": {
                        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                        "type": "string"
                      },
                      "active_consent_accepted": {
                        "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  {
                    "properties": {
                      "sharedDevice": {
                        "description": "Set to `false` for transactions made on personal devices.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                ],
                "required": [
                  "sharedDevice"
                ]
              }
            ]
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
                    "type": "string",
                    "enum": [
                      "DESKTOP",
                      "SMARTPHONE",
                      "TABLET",
                      "KIOSK",
                      "ODMB"
                    ]
                  },
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  },
                  "id": {
                    "description": "The identifier of the device in the branch.",
                    "type": "string"
                  },
                  "dateTime": {
                    "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                    "type": "string",
                    "example": "2024-01-01T22:30:00.000-05:00"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "branch": {
                "description": "Use to recommend only items in stock at the branch the user is browsing.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the branch the recommendation is for.",
                    "type": "string"
                  },
                  "dayPart": {
                    "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                    "type": "string",
                    "enum": [
                      "BREAKFAST",
                      "LUNCH",
                      "DINNER",
                      "LATENIGHT"
                    ]
                  },
                  "orderFulfillment": {
                    "description": "The fulfillment type of the order the request relates to.",
                    "type": "string",
                    "enum": [
                      "DELIVERY",
                      "PICKUP",
                      "DINEIN",
                      "CURBSIDE"
                    ]
                  }
                },
                "required": [
                  "id",
                  "dayPart"
                ]
              },
              "channel": {
                "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP",
                  "KIOSK",
                  "DRIVE-THRU"
                ]
              }
            },
            "required": [
              "device",
              "branch"
            ]
          },
          "events": {
            "description": "One or more events to report.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Purchase",
                  "description": "Reports that the user completed a purchase.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `purchase-v1`.",
                              "type": "string",
                              "pattern": "purchase-v1",
                              "default": "purchase-v1"
                            },
                            "value": {
                              "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 19.9
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "uniqueTransactionId": {
                              "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                              "type": "string",
                              "example": "38373991919193830033"
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                },
                                {
                                  "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "The product ID from the restaurant product catalog.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number"
                                      },
                                      "itemPrice": {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      },
                                      "innerProducts": {
                                        "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "productId": {
                                              "description": "The product ID from the restaurant product catalog.",
                                              "type": "string"
                                            },
                                            "quantity": {
                                              "description": "Number of items.",
                                              "type": "number"
                                            },
                                            "itemPrice": {
                                              "description": "unit.cents format using the section default currency.",
                                              "type": "number",
                                              "example": 23.99
                                            }
                                          },
                                          "required": [
                                            "productId"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "productId"
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "value",
                            "cart"
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "required": [
          "user",
          "session",
          "context",
          "events"
        ]
      },
      "PageviewPayloadEcom": {
        "title": "Pageview Request - E-Commerce",
        "type": "object",
        "properties": {
          "user": {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          "session": {
            "title": "Session",
            "description": "Session ID. A Dynamic Yield-generated identifier is used.",
            "type": "object",
            "properties": {
              "dy": {
                "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                "type": "string"
              }
            }
          },
          "context": {
            "title": "Context",
            "description": "The request's context.",
            "type": "object",
            "properties": {
              "page": {
                "description": "Data for the page currently being browsed.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                    "type": "string",
                    "enum": [
                      "HOMEPAGE",
                      "CATEGORY",
                      "PRODUCT",
                      "CART",
                      "OTHER"
                    ],
                    "example": "HOMEPAGE"
                  },
                  "data": {
                    "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "p76311-020"
                    ]
                  },
                  "location": {
                    "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                    "type": "string",
                    "example": "https://shop.biz/nice-shirt-p76311.html"
                  },
                  "referrer": {
                    "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                    "type": "string",
                    "example": "https://google.cz"
                  },
                  "locale": {
                    "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                    "type": "string",
                    "example": "en_US"
                  }
                },
                "required": [
                  "type",
                  "location"
                ]
              },
              "device": {
                "description": "Data for the served device.",
                "type": "object",
                "properties": {
                  "userAgent": {
                    "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                    "type": "string",
                    "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                  },
                  "type": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                    "type": "string",
                    "enum": [
                      "DESKTOP",
                      "SMARTPHONE",
                      "TABLET",
                      "KIOSK"
                    ]
                  },
                  "browser": {
                    "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                    "type": "string",
                    "enum": [
                      "Chrome",
                      "Firefox",
                      "Opera",
                      "Safari",
                      "Other"
                    ],
                    "example": "Firefox"
                  },
                  "ip": {
                    "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                    "type": "string",
                    "example": "54.100.200.255"
                  }
                }
              },
              "channel": {
                "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                "type": "string",
                "enum": [
                  "WEB",
                  "APP"
                ]
              }
            },
            "required": [
              "page",
              "device"
            ]
          },
          "options": {
            "title": "Options",
            "description": "Request configuration parameters.",
            "type": "object",
            "properties": {
              "isImplicitClientData": {
                "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "required": [
          "user",
          "session",
          "context"
        ]
      },
      "PageviewPayloadFi": {
        "allOf": [
          {
            "title": "Pageview Request - Finanacial Institutions"
          },
          {
            "title": "Pageview Request - E-Commerce",
            "type": "object",
            "properties": {
              "user": {
                "title": "User",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                "type": "object",
                "properties": {
                  "dyid": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "dyid_server": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "active_consent_accepted": {
                    "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "session": {
                "title": "Session",
                "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                "type": "object",
                "properties": {
                  "dy": {
                    "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                    "type": "string"
                  }
                }
              },
              "context": {
                "title": "Context",
                "description": "The request's context.",
                "type": "object",
                "properties": {
                  "page": {
                    "description": "Data for the page currently being browsed.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                        "type": "string",
                        "enum": [
                          "HOMEPAGE",
                          "CATEGORY",
                          "PRODUCT",
                          "CART",
                          "OTHER"
                        ],
                        "example": "HOMEPAGE"
                      },
                      "data": {
                        "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "p76311-020"
                        ]
                      },
                      "location": {
                        "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                        "type": "string",
                        "example": "https://shop.biz/nice-shirt-p76311.html"
                      },
                      "referrer": {
                        "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                        "type": "string",
                        "example": "https://google.cz"
                      },
                      "locale": {
                        "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                        "type": "string",
                        "example": "en_US"
                      }
                    },
                    "required": [
                      "type",
                      "location"
                    ]
                  },
                  "device": {
                    "description": "Data for the served device.",
                    "type": "object",
                    "properties": {
                      "userAgent": {
                        "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                        "type": "string",
                        "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                      },
                      "type": {
                        "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                        "type": "string",
                        "enum": [
                          "DESKTOP",
                          "SMARTPHONE",
                          "TABLET",
                          "KIOSK"
                        ]
                      },
                      "browser": {
                        "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                        "type": "string",
                        "enum": [
                          "Chrome",
                          "Firefox",
                          "Opera",
                          "Safari",
                          "Other"
                        ],
                        "example": "Firefox"
                      },
                      "ip": {
                        "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                        "type": "string",
                        "example": "54.100.200.255"
                      }
                    }
                  },
                  "channel": {
                    "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                    "type": "string",
                    "enum": [
                      "WEB",
                      "APP"
                    ]
                  }
                },
                "required": [
                  "page",
                  "device"
                ]
              },
              "options": {
                "title": "Options",
                "description": "Request configuration parameters.",
                "type": "object",
                "properties": {
                  "isImplicitClientData": {
                    "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            },
            "required": [
              "user",
              "session",
              "context"
            ]
          }
        ]
      },
      "UserDataPayload": {
        "title": "User Data Request",
        "type": "object",
        "properties": {
          "requests": {
            "description": "A list of user data update requests to be executed.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Upsert Request",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "Use `upsert` to add user data.",
                      "type": "string",
                      "enum": [
                        "upsert"
                      ],
                      "example": "upsert"
                    },
                    "cuid": {
                      "allOf": [
                        {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        {
                          "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                        }
                      ]
                    },
                    "cuidtype": {
                      "allOf": [
                        {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        {
                          "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                        },
                        {
                          "example": "he"
                        }
                      ]
                    },
                    "timestamp": {
                      "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-24T13:44:17+02:00"
                    },
                    "data": {
                      "description": "Add CRM data here. Date values within the CRM Data should be date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "action",
                    "cuid",
                    "cuidtype",
                    "timestamp",
                    "data"
                  ]
                },
                {
                  "title": "Delete Request",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "Use `delete` to remove data.",
                      "type": "string",
                      "enum": [
                        "delete"
                      ],
                      "example": "delete"
                    },
                    "cuid": {
                      "allOf": [
                        {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        {
                          "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                        }
                      ]
                    },
                    "cuidtype": {
                      "allOf": [
                        {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        {
                          "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                        },
                        {
                          "example": "he"
                        }
                      ]
                    },
                    "timestamp": {
                      "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-24T13:44:17+02:00"
                    }
                  },
                  "required": [
                    "action",
                    "cuid",
                    "cuidtype",
                    "timestamp"
                  ]
                },
                {
                  "title": "array_add/array_remove Request",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "Use `array_add` and `array_remove` to edit data in existing arrays.",
                      "type": "string",
                      "enum": [
                        "array_add",
                        "array_remove"
                      ],
                      "example": "array_add"
                    },
                    "cuid": {
                      "allOf": [
                        {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        {
                          "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                        }
                      ]
                    },
                    "cuidtype": {
                      "allOf": [
                        {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        {
                          "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                        },
                        {
                          "example": "he"
                        }
                      ]
                    },
                    "timestamp": {
                      "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-24T13:44:17+02:00"
                    },
                    "data": {
                      "oneOf": [
                        {
                          "title": "Data: array of strings",
                          "description": "Add CRM data here.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "title": "Data: array of numbers",
                          "description": "Add CRM data here. Insert the integer values corresponding to your predefined dropdown array. [Learn more about mapping numeric values to dropdown arrays](https://support.dynamicyield.com/hc/en-us/articles/4409595248017-Update-Your-User-Data-Feed-by-API#h_01FZ58DYM9WMR66N2P3Z4NKF7R).",
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "action",
                    "cuid",
                    "cuidtype",
                    "timestamp",
                    "data"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "requests"
        ],
        "example": {
          "requests": [
            {
              "action": "upsert",
              "cuid": "0c907031b7d6515ce8def68a767272d0ec7225e987c3e0ce70b985c265f318f0",
              "cuidType": "ihe",
              "timestamp": "2023-07-02T10:44:44+02:00",
              "data": {
                "UserSegments": [
                  "segment 1",
                  "segment 2"
                ]
              }
            },
            {
              "action": "delete",
              "cuid": "myuser789",
              "cuidType": "ihe",
              "timestamp": "2022-05-24T12:31:09+02:00"
            }
          ]
        }
      },
      "ExternalEventsPayload": {
        "title": "External Events Request",
        "properties": {
          "user": {
            "description": "User's identifying details.",
            "type": "object",
            "properties": {
              "cuid": {
                "description": "User identifier value. Max 250 characters.",
                "type": "string",
                "enum": [
                  "demo@email.com",
                  "123456789"
                ]
              },
              "cuidType": {
                "allOf": [
                  {
                    "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                    "type": "string"
                  },
                  {
                    "description": "The type of identifier used to identify the user. The value should be one of the following:<ul><li>`he` - hashed email</li><li>Any custom identifier previously defined</li></ul>"
                  }
                ]
              }
            },
            "required": [
              "cuidType",
              "cuid"
            ]
          },
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              }
            }
          },
          "events": {
            "description": "One or more events to report.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Offline Purchase",
                  "description": "Reports that the user completed a purchase.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `offline-purchase-v1`.",
                              "type": "string",
                              "pattern": "offline-purchase-v1",
                              "default": "offline-purchase-v1",
                              "example": "offline-purchase-v1"
                            },
                            "uniqueTransactionId": {
                              "allOf": [
                                {
                                  "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                                  "type": "string",
                                  "example": "38373991919193830033"
                                },
                                {
                                  "description": "The purchase transaction ID. Each line contains a maximum of one SKU. If multiple items were purchased together, create multiple lines with the same transactionId.<br>The transaction ID must be unique per transaction, including online purchases.<br>A transaction with the same ID as another transaction previously ingested within the past day is ignored."
                                }
                              ]
                            },
                            "transactionSource": {
                              "description": "The source where the transaction occurred, usually the physical store ID.",
                              "type": "string",
                              "example": "f877e8a9dbb"
                            },
                            "transactionDatetime": {
                              "description": "The date and time of the purchase in **ISO 8601 combined date and time** format.",
                              "type": "string",
                              "example": "2018-09-23T07:29:51+00:00"
                            },
                            "currency": {
                              "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                              "type": "string",
                              "example": "USD"
                            },
                            "value": {
                              "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 19.9
                            },
                            "cart": {
                              "allOf": [
                                {
                                  "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Number of items.",
                                        "type": "number"
                                      },
                                      "itemPrice": {
                                        "allOf": [
                                          {
                                            "description": "unit.cents format using the section default currency.",
                                            "type": "number",
                                            "example": 23.99
                                          },
                                          {
                                            "description": "List price for each item (quantity of one). This might be different from the `transactionItemValue` due to discounts, taxes, and so on."
                                          }
                                        ]
                                      },
                                      "transactionItemValue": {
                                        "description": "Value of the line item in actual payment currency.<br>The value is the product of `itemPrice` times `quantity`, after discount and taxes.<br>Negative values are ignored.<br>Required if the `value` property is not defined. Otherwise, it's optional.",
                                        "type": "number",
                                        "example": 23.99
                                      },
                                      "size": {
                                        "description": "Product size.",
                                        "type": "string",
                                        "example": "L"
                                      },
                                      "innerProducts": {
                                        "description": "**For restaurants only.** Indicate any inner products within the main product.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "productId": {
                                              "description": "SKU exactly as it appears in the product feed.",
                                              "type": "string"
                                            },
                                            "quantity": {
                                              "description": "Number of items.",
                                              "type": "number"
                                            },
                                            "itemPrice": {
                                              "description": "unit.cents format using the section default currency.",
                                              "type": "number",
                                              "example": 23.99
                                            }
                                          },
                                          "required": [
                                            "productId"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "productId",
                                      "quantity",
                                      "itemPrice",
                                      "transactionItemValue"
                                    ]
                                  }
                                },
                                {
                                  "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                }
                              ]
                            }
                          },
                          "required": [
                            "dyType",
                            "uniqueTransactionId",
                            "transactionDatetime",
                            "value",
                            "cart"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "properties"
                  ]
                },
                {
                  "title": "Inform Affinity",
                  "description": "Report an array of product attributes to use in affinity personalization.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A human-readable name corresponding to the schema name.",
                      "type": "string"
                    },
                    "properties": {
                      "allOf": [
                        {
                          "description": "Data for the reported event.",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "dyType": {
                              "description": "Must be `inform-affinity-v1`.",
                              "type": "string",
                              "pattern": "inform-affinity-v1"
                            },
                            "source": {
                              "description": "The source of the user data",
                              "type": "string"
                            },
                            "data": {
                              "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "description": "name of attribute"
                                  },
                                  "values": {
                                    "type": "array",
                                    "maxItems": 10,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "dyType",
                            "data"
                          ]
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Inform Affinity",
                    "properties": {
                      "dyType": "inform-affinity-v1",
                      "source": "registration-form",
                      "data": [
                        {
                          "attribute": "categories",
                          "values": [
                            "shoes",
                            "tops",
                            "accessories"
                          ]
                        },
                        {
                          "attribute": "brand",
                          "values": [
                            "adidas"
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Custom Event",
                  "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Event name for display. Does not have a `dyType` property.",
                      "type": "string",
                      "example": "VIP Login"
                    },
                    "properties": {
                      "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                      "type": "object",
                      "properties": {
                        "value": {
                          "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                          "type": "number",
                          "example": 98.7
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        }
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "example": {
                    "name": "Custom Event Example 1",
                    "properties": {
                      "isVIP": true
                    }
                  }
                }
              ]
            }
          }
        },
        "required": [
          "user",
          "events"
        ],
        "example": null
      },
      "ProductFeedPayload": {
        "title": "Product Feed Request",
        "type": "object",
        "properties": {
          "requests": {
            "description": "A list of product feed action requests.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "SKU exactly as it appears in the product feed.",
                  "type": "string"
                },
                "action": {
                  "description": "Type of action requested. Valid values are:<ul>`update` - Insert a new product or rewrite an entire product’s data<br>`partial` - Update specific fields for a single product<br>`delete` - Delete a product</ul>",
                  "type": "string",
                  "enum": [
                    "update",
                    "partial",
                    "delete"
                  ]
                },
                "body": {
                  "description": "Single request body.",
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Product data.",
                      "type": "object",
                      "properties": {
                        "sku": {
                          "description": "SKU exactly as it appears in the product feed.",
                          "type": "string"
                        },
                        "group_id": {
                          "description": "Product group ID.",
                          "type": "string",
                          "example": "abc"
                        },
                        "url": {
                          "description": "Product details page URL (must be a valid URL, starting with HTTP/HTTPS).",
                          "type": "string",
                          "example": "http://www.example.com/abc-123"
                        },
                        "name": {
                          "description": "Product name.",
                          "type": "string",
                          "example": "white sneakers"
                        },
                        "price": {
                          "description": "unit.cents format using the section default currency.",
                          "type": "number",
                          "example": 23.99
                        },
                        "in_stock": {
                          "description": "Whether the product is in stock or in outage.",
                          "type": "boolean",
                          "example": true
                        },
                        "image_url": {
                          "description": "Product image URL.",
                          "type": "string",
                          "example": "http://www.example.com/abc-123.png"
                        },
                        "categories": {
                          "description": "Categories the product belongs to.",
                          "type": "string",
                          "example": "shoes|sneakers"
                        },
                        "description": {
                          "description": "Product description.",
                          "type": "string",
                          "example": "The white sneakers that everybody wants"
                        },
                        "publish_time": {
                          "description": "Date & time the product was published (added to feed or edited), using the following format: `yyyy-MM-dd'T'HH:mm:ss`",
                          "type": "string",
                          "example": "2018-02-12T17:05:12"
                        },
                        "keywords": {
                          "description": "A list of keywords describing the product.",
                          "type": "string",
                          "example": "tag1|tag2"
                        }
                      },
                      "additionalProperties": true
                    }
                  }
                }
              },
              "required": [
                "id",
                "action"
              ]
            }
          }
        },
        "required": [
          "requests"
        ],
        "example": {
          "requests": [
            {
              "id": "56EF030B",
              "action": "UPDATE",
              "body": {
                "data": {
                  "sku": "56EF030B",
                  "group_id": "abc",
                  "url": "http://www.example.com/abc-123",
                  "name": "white sneakers",
                  "price": 40.9,
                  "in_stock": true,
                  "image_url": "http://www.example.com/abc-123.png",
                  "categories": "shoes|sneakers",
                  "description": "The white sneakers that everybody wants",
                  "publish_time": "2018-02-12T17:05:12",
                  "keywords": "tag1|tag2"
                }
              }
            },
            {
              "id": "56EF0889",
              "action": "DELETE"
            }
          ]
        }
      },
      "BranchFeedPayloadQsr": {
        "title": "Branch Feed Update Request - Restaurants",
        "description": "Availability status and price for each product in a specific branch.",
        "type": "object",
        "properties": {
          "products": {
            "description": "A list of products to be updated.",
            "type": "array",
            "items": {
              "properties": {
                "sku": {
                  "description": "The SKU (unique identifier) of the product. These SKUs must exist in the global product feed.",
                  "type": "string",
                  "example": "A123"
                },
                "availability": {
                  "description": "Whether the product is available in the specific branch or not. Unavailable products will not be recommended.",
                  "type": "boolean",
                  "example": true
                },
                "price": {
                  "description": "The price of the product that is used in the specific branch.",
                  "type": "number",
                  "example": 3.14
                },
                "name": {
                  "description": "A local variation of the product name, if exists in the specific branch.",
                  "type": "string"
                },
                "addons": {
                  "description": "The SKUs of all the products that can be added onto the main product, and the permitted quantities.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "sku": {
                        "description": "The SKU (unique identifier) of the product. These SKUs must exist in the global product feed.",
                        "type": "string",
                        "example": "A123"
                      },
                      "default_quantity": {
                        "description": "The default quantity of this ingredient (add on) inside the parent product.",
                        "type": "number",
                        "example": 1
                      },
                      "min_quantity": {
                        "description": "The minimum quantity of this ingredient (add on) inside the parent product.",
                        "type": "number",
                        "example": 0
                      },
                      "max_quantity": {
                        "description": "The maximum quantity of this ingredient (add on) inside the parent product.",
                        "type": "number",
                        "example": 3
                      },
                      "charge_threshold": {
                        "description": "The amount from which the QSR is going to charge for the addition of the add on.",
                        "type": "number",
                        "example": 1
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  }
                }
              },
              "required": [
                "sku",
                "availability",
                "price"
              ]
            }
          }
        },
        "required": [
          "products"
        ]
      },
      "OutagePayloadQsr": {
        "title": "Outage Request - Restaurants",
        "type": "object",
        "properties": {
          "outages": {
            "description": "A list of outage reports per branch.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "branchId": {
                  "description": "The ID of the branch the recommendation is for.",
                  "type": "string"
                },
                "products": {
                  "description": "A list of out-of-stock product IDs",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "branchId",
                "products"
              ]
            }
          }
        },
        "required": [
          "outages"
        ]
      },
      "Choice": {
        "title": "Choice",
        "type": "object",
        "properties": {
          "choices": {
            "description": "The chosen variation for each campaign.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "type: DECISION",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "default": "DECISION",
                      "pattern": "DECISION"
                    },
                    "variations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "payload": {
                            "oneOf": [
                              {
                                "title": "Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "CUSTOM_JSON",
                                    "pattern": "CUSTOM_JSON"
                                  },
                                  "data": {
                                    "type": "object"
                                  }
                                }
                              },
                              {
                                "title": "Control Group Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "CUSTOM_JSON_CONTROL_GROUP_VARIATION",
                                    "pattern": "CUSTOM_JSON_CONTROL_GROUP_VARIATION"
                                  }
                                }
                              }
                            ]
                          },
                          "analyticsMetadata": {
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "number"
                              },
                              "campaignName": {
                                "type": "string"
                              },
                              "experienceId": {
                                "type": "number"
                              },
                              "experienceName": {
                                "type": "string"
                              },
                              "variationId": {
                                "type": "number"
                              },
                              "variationName": {
                                "type": "string",
                                "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                              }
                            }
                          }
                        }
                      }
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "decisionId": {
                      "type": "string"
                    },
                    "allocationGroup": {
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "type: RECS_DECISION",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "default": "RECS_DECISION",
                      "pattern": "RECS_DECISION"
                    },
                    "variations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "payload": {
                            "oneOf": [
                              {
                                "title": "Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "RECS",
                                    "pattern": "RECS"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "custom": {
                                        "type": "object"
                                      },
                                      "slots": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "sku": {
                                              "type": "string"
                                            },
                                            "slotId": {
                                              "type": "string"
                                            },
                                            "productData": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "title": "Control Group Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "RECS_CONTROL_GROUP_VARIATION",
                                    "pattern": "RECS_CONTROL_GROUP_VARIATION"
                                  }
                                }
                              }
                            ]
                          },
                          "analyticsMetadata": {
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "number"
                              },
                              "campaignName": {
                                "type": "string"
                              },
                              "experienceId": {
                                "type": "number"
                              },
                              "experienceName": {
                                "type": "string"
                              },
                              "variationId": {
                                "type": "number"
                              },
                              "variationName": {
                                "type": "string",
                                "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                              }
                            }
                          }
                        }
                      }
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "decisionId": {
                      "type": "string"
                    },
                    "allocationGroup": {
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "type: STORE_RECS_DECISION",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "default": "STORE_RECS_DECISION",
                      "pattern": "STORE_RECS_DECISION"
                    },
                    "variations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "payload": {
                            "oneOf": [
                              {
                                "title": "Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "STORE_RECS",
                                    "pattern": "STORE_RECS"
                                  },
                                  "data": {
                                    "type": "object"
                                  }
                                }
                              },
                              {
                                "title": "Control Group Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "STORE_RECS_CONTROL_GROUP_VARIATION",
                                    "pattern": "STORE_RECS_CONTROL_GROUP_VARIATION"
                                  }
                                }
                              }
                            ]
                          },
                          "analyticsMetadata": {
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "number"
                              },
                              "campaignName": {
                                "type": "string"
                              },
                              "experienceId": {
                                "type": "number"
                              },
                              "experienceName": {
                                "type": "string"
                              },
                              "variationId": {
                                "type": "number"
                              },
                              "variationName": {
                                "type": "string",
                                "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                              }
                            }
                          }
                        }
                      }
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "decisionId": {
                      "type": "string"
                    },
                    "allocationGroup": {
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "type: SORTING_DECISION",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string",
                      "default": "SORTING_DECISION",
                      "pattern": "SORTING_DECISION"
                    },
                    "decisionId": {
                      "type": "string"
                    },
                    "variations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "payload": {
                            "oneOf": [
                              {
                                "title": "Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "SORT",
                                    "pattern": "SORT"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "slots": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "sku": {
                                              "type": "string"
                                            },
                                            "slotId": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "title": "Control Group Payload",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "default": "SORT_CONTROL_GROUP_VARIATION",
                                    "pattern": "SORT_CONTROL_GROUP_VARIATION"
                                  }
                                }
                              }
                            ]
                          },
                          "analyticsMetadata": {
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "number"
                              },
                              "campaignName": {
                                "type": "string"
                              },
                              "experienceId": {
                                "type": "number"
                              },
                              "experienceName": {
                                "type": "string"
                              },
                              "variationId": {
                                "type": "number"
                              },
                              "variationName": {
                                "type": "string",
                                "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "cookies": {
            "description": "Cookies returned from the server.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "maxAge": {
                  "type": "string"
                }
              }
            }
          },
          "warnings": {
            "description": "Errors returned by the server.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "QueryResults": {
        "title": "Query Results",
        "type": "object",
        "properties": {
          "choices": {
            "description": "The chosen variation for each campaign.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "type: \"SEMANTIC_SEARCH_DECISION\"",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": "Semantic Search",
                      "pattern": "Semantic Search"
                    },
                    "type": {
                      "type": "string",
                      "default": "SEMANTIC_SEARCH_DECISION",
                      "pattern": "SEMANTIC_SEARCH_DECISION"
                    },
                    "variations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "payload": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "default": "SEARCH",
                                "pattern": "SEARCH"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "totalNumResults": {
                                    "type": "number"
                                  },
                                  "facets": {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "title": "valuesType: \"string\"",
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "valuesType": {
                                              "type": "string",
                                              "enum": [
                                                "string"
                                              ]
                                            },
                                            "displayName": {
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "count": {
                                                    "type": "number"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "title": "valuesType: \"number\"",
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "valuesType": {
                                              "type": "string",
                                              "enum": [
                                                "number"
                                              ]
                                            },
                                            "displayName": {
                                              "type": "string"
                                            },
                                            "min": {
                                              "type": "number"
                                            },
                                            "max": {
                                              "type": "number"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "slots": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "slotId": {
                                          "type": "string"
                                        },
                                        "sku": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "analyticsMetadata": {
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "number"
                              },
                              "campaignName": {
                                "type": "string"
                              },
                              "experienceId": {
                                "type": "number"
                              },
                              "experienceName": {
                                "type": "string"
                              },
                              "variationId": {
                                "type": "number"
                              },
                              "variationName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "decisionId": {
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "type: \"VISUAL_SEARCH_DECISION\"",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": "Visual Search",
                      "pattern": "Visual Search"
                    },
                    "type": {
                      "type": "string",
                      "default": "VISUAL_SEARCH_DECISION",
                      "pattern": "VISUAL_SEARCH_DECISION"
                    },
                    "variations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "payload": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "default": "SEARCH",
                                "pattern": "SEARCH"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "totalNumResults": {
                                    "type": "number"
                                  },
                                  "facets": {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "title": "valuesType: \"string\"",
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "valuesType": {
                                              "type": "string",
                                              "enum": [
                                                "string"
                                              ]
                                            },
                                            "displayName": {
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "count": {
                                                    "type": "number"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "title": "valuesType: \"number\"",
                                          "type": "object",
                                          "properties": {
                                            "column": {
                                              "type": "string"
                                            },
                                            "valuesType": {
                                              "type": "string",
                                              "enum": [
                                                "number"
                                              ]
                                            },
                                            "displayName": {
                                              "type": "string"
                                            },
                                            "min": {
                                              "type": "number"
                                            },
                                            "max": {
                                              "type": "number"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "slots": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "slotId": {
                                          "type": "string"
                                        },
                                        "sku": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "analyticsMetadata": {
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "number"
                              },
                              "campaignName": {
                                "type": "string"
                              },
                              "experienceId": {
                                "type": "number"
                              },
                              "experienceName": {
                                "type": "string"
                              },
                              "variationId": {
                                "type": "number"
                              },
                              "variationName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "decisionId": {
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "type: SHOPPING_MUSE_DECISION",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": "Shopping Muse",
                      "pattern": "Shopping Muse"
                    },
                    "type": {
                      "type": "string",
                      "default": "SHOPPING_MUSE_DECISION",
                      "pattern": "SHOPPING_MUSE_DECISION"
                    },
                    "variations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "payload": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "default": "SHOPPING_MUSE",
                                "pattern": "SHOPPING_MUSE"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "assistant": {
                                    "type": "string"
                                  },
                                  "widgets": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "title": {
                                          "type": "string"
                                        },
                                        "slots": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "sku": {
                                                "type": "string"
                                              },
                                              "slotId": {
                                                "type": "string"
                                              },
                                              "productData": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "support": {
                                    "type": "boolean"
                                  },
                                  "chatId": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "analyticsMetadata": {
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "number"
                              },
                              "campaignName": {
                                "type": "string"
                              },
                              "experienceId": {
                                "type": "number"
                              },
                              "experienceName": {
                                "type": "string"
                              },
                              "variationId": {
                                "type": "number"
                              },
                              "variationName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "decisionId": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "cookies": {
            "description": "Cookies returned from the server.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "maxAge": {
                  "type": "string"
                }
              }
            }
          },
          "warnings": {
            "description": "Errors returned by the server.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ProductFeedUpdate": {
        "title": "Product Feed Update",
        "type": "object",
        "properties": {
          "success": {
            "description": "The update request's success status.",
            "type": "boolean",
            "example": true
          },
          "data": {
            "description": "Response body.",
            "type": "object",
            "properties": {
              "transaction_id": {
                "description": "The ID for the update transaction. A transaction includes all individual items for which an update was requested.",
                "type": "string",
                "example": "3754b085584be8561926dabc32b359a0"
              }
            }
          }
        }
      },
      "TransactionStatusSpecificItem": {
        "title": "Transaction Status - Specific Item",
        "type": "object",
        "properties": {
          "item": {
            "description": "The request item's ID.",
            "type": "string",
            "example": "abc-123"
          },
          "status": {
            "description": "Whether the item has been successfully updated.",
            "type": "string",
            "example": "success"
          },
          "time": {
            "description": "Timestamp for most recent status change.",
            "type": "string",
            "example": "2023-03-30T08:20:35.827+0000"
          }
        },
        "additionalProperties": true
      },
      "TransactionStatus": {
        "title": "Transaction Status",
        "type": "array",
        "items": {
          "title": "Transaction Status - Specific Item",
          "type": "object",
          "properties": {
            "item": {
              "description": "The request item's ID.",
              "type": "string",
              "example": "abc-123"
            },
            "status": {
              "description": "Whether the item has been successfully updated.",
              "type": "string",
              "example": "success"
            },
            "time": {
              "description": "Timestamp for most recent status change.",
              "type": "string",
              "example": "2023-03-30T08:20:35.827+0000"
            }
          },
          "additionalProperties": true
        }
      },
      "Error": {
        "description": "Response object for an invalid request.",
        "type": "object",
        "properties": {
          "message": {
            "description": "Error description.",
            "type": "string",
            "example": "request must contain context page location"
          },
          "type": {
            "description": "The type of error encountered.",
            "type": "string",
            "example": "badRequest"
          }
        }
      },
      "ErrorMessage": {
        "description": "Error description.",
        "type": "string",
        "example": "request must contain context page location"
      },
      "ErrorType": {
        "description": "The type of error encountered.",
        "type": "string",
        "example": "badRequest"
      },
      "ResponseDecisionVariationItemPayload": {
        "title": "Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "CUSTOM_JSON",
            "pattern": "CUSTOM_JSON"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ResponseDecisionCGVariationItemPayload": {
        "title": "Control Group Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "CUSTOM_JSON_CONTROL_GROUP_VARIATION",
            "pattern": "CUSTOM_JSON_CONTROL_GROUP_VARIATION"
          }
        }
      },
      "ResponseRecsVariationItemPayload": {
        "title": "Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "RECS",
            "pattern": "RECS"
          },
          "data": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object"
              },
              "slots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string"
                    },
                    "slotId": {
                      "type": "string"
                    },
                    "productData": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ResponseRecsCGVariationItemPayload": {
        "title": "Control Group Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "RECS_CONTROL_GROUP_VARIATION",
            "pattern": "RECS_CONTROL_GROUP_VARIATION"
          }
        }
      },
      "ResponseSortVariationItemPayload": {
        "title": "Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "SORT",
            "pattern": "SORT"
          },
          "data": {
            "type": "object",
            "properties": {
              "slots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string"
                    },
                    "slotId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ResponseSortCGVariationItemPayload": {
        "title": "Control Group Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "SORT_CONTROL_GROUP_VARIATION",
            "pattern": "SORT_CONTROL_GROUP_VARIATION"
          }
        }
      },
      "ResponseStoreRecsVariationItemPayload": {
        "title": "Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "STORE_RECS",
            "pattern": "STORE_RECS"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ResponseStoreRecsCGVariationItemPayload": {
        "title": "Control Group Payload",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "STORE_RECS_CONTROL_GROUP_VARIATION",
            "pattern": "STORE_RECS_CONTROL_GROUP_VARIATION"
          }
        }
      },
      "EngagementUserEcom": {
        "title": "User",
        "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
        "type": "object",
        "properties": {
          "dyid": {
            "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
            "type": "string"
          },
          "dyid_server": {
            "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
            "type": "string"
          },
          "active_consent_accepted": {
            "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
            "type": "boolean",
            "default": false
          }
        }
      },
      "UserQsr": {
        "oneOf": [
          {
            "title": "User (sharedDevice: true)",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
            "type": "object",
            "properties": {
              "sharedDevice": {
                "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "sharedDevice"
            ]
          },
          {
            "allOf": [
              {
                "title": "User (sharedDevice: false)"
              },
              {
                "title": "User",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                "type": "object",
                "properties": {
                  "dyid": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "dyid_server": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "active_consent_accepted": {
                    "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              {
                "properties": {
                  "sharedDevice": {
                    "description": "Set to `false` for transactions made on personal devices.",
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ],
            "required": [
              "sharedDevice"
            ]
          }
        ]
      },
      "ChooseUserEcom": {
        "title": "User",
        "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
        "type": "object",
        "properties": {
          "dyid": {
            "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
            "type": "string"
          },
          "dyid_server": {
            "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
            "type": "string"
          },
          "active_consent_accepted": {
            "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ChooseUserQsr": {
        "oneOf": [
          {
            "title": "User (sharedDevice: true)",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
            "type": "object",
            "properties": {
              "sharedDevice": {
                "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                "type": "boolean",
                "default": true
              },
              "cuid": {
                "description": "User identifier value. Required for identified user flows.",
                "type": "string"
              },
              "cuidType": {
                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**<br>Required for identified user flows.",
                "type": "string"
              }
            },
            "required": [
              "sharedDevice"
            ]
          },
          {
            "allOf": [
              {
                "title": "User (sharedDevice: false)"
              },
              {
                "title": "User",
                "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                "type": "object",
                "properties": {
                  "dyid": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "dyid_server": {
                    "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                    "type": "string"
                  },
                  "active_consent_accepted": {
                    "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              {
                "properties": {
                  "sharedDevice": {
                    "description": "Set to `false` for transactions made on personal devices.",
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ],
            "required": [
              "sharedDevice"
            ]
          }
        ]
      },
      "UserQsrSharedDeviceTrue": {
        "title": "User (sharedDevice: true)",
        "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
        "type": "object",
        "properties": {
          "sharedDevice": {
            "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "sharedDevice"
        ]
      },
      "UserQsrSharedDeviceFalse": {
        "allOf": [
          {
            "title": "User (sharedDevice: false)"
          },
          {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "properties": {
              "sharedDevice": {
                "description": "Set to `false` for transactions made on personal devices.",
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "required": [
          "sharedDevice"
        ]
      },
      "ChooseUserQsrSharedDeviceTrue": {
        "title": "User (sharedDevice: true)",
        "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
        "type": "object",
        "properties": {
          "sharedDevice": {
            "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
            "type": "boolean",
            "default": true
          },
          "cuid": {
            "description": "User identifier value. Required for identified user flows.",
            "type": "string"
          },
          "cuidType": {
            "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**<br>Required for identified user flows.",
            "type": "string"
          }
        },
        "required": [
          "sharedDevice"
        ]
      },
      "ChooseUserQsrSharedDeviceFalse": {
        "allOf": [
          {
            "title": "User (sharedDevice: false)"
          },
          {
            "title": "User",
            "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
            "type": "object",
            "properties": {
              "dyid": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "dyid_server": {
                "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                "type": "string"
              },
              "active_consent_accepted": {
                "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "properties": {
              "sharedDevice": {
                "description": "Set to `false` for transactions made on personal devices.",
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "required": [
          "sharedDevice"
        ]
      },
      "Dyid": {
        "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
        "type": "string"
      },
      "ActiveConsentAccepted": {
        "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
        "type": "boolean",
        "default": false
      },
      "SharedDeviceTrue": {
        "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
        "type": "boolean",
        "default": true
      },
      "SharedDeviceFalse": {
        "description": "Set to `false` for transactions made on personal devices.",
        "type": "boolean",
        "default": false
      },
      "Cuid": {
        "description": "User identifier value. Max 250 characters.",
        "type": "string",
        "enum": [
          "demo@email.com",
          "123456789"
        ]
      },
      "CuidType": {
        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
        "type": "string"
      },
      "HashedEmail": {
        "description": "SHA-256 encoding of the lowercase email address. You can use this identifier type instead of `cuid` and `cuidType`.",
        "type": "string"
      },
      "PlainTextEmail": {
        "description": "A valid plain text email address.<br>Use either `plainTextEmail` OR `externalId`, not both.<br>This API uses plain text email addresses because we use the addresses for triggered emails and audience exports. Hashing only works one way, and PII data can't be decrypted.<br>*Required for `cuidType: email`*",
        "type": "string"
      },
      "PhoneNumber": {
        "description": "Use this identifier type to identify users for the SMS channel in Reconnect campaigns.",
        "type": "string"
      },
      "SecondaryIdentifiers": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "hashedPhoneNumber"
            },
            "value": {
              "type": "string",
              "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
            }
          }
        }
      },
      "ExternalId": {
        "description": "The external ID used to identify the user. Your ESP must be able to recognize this ID and map it to an email address.<br>Use either `plainTextEmail` OR `externalId`, not both.<br>**Note:** The external ID type is supported only by custom ESP and Emarsys integrations (and not by SendGrid or Responsys, for example).<br>*Required for `cuidType: external`*",
        "type": "string"
      },
      "Session": {
        "title": "Session",
        "description": "Session ID. A Dynamic Yield-generated identifier is used.",
        "type": "object",
        "properties": {
          "dy": {
            "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
            "type": "string"
          }
        }
      },
      "SessionChoose": {
        "title": "Session",
        "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
        "type": "object",
        "properties": {
          "dy": {
            "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
            "type": "string"
          }
        }
      },
      "SessionEngagement": {
        "title": "Session",
        "description": "Session ID. A Dynamic Yield-generated identifier is used.",
        "type": "object",
        "properties": {
          "dy": {
            "description": "Pass the value of the `_dyjsession` cookie if it exists.",
            "type": "string"
          }
        }
      },
      "Dy": {
        "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
        "type": "string"
      },
      "ContextChooseEcom": {
        "title": "Context",
        "description": "The request's context.",
        "type": "object",
        "properties": {
          "page": {
            "description": "Data for the page currently being browsed.",
            "type": "object",
            "properties": {
              "type": {
                "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                "type": "string",
                "enum": [
                  "HOMEPAGE",
                  "CATEGORY",
                  "PRODUCT",
                  "CART",
                  "OTHER"
                ],
                "example": "HOMEPAGE"
              },
              "data": {
                "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "p76311-020"
                ]
              },
              "location": {
                "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                "type": "string",
                "example": "https://shop.biz/nice-shirt-p76311.html"
              },
              "referrer": {
                "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                "type": "string",
                "example": "https://google.cz"
              },
              "locale": {
                "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "string",
                "example": "en_US"
              }
            },
            "required": [
              "type",
              "location"
            ]
          },
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "userAgent": {
                "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                "type": "string",
                "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
              },
              "type": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                "type": "string",
                "enum": [
                  "DESKTOP",
                  "SMARTPHONE",
                  "TABLET",
                  "KIOSK"
                ]
              },
              "browser": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                "type": "string",
                "enum": [
                  "Chrome",
                  "Firefox",
                  "Opera",
                  "Safari",
                  "Other"
                ],
                "example": "Firefox"
              },
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              },
              "dateTime": {
                "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                "type": "string",
                "example": "2024-01-01T22:30:00.000-05:00"
              }
            }
          },
          "channel": {
            "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
            "type": "string",
            "enum": [
              "WEB",
              "APP"
            ]
          },
          "pageAttributes": {
            "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "listedItems": {
            "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "SKU1",
              "SKU2"
            ]
          },
          "branch": {
            "description": "The branch where the user experience is taking place.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The branch's unique identifier.",
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "required": [
          "page",
          "device"
        ]
      },
      "ContextChooseQsr": {
        "title": "Context",
        "description": "The request's context.",
        "type": "object",
        "properties": {
          "page": {
            "description": "Data for the page currently being browsed.",
            "type": "object",
            "properties": {
              "type": {
                "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                "type": "string",
                "enum": [
                  "HOMEPAGE",
                  "CATEGORY",
                  "PRODUCT",
                  "CART",
                  "OTHER"
                ],
                "example": "HOMEPAGE"
              },
              "data": {
                "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "p76311-020"
                ]
              },
              "location": {
                "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                "type": "string",
                "example": "https://shop.biz/nice-shirt-p76311.html"
              },
              "referrer": {
                "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                "type": "string",
                "example": "https://google.cz"
              },
              "locale": {
                "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "string",
                "example": "en_US"
              }
            },
            "required": [
              "type",
              "location"
            ]
          },
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "userAgent": {
                "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                "type": "string",
                "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
              },
              "type": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
                "type": "string",
                "enum": [
                  "DESKTOP",
                  "SMARTPHONE",
                  "TABLET",
                  "KIOSK",
                  "ODMB"
                ]
              },
              "browser": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                "type": "string",
                "enum": [
                  "Chrome",
                  "Firefox",
                  "Opera",
                  "Safari",
                  "Other"
                ],
                "example": "Firefox"
              },
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              },
              "dateTime": {
                "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                "type": "string",
                "example": "2024-01-01T22:30:00.000-05:00"
              },
              "id": {
                "description": "The identifier of the device in the branch.",
                "type": "string"
              }
            },
            "required": [
              "dateTime",
              "type"
            ]
          },
          "branch": {
            "description": "Use to recommend only items in stock at the branch the user is browsing.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the branch the recommendation is for.",
                "type": "string"
              },
              "dayPart": {
                "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                "type": "string",
                "enum": [
                  "BREAKFAST",
                  "LUNCH",
                  "DINNER",
                  "LATENIGHT"
                ]
              },
              "orderFulfillment": {
                "description": "The fulfillment type of the order the request relates to.",
                "type": "string",
                "enum": [
                  "DELIVERY",
                  "PICKUP",
                  "DINEIN",
                  "CURBSIDE"
                ]
              }
            },
            "required": [
              "dayPart"
            ]
          },
          "channel": {
            "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
            "type": "string",
            "enum": [
              "WEB",
              "APP",
              "KIOSK",
              "DRIVE-THRU"
            ]
          },
          "cart": {
            "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "description": "The product ID from the restaurant product catalog.",
                  "type": "string"
                },
                "quantity": {
                  "description": "Number of items.",
                  "type": "number"
                },
                "itemPrice": {
                  "description": "unit.cents format using the section default currency.",
                  "type": "number",
                  "example": 23.99
                },
                "innerProducts": {
                  "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productId": {
                        "description": "The product ID from the restaurant product catalog.",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "Number of items.",
                        "type": "number"
                      },
                      "itemPrice": {
                        "description": "unit.cents format using the section default currency.",
                        "type": "number",
                        "example": 23.99
                      }
                    },
                    "required": [
                      "productId"
                    ]
                  }
                }
              },
              "required": [
                "productId"
              ]
            }
          },
          "pageAttributes": {
            "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          }
        },
        "required": [
          "branch",
          "channel"
        ]
      },
      "ContextSearchEcom": {
        "title": "Context",
        "description": "The request's context.",
        "type": "object",
        "properties": {
          "page": {
            "description": "Data for the page currently being browsed.",
            "type": "object",
            "properties": {
              "type": {
                "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                "type": "string",
                "enum": [
                  "HOMEPAGE",
                  "CATEGORY",
                  "PRODUCT",
                  "CART",
                  "OTHER"
                ],
                "example": "HOMEPAGE"
              },
              "data": {
                "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "p76311-020"
                ]
              },
              "location": {
                "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                "type": "string",
                "example": "https://shop.biz/nice-shirt-p76311.html"
              },
              "referrer": {
                "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                "type": "string",
                "example": "https://google.cz"
              },
              "locale": {
                "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "string",
                "example": "en_US"
              }
            },
            "required": [
              "type",
              "location"
            ]
          },
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "userAgent": {
                "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                "type": "string",
                "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
              },
              "type": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                "type": "string",
                "enum": [
                  "DESKTOP",
                  "SMARTPHONE",
                  "TABLET",
                  "KIOSK"
                ]
              },
              "browser": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                "type": "string",
                "enum": [
                  "Chrome",
                  "Firefox",
                  "Opera",
                  "Safari",
                  "Other"
                ],
                "example": "Firefox"
              },
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              },
              "dateTime": {
                "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                "type": "string",
                "example": "2024-01-01T22:30:00.000-05:00"
              }
            }
          },
          "channel": {
            "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
            "type": "string",
            "enum": [
              "WEB",
              "APP"
            ]
          },
          "pageAttributes": {
            "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "branch": {
            "description": "The branch where the user experience is taking place.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The branch's unique identifier.",
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "required": [
          "page",
          "device"
        ]
      },
      "ContextEngagementEcom": {
        "title": "Context",
        "description": "The request's context.",
        "type": "object",
        "properties": {
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              }
            }
          },
          "channel": {
            "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
            "type": "string",
            "enum": [
              "WEB",
              "APP"
            ]
          }
        }
      },
      "ContextEngagementQsr": {
        "title": "Context",
        "description": "The request's context.",
        "type": "object",
        "properties": {
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              }
            }
          },
          "branch": {
            "description": "Use to recommend only items in stock at the branch the user is browsing.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the branch the recommendation is for.",
                "type": "string"
              },
              "dayPart": {
                "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                "type": "string",
                "enum": [
                  "BREAKFAST",
                  "LUNCH",
                  "DINNER",
                  "LATENIGHT"
                ]
              }
            },
            "required": [
              "id",
              "dayPart"
            ]
          },
          "channel": {
            "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
            "type": "string",
            "enum": [
              "WEB",
              "APP",
              "KIOSK",
              "DRIVE-THRU"
            ]
          }
        },
        "required": [
          "branch",
          "channel"
        ]
      },
      "ContextEventQsr": {
        "title": "Context",
        "description": "The request's context.",
        "type": "object",
        "properties": {
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "type": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
                "type": "string",
                "enum": [
                  "DESKTOP",
                  "SMARTPHONE",
                  "TABLET",
                  "KIOSK",
                  "ODMB"
                ]
              },
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              },
              "id": {
                "description": "The identifier of the device in the branch.",
                "type": "string"
              },
              "dateTime": {
                "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                "type": "string",
                "example": "2024-01-01T22:30:00.000-05:00"
              }
            },
            "required": [
              "type"
            ]
          },
          "branch": {
            "description": "Use to recommend only items in stock at the branch the user is browsing.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the branch the recommendation is for.",
                "type": "string"
              },
              "dayPart": {
                "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                "type": "string",
                "enum": [
                  "BREAKFAST",
                  "LUNCH",
                  "DINNER",
                  "LATENIGHT"
                ]
              },
              "orderFulfillment": {
                "description": "The fulfillment type of the order the request relates to.",
                "type": "string",
                "enum": [
                  "DELIVERY",
                  "PICKUP",
                  "DINEIN",
                  "CURBSIDE"
                ]
              }
            },
            "required": [
              "id",
              "dayPart"
            ]
          },
          "channel": {
            "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
            "type": "string",
            "enum": [
              "WEB",
              "APP",
              "KIOSK",
              "DRIVE-THRU"
            ]
          }
        },
        "required": [
          "device",
          "branch"
        ]
      },
      "ContextPageviewEcom": {
        "title": "Context",
        "description": "The request's context.",
        "type": "object",
        "properties": {
          "page": {
            "description": "Data for the page currently being browsed.",
            "type": "object",
            "properties": {
              "type": {
                "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                "type": "string",
                "enum": [
                  "HOMEPAGE",
                  "CATEGORY",
                  "PRODUCT",
                  "CART",
                  "OTHER"
                ],
                "example": "HOMEPAGE"
              },
              "data": {
                "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "p76311-020"
                ]
              },
              "location": {
                "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                "type": "string",
                "example": "https://shop.biz/nice-shirt-p76311.html"
              },
              "referrer": {
                "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                "type": "string",
                "example": "https://google.cz"
              },
              "locale": {
                "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                "type": "string",
                "example": "en_US"
              }
            },
            "required": [
              "type",
              "location"
            ]
          },
          "device": {
            "description": "Data for the served device.",
            "type": "object",
            "properties": {
              "userAgent": {
                "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                "type": "string",
                "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
              },
              "type": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                "type": "string",
                "enum": [
                  "DESKTOP",
                  "SMARTPHONE",
                  "TABLET",
                  "KIOSK"
                ]
              },
              "browser": {
                "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                "type": "string",
                "enum": [
                  "Chrome",
                  "Firefox",
                  "Opera",
                  "Safari",
                  "Other"
                ],
                "example": "Firefox"
              },
              "ip": {
                "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                "type": "string",
                "example": "54.100.200.255"
              }
            }
          },
          "channel": {
            "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
            "type": "string",
            "enum": [
              "WEB",
              "APP"
            ]
          }
        },
        "required": [
          "page",
          "device"
        ]
      },
      "Page": {
        "description": "Data for the page currently being browsed.",
        "type": "object",
        "properties": {
          "type": {
            "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
            "type": "string",
            "enum": [
              "HOMEPAGE",
              "CATEGORY",
              "PRODUCT",
              "CART",
              "OTHER"
            ],
            "example": "HOMEPAGE"
          },
          "data": {
            "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "p76311-020"
            ]
          },
          "location": {
            "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
            "type": "string",
            "example": "https://shop.biz/nice-shirt-p76311.html"
          },
          "referrer": {
            "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
            "type": "string",
            "example": "https://google.cz"
          },
          "locale": {
            "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
            "type": "string",
            "example": "en_US"
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "PageType": {
        "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
        "type": "string",
        "enum": [
          "HOMEPAGE",
          "CATEGORY",
          "PRODUCT",
          "CART",
          "OTHER"
        ],
        "example": "HOMEPAGE"
      },
      "PageData": {
        "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "p76311-020"
        ]
      },
      "Location": {
        "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
        "type": "string",
        "example": "https://shop.biz/nice-shirt-p76311.html"
      },
      "Referrer": {
        "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
        "type": "string",
        "example": "https://google.cz"
      },
      "Locale": {
        "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
        "type": "string",
        "example": "en_US"
      },
      "DeviceChooseEcom": {
        "description": "Data for the served device.",
        "type": "object",
        "properties": {
          "userAgent": {
            "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
            "type": "string",
            "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
          },
          "type": {
            "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
            "type": "string",
            "enum": [
              "DESKTOP",
              "SMARTPHONE",
              "TABLET",
              "KIOSK"
            ]
          },
          "browser": {
            "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
            "type": "string",
            "enum": [
              "Chrome",
              "Firefox",
              "Opera",
              "Safari",
              "Other"
            ],
            "example": "Firefox"
          },
          "ip": {
            "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
            "type": "string",
            "example": "54.100.200.255"
          },
          "dateTime": {
            "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
            "type": "string",
            "example": "2024-01-01T22:30:00.000-05:00"
          }
        }
      },
      "DeviceChooseQsr": {
        "description": "Data for the served device.",
        "type": "object",
        "properties": {
          "userAgent": {
            "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
            "type": "string",
            "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
          },
          "type": {
            "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
            "type": "string",
            "enum": [
              "DESKTOP",
              "SMARTPHONE",
              "TABLET",
              "KIOSK",
              "ODMB"
            ]
          },
          "browser": {
            "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
            "type": "string",
            "enum": [
              "Chrome",
              "Firefox",
              "Opera",
              "Safari",
              "Other"
            ],
            "example": "Firefox"
          },
          "ip": {
            "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
            "type": "string",
            "example": "54.100.200.255"
          },
          "dateTime": {
            "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
            "type": "string",
            "example": "2024-01-01T22:30:00.000-05:00"
          },
          "id": {
            "description": "The identifier of the device in the branch.",
            "type": "string"
          }
        },
        "required": [
          "dateTime",
          "type"
        ]
      },
      "DeviceEngagement": {
        "description": "Data for the served device.",
        "type": "object",
        "properties": {
          "ip": {
            "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
            "type": "string",
            "example": "54.100.200.255"
          }
        }
      },
      "DeviceEventQsr": {
        "description": "Data for the served device.",
        "type": "object",
        "properties": {
          "type": {
            "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
            "type": "string",
            "enum": [
              "DESKTOP",
              "SMARTPHONE",
              "TABLET",
              "KIOSK",
              "ODMB"
            ]
          },
          "ip": {
            "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
            "type": "string",
            "example": "54.100.200.255"
          },
          "id": {
            "description": "The identifier of the device in the branch.",
            "type": "string"
          },
          "dateTime": {
            "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
            "type": "string",
            "example": "2024-01-01T22:30:00.000-05:00"
          }
        },
        "required": [
          "type"
        ]
      },
      "DevicePageviewEcom": {
        "description": "Data for the served device.",
        "type": "object",
        "properties": {
          "userAgent": {
            "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
            "type": "string",
            "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
          },
          "type": {
            "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
            "type": "string",
            "enum": [
              "DESKTOP",
              "SMARTPHONE",
              "TABLET",
              "KIOSK"
            ]
          },
          "browser": {
            "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
            "type": "string",
            "enum": [
              "Chrome",
              "Firefox",
              "Opera",
              "Safari",
              "Other"
            ],
            "example": "Firefox"
          },
          "ip": {
            "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
            "type": "string",
            "example": "54.100.200.255"
          }
        }
      },
      "UserAgent": {
        "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
        "type": "string",
        "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
      },
      "DeviceTypeEcom": {
        "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
        "type": "string",
        "enum": [
          "DESKTOP",
          "SMARTPHONE",
          "TABLET",
          "KIOSK"
        ]
      },
      "DeviceTypeQsr": {
        "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
        "type": "string",
        "enum": [
          "DESKTOP",
          "SMARTPHONE",
          "TABLET",
          "KIOSK",
          "ODMB"
        ]
      },
      "Browser": {
        "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
        "type": "string",
        "enum": [
          "Chrome",
          "Firefox",
          "Opera",
          "Safari",
          "Other"
        ],
        "example": "Firefox"
      },
      "Ip": {
        "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
        "type": "string",
        "example": "54.100.200.255"
      },
      "DateTime": {
        "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
        "type": "string",
        "example": "2024-01-01T22:30:00.000-05:00"
      },
      "DeviceIdQsr": {
        "description": "The identifier of the device in the branch.",
        "type": "string"
      },
      "ChannelEcom": {
        "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
        "type": "string",
        "enum": [
          "WEB",
          "APP"
        ]
      },
      "ChannelQsr": {
        "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
        "type": "string",
        "enum": [
          "WEB",
          "APP",
          "KIOSK",
          "DRIVE-THRU"
        ]
      },
      "BranchEcom": {
        "description": "The branch where the user experience is taking place.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The branch's unique identifier.",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "BranchQsr": {
        "description": "Use to recommend only items in stock at the branch the user is browsing.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the branch the recommendation is for.",
            "type": "string"
          },
          "dayPart": {
            "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
            "type": "string",
            "enum": [
              "BREAKFAST",
              "LUNCH",
              "DINNER",
              "LATENIGHT"
            ]
          },
          "orderFulfillment": {
            "description": "The fulfillment type of the order the request relates to.",
            "type": "string",
            "enum": [
              "DELIVERY",
              "PICKUP",
              "DINEIN",
              "CURBSIDE"
            ]
          }
        },
        "required": [
          "dayPart"
        ]
      },
      "BranchQsrEngagement": {
        "description": "Use to recommend only items in stock at the branch the user is browsing.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the branch the recommendation is for.",
            "type": "string"
          },
          "dayPart": {
            "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
            "type": "string",
            "enum": [
              "BREAKFAST",
              "LUNCH",
              "DINNER",
              "LATENIGHT"
            ]
          }
        },
        "required": [
          "id",
          "dayPart"
        ]
      },
      "BranchQsrPurchase": {
        "description": "Use to recommend only items in stock at the branch the user is browsing.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the branch the recommendation is for.",
            "type": "string"
          },
          "dayPart": {
            "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
            "type": "string",
            "enum": [
              "BREAKFAST",
              "LUNCH",
              "DINNER",
              "LATENIGHT"
            ]
          },
          "orderFulfillment": {
            "description": "The fulfillment type of the order the request relates to.",
            "type": "string",
            "enum": [
              "DELIVERY",
              "PICKUP",
              "DINEIN",
              "CURBSIDE"
            ]
          }
        },
        "required": [
          "id",
          "dayPart"
        ]
      },
      "BranchIdEcom": {
        "description": "The branch's unique identifier.",
        "type": "string"
      },
      "BranchIdQsr": {
        "description": "The ID of the branch the recommendation is for.",
        "type": "string"
      },
      "DayPart": {
        "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
        "type": "string",
        "enum": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "LATENIGHT"
        ]
      },
      "OrderFulfillment": {
        "description": "The fulfillment type of the order the request relates to.",
        "type": "string",
        "enum": [
          "DELIVERY",
          "PICKUP",
          "DINEIN",
          "CURBSIDE"
        ]
      },
      "PageAttributes": {
        "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        }
      },
      "ListedItems": {
        "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "SKU1",
          "SKU2"
        ]
      },
      "SelectorChoose": {
        "title": "Selector",
        "description": "Campaigns to choose variations for.",
        "type": "object",
        "properties": {
          "names": {
            "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Banner Main",
              "German Banner",
              "PDP Recs Tray"
            ]
          },
          "groups": {
            "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preview": {
            "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
            "type": "object",
            "properties": {
              "ids": {
                "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "ids"
            ]
          },
          "args": {
            "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
            "type": "object",
            "additionalProperties": {
              "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
              "type": "object",
              "properties": {
                "realtimeRules": {
                  "description": "A list of realtime filtering rules.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Valid values are: `include`, `exclude`.",
                        "type": "string",
                        "enum": [
                          "include",
                          "exclude"
                        ]
                      },
                      "slots": {
                        "description": "All or specific slot positions. The first slot is in position 0.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "query": {
                        "description": "The filtering query.",
                        "type": "object",
                        "properties": {
                          "conditions": {
                            "description": "The realtime rule's query conditions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field": {
                                  "description": "Field within the returned results to apply the query for.",
                                  "type": "string",
                                  "example": "categories"
                                },
                                "arguments": {
                                  "description": "A list of arguments for a query condition.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "action": {
                                        "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                        "type": "string",
                                        "enum": [
                                          "IS",
                                          "IS_NOT",
                                          "CONTAINS",
                                          "EQ",
                                          "GT",
                                          "GTE",
                                          "LT",
                                          "LTE"
                                        ]
                                      },
                                      "value": {
                                        "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                        "example": "basketball"
                                      }
                                    },
                                    "required": [
                                      "action",
                                      "value"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "field",
                                "arguments"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "names"
        ]
      },
      "SelectorSearch": {
        "title": "Selector",
        "description": "Campaigns to choose variations for.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The selector name for the applicable search campaign. Must be one of the following:<ul><li>`Semantic Search`</li><li>`Visual Search`</li><li>`Shopping Muse`</li></ul>",
            "type": "string",
            "enum": [
              "Semantic Search",
              "Visual Search",
              "Shopping Muse"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "Groups": {
        "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Names": {
        "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "Banner Main",
          "German Banner",
          "PDP Recs Tray"
        ]
      },
      "Preview": {
        "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
        "type": "object",
        "properties": {
          "ids": {
            "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ids"
        ]
      },
      "Ids": {
        "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Args": {
        "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
        "type": "object",
        "additionalProperties": {
          "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
          "type": "object",
          "properties": {
            "realtimeRules": {
              "description": "A list of realtime filtering rules.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Valid values are: `include`, `exclude`.",
                    "type": "string",
                    "enum": [
                      "include",
                      "exclude"
                    ]
                  },
                  "slots": {
                    "description": "All or specific slot positions. The first slot is in position 0.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "query": {
                    "description": "The filtering query.",
                    "type": "object",
                    "properties": {
                      "conditions": {
                        "description": "The realtime rule's query conditions.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "description": "Field within the returned results to apply the query for.",
                              "type": "string",
                              "example": "categories"
                            },
                            "arguments": {
                              "description": "A list of arguments for a query condition.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                    "type": "string",
                                    "enum": [
                                      "IS",
                                      "IS_NOT",
                                      "CONTAINS",
                                      "EQ",
                                      "GT",
                                      "GTE",
                                      "LT",
                                      "LTE"
                                    ]
                                  },
                                  "value": {
                                    "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                    "example": "basketball"
                                  }
                                },
                                "required": [
                                  "action",
                                  "value"
                                ]
                              }
                            }
                          },
                          "required": [
                            "field",
                            "arguments"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ArgsItem": {
        "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
        "type": "object",
        "properties": {
          "realtimeRules": {
            "description": "A list of realtime filtering rules.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "Valid values are: `include`, `exclude`.",
                  "type": "string",
                  "enum": [
                    "include",
                    "exclude"
                  ]
                },
                "slots": {
                  "description": "All or specific slot positions. The first slot is in position 0.",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "query": {
                  "description": "The filtering query.",
                  "type": "object",
                  "properties": {
                    "conditions": {
                      "description": "The realtime rule's query conditions.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "description": "Field within the returned results to apply the query for.",
                            "type": "string",
                            "example": "categories"
                          },
                          "arguments": {
                            "description": "A list of arguments for a query condition.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "action": {
                                  "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                  "type": "string",
                                  "enum": [
                                    "IS",
                                    "IS_NOT",
                                    "CONTAINS",
                                    "EQ",
                                    "GT",
                                    "GTE",
                                    "LT",
                                    "LTE"
                                  ]
                                },
                                "value": {
                                  "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                  "example": "basketball"
                                }
                              },
                              "required": [
                                "action",
                                "value"
                              ]
                            }
                          }
                        },
                        "required": [
                          "field",
                          "arguments"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RealtimeRules": {
        "description": "A list of realtime filtering rules.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "description": "Valid values are: `include`, `exclude`.",
              "type": "string",
              "enum": [
                "include",
                "exclude"
              ]
            },
            "slots": {
              "description": "All or specific slot positions. The first slot is in position 0.",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "query": {
              "description": "The filtering query.",
              "type": "object",
              "properties": {
                "conditions": {
                  "description": "The realtime rule's query conditions.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "description": "Field within the returned results to apply the query for.",
                        "type": "string",
                        "example": "categories"
                      },
                      "arguments": {
                        "description": "A list of arguments for a query condition.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                              "type": "string",
                              "enum": [
                                "IS",
                                "IS_NOT",
                                "CONTAINS",
                                "EQ",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE"
                              ]
                            },
                            "value": {
                              "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                              "example": "basketball"
                            }
                          },
                          "required": [
                            "action",
                            "value"
                          ]
                        }
                      }
                    },
                    "required": [
                      "field",
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "RealtimeRuleType": {
        "description": "Valid values are: `include`, `exclude`.",
        "type": "string",
        "enum": [
          "include",
          "exclude"
        ]
      },
      "RealtimeRuleSlots": {
        "description": "All or specific slot positions. The first slot is in position 0.",
        "type": "array",
        "items": {
          "type": "integer"
        }
      },
      "RealtimeRuleQuery": {
        "description": "The filtering query.",
        "type": "object",
        "properties": {
          "conditions": {
            "description": "The realtime rule's query conditions.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "description": "Field within the returned results to apply the query for.",
                  "type": "string",
                  "example": "categories"
                },
                "arguments": {
                  "description": "A list of arguments for a query condition.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                        "type": "string",
                        "enum": [
                          "IS",
                          "IS_NOT",
                          "CONTAINS",
                          "EQ",
                          "GT",
                          "GTE",
                          "LT",
                          "LTE"
                        ]
                      },
                      "value": {
                        "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                        "example": "basketball"
                      }
                    },
                    "required": [
                      "action",
                      "value"
                    ]
                  }
                }
              },
              "required": [
                "field",
                "arguments"
              ]
            }
          }
        }
      },
      "QueryConditions": {
        "description": "The realtime rule's query conditions.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "field": {
              "description": "Field within the returned results to apply the query for.",
              "type": "string",
              "example": "categories"
            },
            "arguments": {
              "description": "A list of arguments for a query condition.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                    "type": "string",
                    "enum": [
                      "IS",
                      "IS_NOT",
                      "CONTAINS",
                      "EQ",
                      "GT",
                      "GTE",
                      "LT",
                      "LTE"
                    ]
                  },
                  "value": {
                    "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                    "example": "basketball"
                  }
                },
                "required": [
                  "action",
                  "value"
                ]
              }
            }
          },
          "required": [
            "field",
            "arguments"
          ]
        }
      },
      "QueryField": {
        "description": "Field within the returned results to apply the query for.",
        "type": "string",
        "example": "categories"
      },
      "QueryArguments": {
        "description": "A list of arguments for a query condition.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "action": {
              "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
              "type": "string",
              "enum": [
                "IS",
                "IS_NOT",
                "CONTAINS",
                "EQ",
                "GT",
                "GTE",
                "LT",
                "LTE"
              ]
            },
            "value": {
              "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
              "example": "basketball"
            }
          },
          "required": [
            "action",
            "value"
          ]
        }
      },
      "QueryAction": {
        "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
        "type": "string",
        "enum": [
          "IS",
          "IS_NOT",
          "CONTAINS",
          "EQ",
          "GT",
          "GTE",
          "LT",
          "LTE"
        ]
      },
      "QueryValue": {
        "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
        "example": "basketball"
      },
      "OptionsChooseEcom": {
        "title": "Options",
        "description": "Request configuration parameters.",
        "type": "object",
        "properties": {
          "isImplicitPageview": {
            "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
            "type": "boolean",
            "default": false
          },
          "returnAnalyticsMetadata": {
            "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
            "type": "boolean",
            "default": false
          },
          "isImplicitImpressionMode": {
            "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
            "type": "boolean",
            "default": true
          },
          "isImplicitClientData": {
            "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
            "type": "boolean",
            "default": false
          },
          "recsProductData": {
            "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
            "type": "object",
            "properties": {
              "fieldFilter": {
                "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "skusOnly": {
                "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                "type": "boolean"
              }
            }
          }
        }
      },
      "OptionsChooseQsr": {
        "title": "Options",
        "description": "Request configuration parameters.",
        "type": "object",
        "properties": {
          "isImplicitPageview": {
            "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
            "type": "boolean",
            "default": false
          },
          "returnAnalyticsMetadata": {
            "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
            "type": "boolean",
            "default": false
          },
          "isImplicitImpressionMode": {
            "description": "Report an impression of the chosen variation. For Restaurants, this is set to `false` by default, which means that impressions should be reported explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call. Pass this as `true` in case the user's impression of the variation should be reported immediately when the variation is chosen.",
            "type": "boolean",
            "default": false
          },
          "isImplicitClientData": {
            "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
            "type": "boolean",
            "default": false
          },
          "recsProductData": {
            "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
            "type": "object",
            "properties": {
              "fieldFilter": {
                "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "skusOnly": {
                "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                "type": "boolean"
              }
            }
          }
        }
      },
      "OptionsSearchEcom": {
        "title": "Options",
        "description": "Request configuration parameters.",
        "type": "object",
        "properties": {
          "returnAnalyticsMetadata": {
            "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
            "type": "boolean",
            "default": false
          },
          "isImplicitClientData": {
            "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
            "type": "boolean",
            "default": false
          },
          "recsProductData": {
            "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
            "type": "object",
            "properties": {
              "fieldFilter": {
                "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "skusOnly": {
                "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                "type": "boolean"
              }
            }
          }
        }
      },
      "OptionsPageview": {
        "title": "Options",
        "description": "Request configuration parameters.",
        "type": "object",
        "properties": {
          "isImplicitClientData": {
            "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
            "type": "boolean",
            "default": false
          }
        }
      },
      "IsImplicitPageview": {
        "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
        "type": "boolean",
        "default": false
      },
      "ReturnAnalyticsMetadata": {
        "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
        "type": "boolean",
        "default": false
      },
      "IsImplicitImpressionMode": {
        "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
        "type": "boolean",
        "default": true
      },
      "IsImplicitImpressionModeQsr": {
        "description": "Report an impression of the chosen variation. For Restaurants, this is set to `false` by default, which means that impressions should be reported explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call. Pass this as `true` in case the user's impression of the variation should be reported immediately when the variation is chosen.",
        "type": "boolean",
        "default": false
      },
      "IsImplicitClientData": {
        "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
        "type": "boolean",
        "default": false
      },
      "RecsProductDataEcom": {
        "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
        "type": "object",
        "properties": {
          "fieldFilter": {
            "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skusOnly": {
            "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
            "type": "boolean"
          }
        }
      },
      "RecsProductDataQsr": {
        "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
        "type": "object",
        "properties": {
          "fieldFilter": {
            "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skusOnly": {
            "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
            "type": "boolean"
          }
        }
      },
      "FieldFilter": {
        "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "SkusOnly": {
        "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
        "type": "boolean"
      },
      "QuerySemanticSearch": {
        "title": "Semantic Search Query",
        "description": "The user query for which to conduct the search.",
        "type": "object",
        "properties": {
          "text": {
            "description": "The user's input text that specifies what should be searched.",
            "type": "string"
          },
          "filters": {
            "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Numeric Filter",
                  "type": "object",
                  "properties": {
                    "field": {
                      "description": "Column name, as reported in the product feed.",
                      "type": "string"
                    },
                    "min": {
                      "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                      "type": "number"
                    },
                    "max": {
                      "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                      "type": "number"
                    }
                  },
                  "required": [
                    "field"
                  ]
                },
                {
                  "title": "String Filter",
                  "type": "object",
                  "properties": {
                    "field": {
                      "description": "Column name, as reported in the product feed.",
                      "type": "string"
                    },
                    "values": {
                      "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "field"
                  ]
                }
              ]
            }
          },
          "pagination": {
            "description": "Pagination parameters for the query result.",
            "type": "object",
            "properties": {
              "numItems": {
                "description": "The number of items to be returned in the query result.",
                "type": "number"
              },
              "offset": {
                "description": "The starting offset.",
                "type": "number"
              }
            },
            "required": [
              "numItems",
              "offset"
            ]
          }
        },
        "required": [
          "text",
          "pagination"
        ]
      },
      "QueryVisualSearch": {
        "title": "Visual Search Query",
        "description": "The user query for which to conduct the search.",
        "type": "object",
        "properties": {
          "imageBase64": {
            "description": "A base64 representation of the input image.",
            "type": "string"
          },
          "filters": {
            "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "Numeric Filter",
                  "type": "object",
                  "properties": {
                    "field": {
                      "description": "Column name, as reported in the product feed.",
                      "type": "string"
                    },
                    "min": {
                      "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                      "type": "number"
                    },
                    "max": {
                      "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                      "type": "number"
                    }
                  },
                  "required": [
                    "field"
                  ]
                },
                {
                  "title": "String Filter",
                  "type": "object",
                  "properties": {
                    "field": {
                      "description": "Column name, as reported in the product feed.",
                      "type": "string"
                    },
                    "values": {
                      "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "field"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "imageBase64"
        ]
      },
      "QueryShoppingMuse": {
        "title": "Shopping Muse Query",
        "description": "The user prompt and conversation ID for triggering a contextual Shopping Muse response.",
        "type": "object",
        "properties": {
          "text": {
            "description": "The user's prompt that specifies a search request, question or an answer.",
            "type": "string"
          },
          "chatId": {
            "description": "A unique identifier used to maintain conversational context. Include `chatId` when sending follow-up requests related to the response that contains it.",
            "type": "string"
          }
        },
        "required": [
          "text"
        ]
      },
      "QueryImageBase64": {
        "description": "A base64 representation of the input image.",
        "type": "string"
      },
      "QueryText": {
        "description": "The user's input text that specifies what should be searched.",
        "type": "string"
      },
      "QueryFilters": {
        "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Numeric Filter",
              "type": "object",
              "properties": {
                "field": {
                  "description": "Column name, as reported in the product feed.",
                  "type": "string"
                },
                "min": {
                  "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                  "type": "number"
                },
                "max": {
                  "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                  "type": "number"
                }
              },
              "required": [
                "field"
              ]
            },
            {
              "title": "String Filter",
              "type": "object",
              "properties": {
                "field": {
                  "description": "Column name, as reported in the product feed.",
                  "type": "string"
                },
                "values": {
                  "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "field"
              ]
            }
          ]
        }
      },
      "QueryFilterNumber": {
        "title": "Numeric Filter",
        "type": "object",
        "properties": {
          "field": {
            "description": "Column name, as reported in the product feed.",
            "type": "string"
          },
          "min": {
            "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
            "type": "number"
          },
          "max": {
            "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
            "type": "number"
          }
        },
        "required": [
          "field"
        ]
      },
      "QueryFilterString": {
        "title": "String Filter",
        "type": "object",
        "properties": {
          "field": {
            "description": "Column name, as reported in the product feed.",
            "type": "string"
          },
          "values": {
            "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "field"
        ]
      },
      "QueryPagination": {
        "description": "Pagination parameters for the query result.",
        "type": "object",
        "properties": {
          "numItems": {
            "description": "The number of items to be returned in the query result.",
            "type": "number"
          },
          "offset": {
            "description": "The starting offset.",
            "type": "number"
          }
        },
        "required": [
          "numItems",
          "offset"
        ]
      },
      "QueryEnableSpellCheck": {
        "description": "Determines whether spell checking is enabled. Use only for Semantic Search and Shopping Muse.",
        "type": "boolean",
        "default": true
      },
      "CartEcom": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "productId": {
              "description": "SKU exactly as it appears in the product feed.",
              "type": "string"
            },
            "quantity": {
              "description": "Number of items.",
              "type": "number",
              "example": 1
            },
            "itemPrice": {
              "description": "unit.cents format using the section default currency.",
              "type": "number",
              "example": 23.99
            }
          }
        }
      },
      "CartQsr": {
        "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "productId": {
              "description": "The product ID from the restaurant product catalog.",
              "type": "string"
            },
            "quantity": {
              "description": "Number of items.",
              "type": "number"
            },
            "itemPrice": {
              "description": "unit.cents format using the section default currency.",
              "type": "number",
              "example": 23.99
            },
            "innerProducts": {
              "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "productId": {
                    "description": "The product ID from the restaurant product catalog.",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "Number of items.",
                    "type": "number"
                  },
                  "itemPrice": {
                    "description": "unit.cents format using the section default currency.",
                    "type": "number",
                    "example": 23.99
                  }
                },
                "required": [
                  "productId"
                ]
              }
            }
          },
          "required": [
            "productId"
          ]
        }
      },
      "CartExternal": {
        "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "productId": {
              "description": "SKU exactly as it appears in the product feed.",
              "type": "string"
            },
            "quantity": {
              "description": "Number of items.",
              "type": "number"
            },
            "itemPrice": {
              "allOf": [
                {
                  "description": "unit.cents format using the section default currency.",
                  "type": "number",
                  "example": 23.99
                },
                {
                  "description": "List price for each item (quantity of one). This might be different from the `transactionItemValue` due to discounts, taxes, and so on."
                }
              ]
            },
            "transactionItemValue": {
              "description": "Value of the line item in actual payment currency.<br>The value is the product of `itemPrice` times `quantity`, after discount and taxes.<br>Negative values are ignored.<br>Required if the `value` property is not defined. Otherwise, it's optional.",
              "type": "number",
              "example": 23.99
            },
            "size": {
              "description": "Product size.",
              "type": "string",
              "example": "L"
            },
            "innerProducts": {
              "description": "**For restaurants only.** Indicate any inner products within the main product.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "productId": {
                    "description": "SKU exactly as it appears in the product feed.",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "Number of items.",
                    "type": "number"
                  },
                  "itemPrice": {
                    "description": "unit.cents format using the section default currency.",
                    "type": "number",
                    "example": 23.99
                  }
                },
                "required": [
                  "productId"
                ]
              }
            }
          },
          "required": [
            "productId",
            "quantity",
            "itemPrice",
            "transactionItemValue"
          ]
        }
      },
      "CartProductIdEcom": {
        "description": "SKU exactly as it appears in the product feed.",
        "type": "string"
      },
      "CartProductIdQsr": {
        "description": "The product ID from the restaurant product catalog.",
        "type": "string"
      },
      "CartQuantity": {
        "description": "Number of items.",
        "type": "number"
      },
      "CartItemPrice": {
        "description": "unit.cents format using the section default currency.",
        "type": "number",
        "example": 23.99
      },
      "CartTransactionItemValue": {
        "description": "Value of the line item in actual payment currency.<br>The value is the product of `itemPrice` times `quantity`, after discount and taxes.<br>Negative values are ignored.<br>Required if the `value` property is not defined. Otherwise, it's optional.",
        "type": "number",
        "example": 23.99
      },
      "InnerProductsQsr": {
        "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "productId": {
              "description": "The product ID from the restaurant product catalog.",
              "type": "string"
            },
            "quantity": {
              "description": "Number of items.",
              "type": "number"
            },
            "itemPrice": {
              "description": "unit.cents format using the section default currency.",
              "type": "number",
              "example": 23.99
            }
          },
          "required": [
            "productId"
          ]
        }
      },
      "InnerProductsExternal": {
        "description": "**For restaurants only.** Indicate any inner products within the main product.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "productId": {
              "description": "SKU exactly as it appears in the product feed.",
              "type": "string"
            },
            "quantity": {
              "description": "Number of items.",
              "type": "number"
            },
            "itemPrice": {
              "description": "unit.cents format using the section default currency.",
              "type": "number",
              "example": 23.99
            }
          },
          "required": [
            "productId"
          ]
        }
      },
      "EngagementsEcom": {
        "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Engagement (type: IMP, CLICK)",
              "description": "A user engagement with a DY campaign.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Pass the value `CLICK` or `IMP` (impressions) for API custom code campaigns.",
                  "type": "string",
                  "enum": [
                    "CLICK",
                    "IMP"
                  ]
                },
                "decisionId": {
                  "description": "**Required for reporting `CLICK` or `IMP`:** The unique Decision ID as returned from the `/choose` endpoint.",
                  "type": "string"
                },
                "variations": {
                  "description": "Use to report explicit impressions over custom code campaigns that return multiple variations on each decision (for example, a slider). Values are variation IDs.",
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "type",
                "decisionId",
                "variations"
              ]
            },
            {
              "title": "Engagement (type: SLOT_CLICK)",
              "description": "A user engagement with a DY campaign.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Pass the value `SLOT_CLICK` for API recommendation campaigns.",
                  "type": "string",
                  "enum": [
                    "SLOT_CLICK"
                  ]
                },
                "slotId": {
                  "description": "Use to report a click on an API recommendation or a search result. Pass the Slot ID for the clicked product as returned in the `/choose` response. Do not use for for API custom code campaigns.",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "slotId"
              ]
            },
            {
              "title": "Engagement (type: PN_CLICK)",
              "description": "A user engagement with a DY campaign.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Pass the value `PN_CLICK` for Reconnect push notification campaigns.",
                  "type": "string",
                  "enum": [
                    "PN_CLICK"
                  ]
                },
                "trackingData": {
                  "description": "Enables Dynamic Yield to track actions attributable to the push notification. Must be extracted from messaging provider. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/13472246286749-Create-a-Reconnect-Campaign#tracklink).",
                  "type": "object",
                  "properties": {
                    "rri": {
                      "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                      "type": "string",
                      "example": "987001424"
                    },
                    "sectionID": {
                      "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                      "type": "string",
                      "example": "9878785"
                    },
                    "reqTs": {
                      "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                      "type": "string",
                      "example": "1652622484055"
                    },
                    "userID": {
                      "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                      "type": "string",
                      "example": "4656722918296846673"
                    },
                    "version": {
                      "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                      "type": "string",
                      "example": "2"
                    },
                    "events": {
                      "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ver": {
                            "type": "string",
                            "example": "101482916"
                          },
                          "expVisitId": {
                            "type": "string",
                            "example": "4032971100745578591"
                          },
                          "smech": {
                            "type": "string",
                            "example": ""
                          },
                          "vars": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "101098971"
                            }
                          },
                          "exp": {
                            "type": "string",
                            "example": "1296028"
                          },
                          "mech": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "rri": "987001424",
                    "sectionID": "9878785",
                    "reqTs": "1652622484055",
                    "userID": "4656722918296846673",
                    "version": "2",
                    "events": [
                      {
                        "ver": "101482916",
                        "expVisitId": "4032971100745578591",
                        "smech": "",
                        "vars": "[101098971]",
                        "exp": "1296028",
                        "mech": "1"
                      }
                    ]
                  }
                }
              },
              "required": [
                "type",
                "trackingData"
              ]
            }
          ]
        }
      },
      "EngagementsQsr": {
        "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Engagement (type: SLOT_CLICK)",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Pass `SLOT_CLICK`.",
                  "type": "string",
                  "enum": [
                    "SLOT_CLICK"
                  ]
                },
                "slotId": {
                  "description": "Use to report a click on an API recommendation. Pass the Slot ID for the clicked product as returned in the `/choose` response.",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "slotId"
              ]
            },
            {
              "title": "Engagement (type: SLOT_IMP)",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Pass `SLOT_IMP`.",
                  "type": "string",
                  "enum": [
                    "SLOT_IMP"
                  ]
                },
                "slotIds": {
                  "description": "Use to report impressions of an API recommendation. Pass the Slot IDs for the products as returned in the `/choose` response.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "type",
                "slotIds"
              ]
            }
          ]
        }
      },
      "EngagementEcomClickImp": {
        "title": "Engagement (type: IMP, CLICK)",
        "description": "A user engagement with a DY campaign.",
        "type": "object",
        "properties": {
          "type": {
            "description": "Pass the value `CLICK` or `IMP` (impressions) for API custom code campaigns.",
            "type": "string",
            "enum": [
              "CLICK",
              "IMP"
            ]
          },
          "decisionId": {
            "description": "**Required for reporting `CLICK` or `IMP`:** The unique Decision ID as returned from the `/choose` endpoint.",
            "type": "string"
          },
          "variations": {
            "description": "Use to report explicit impressions over custom code campaigns that return multiple variations on each decision (for example, a slider). Values are variation IDs.",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type",
          "decisionId",
          "variations"
        ]
      },
      "EngagementEcomSlotClick": {
        "title": "Engagement (type: SLOT_CLICK)",
        "description": "A user engagement with a DY campaign.",
        "type": "object",
        "properties": {
          "type": {
            "description": "Pass the value `SLOT_CLICK` for API recommendation campaigns.",
            "type": "string",
            "enum": [
              "SLOT_CLICK"
            ]
          },
          "slotId": {
            "description": "Use to report a click on an API recommendation or a search result. Pass the Slot ID for the clicked product as returned in the `/choose` response. Do not use for for API custom code campaigns.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "slotId"
        ]
      },
      "EngagementEcomPnClick": {
        "title": "Engagement (type: PN_CLICK)",
        "description": "A user engagement with a DY campaign.",
        "type": "object",
        "properties": {
          "type": {
            "description": "Pass the value `PN_CLICK` for Reconnect push notification campaigns.",
            "type": "string",
            "enum": [
              "PN_CLICK"
            ]
          },
          "trackingData": {
            "description": "Enables Dynamic Yield to track actions attributable to the push notification. Must be extracted from messaging provider. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/13472246286749-Create-a-Reconnect-Campaign#tracklink).",
            "type": "object",
            "properties": {
              "rri": {
                "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                "type": "string",
                "example": "987001424"
              },
              "sectionID": {
                "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                "type": "string",
                "example": "9878785"
              },
              "reqTs": {
                "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                "type": "string",
                "example": "1652622484055"
              },
              "userID": {
                "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                "type": "string",
                "example": "4656722918296846673"
              },
              "version": {
                "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                "type": "string",
                "example": "2"
              },
              "events": {
                "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ver": {
                      "type": "string",
                      "example": "101482916"
                    },
                    "expVisitId": {
                      "type": "string",
                      "example": "4032971100745578591"
                    },
                    "smech": {
                      "type": "string",
                      "example": ""
                    },
                    "vars": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "101098971"
                      }
                    },
                    "exp": {
                      "type": "string",
                      "example": "1296028"
                    },
                    "mech": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              }
            },
            "example": {
              "rri": "987001424",
              "sectionID": "9878785",
              "reqTs": "1652622484055",
              "userID": "4656722918296846673",
              "version": "2",
              "events": [
                {
                  "ver": "101482916",
                  "expVisitId": "4032971100745578591",
                  "smech": "",
                  "vars": "[101098971]",
                  "exp": "1296028",
                  "mech": "1"
                }
              ]
            }
          }
        },
        "required": [
          "type",
          "trackingData"
        ]
      },
      "EngagementTypeEcomClickImp": {
        "description": "Pass the value `CLICK` or `IMP` (impressions) for API custom code campaigns.",
        "type": "string",
        "enum": [
          "CLICK",
          "IMP"
        ]
      },
      "EngagementTypeEcomSlotClick": {
        "description": "Pass the value `SLOT_CLICK` for API recommendation campaigns.",
        "type": "string",
        "enum": [
          "SLOT_CLICK"
        ]
      },
      "EngagementTypeEcomPnClick": {
        "description": "Pass the value `PN_CLICK` for Reconnect push notification campaigns.",
        "type": "string",
        "enum": [
          "PN_CLICK"
        ]
      },
      "DecisionId": {
        "description": "**Required for reporting `CLICK` or `IMP`:** The unique Decision ID as returned from the `/choose` endpoint.",
        "type": "string"
      },
      "Variations": {
        "description": "Use to report explicit impressions over custom code campaigns that return multiple variations on each decision (for example, a slider). Values are variation IDs.",
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "SlotId": {
        "description": "Use to report a click on an API recommendation or a search result. Pass the Slot ID for the clicked product as returned in the `/choose` response. Do not use for for API custom code campaigns.",
        "type": "string"
      },
      "TrackingData": {
        "description": "Enables Dynamic Yield to track actions attributable to the push notification. Must be extracted from messaging provider. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/13472246286749-Create-a-Reconnect-Campaign#tracklink).",
        "type": "object",
        "properties": {
          "rri": {
            "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
            "type": "string",
            "example": "987001424"
          },
          "sectionID": {
            "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
            "type": "string",
            "example": "9878785"
          },
          "reqTs": {
            "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
            "type": "string",
            "example": "1652622484055"
          },
          "userID": {
            "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
            "type": "string",
            "example": "4656722918296846673"
          },
          "version": {
            "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
            "type": "string",
            "example": "2"
          },
          "events": {
            "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ver": {
                  "type": "string",
                  "example": "101482916"
                },
                "expVisitId": {
                  "type": "string",
                  "example": "4032971100745578591"
                },
                "smech": {
                  "type": "string",
                  "example": ""
                },
                "vars": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "101098971"
                  }
                },
                "exp": {
                  "type": "string",
                  "example": "1296028"
                },
                "mech": {
                  "type": "string",
                  "example": "1"
                }
              }
            }
          }
        },
        "example": {
          "rri": "987001424",
          "sectionID": "9878785",
          "reqTs": "1652622484055",
          "userID": "4656722918296846673",
          "version": "2",
          "events": [
            {
              "ver": "101482916",
              "expVisitId": "4032971100745578591",
              "smech": "",
              "vars": "[101098971]",
              "exp": "1296028",
              "mech": "1"
            }
          ]
        }
      },
      "EventsEcom": {
        "description": "One or more events to report.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Add to Cart",
              "description": "Reports that the user added a product to the cart.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `add-to-cart-v1`.",
                          "type": "string",
                          "pattern": "add-to-cart-v1",
                          "default": "add-to-cart-v1"
                        },
                        "value": {
                          "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                          "type": "number",
                          "example": 19.9
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "productId": {
                          "description": "SKU exactly as it appears in the product feed.",
                          "type": "string"
                        },
                        "quantity": {
                          "allOf": [
                            {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            {
                              "description": "The number of items with this SKU added to the cart in the scope of this event."
                            }
                          ]
                        },
                        "cart": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            },
                            {
                              "description": "The updated contents of the cart, including the items added to trigger this event. Each object is a unique item/SKU.<br>This object is required for Reconnect campaigns, as well as to enable the recommendations engine to filter out products that are already in the cart. [Learn more about this filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178-Recommendation-Filters#exclude)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "productId",
                        "quantity"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Add To Cart",
                "properties": {
                  "dyType": "add-to-cart-v1",
                  "value": 118.26,
                  "currency": "any supported currency code",
                  "productId": "item-34454",
                  "quantity": 2,
                  "cart": [
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 12.34
                    },
                    {
                      "productId": "item-34454",
                      "quantity": 2,
                      "itemPrice": 59.13
                    }
                  ]
                }
              }
            },
            {
              "title": "Purchase",
              "description": "Reports that the user completed a purchase.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `purchase-v1`.",
                          "type": "string",
                          "pattern": "purchase-v1",
                          "default": "purchase-v1"
                        },
                        "value": {
                          "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                          "type": "number",
                          "example": 98.8
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "uniqueTransactionId": {
                          "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                          "type": "string",
                          "example": "38373991919193830033"
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "cart"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Purchase",
                "properties": {
                  "uniqueTransactionId": 123456,
                  "dyType": "purchase-v1",
                  "value": 90.55,
                  "currency": "any supported currency code",
                  "cart": [
                    {
                      "productId": "item-34454",
                      "quantity": 1,
                      "itemPrice": 65.87
                    },
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 12.34
                    }
                  ]
                }
              }
            },
            {
              "title": "Remove from Cart",
              "description": "Reports that the user removed an item from the cart.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `remove-from-cart-v1`.",
                          "type": "string",
                          "pattern": "remove-from-cart-v1",
                          "default": "remove-from-cart-v1"
                        },
                        "value": {
                          "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                          "type": "number",
                          "example": 19.9
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "productId": {
                          "description": "SKU exactly as it appears in the product feed.",
                          "type": "string"
                        },
                        "quantity": {
                          "allOf": [
                            {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            {
                              "description": "The total number of items removed."
                            }
                          ]
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "The cart's current state, after the removal of the item. Products are ordered from the first added to the cart to the most recent.<br>*Optional, but recommended.*"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "productId",
                        "quantity"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Remove from Cart",
                "properties": {
                  "dyType": "remove-from-cart-v1",
                  "value": 34.45,
                  "currency": "any supported currency code",
                  "productId": "gswefd-34-454",
                  "quantity": 1,
                  "cart": [
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 12.34
                    },
                    {
                      "productId": "item-34454",
                      "quantity": 1,
                      "itemPrice": 34.45
                    }
                  ]
                }
              }
            },
            {
              "title": "Sync Cart",
              "description": "**THIS EVENT IS MANDATORY FOR:**<br><ul><li>The [*Exclude items currently in cart* filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178#h_01FZW8C8C9JSHT05QW6764K0XV), and must be fired upon every page load.</li><li>[Reconnect](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect) implementation.</li></ul>",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `sync-cart-v1`.",
                          "type": "string",
                          "pattern": "sync-cart-v1",
                          "default": "sync-cart-v1"
                        },
                        "value": {
                          "allOf": [
                            {
                              "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 98.8
                            },
                            {
                              "description": "The total monetary value of the event (the total value of the cart, not just the item that triggered the event); in the actual payment currency."
                            }
                          ]
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "The cart's absolute current state, including the last item added. Products are ordered from the first added to the cart to the most recent."
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "cart"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Sync Cart",
                "properties": {
                  "dyType": "sync-cart-v1",
                  "value": 125.5,
                  "currency": "any supported currency code",
                  "cart": [
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 12.34
                    },
                    {
                      "productId": "item-34454",
                      "quantity": 1,
                      "itemPrice": 34.45
                    }
                  ]
                }
              }
            },
            {
              "title": "Identify User",
              "type": "object",
              "description": "Use to identify visitors at any point during their journey on your site or app, such as during the checkout process.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `identify-v1`.",
                          "type": "string",
                          "pattern": "identify-v1",
                          "default": "identify-v1"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/identify-user#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Identify",
                "properties": {
                  "dyType": "identify-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Login",
              "type": "object",
              "description": "Reports that a user has logged in.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `login-v1`.",
                          "type": "string",
                          "pattern": "login-v1",
                          "default": "login-v1"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/login#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Login",
                "properties": {
                  "dyType": "login-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Signup",
              "type": "object",
              "description": "Reports that the user completed the signup process and is a registered user.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `signup-v1`.",
                          "type": "string"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/signup#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Signup",
                "properties": {
                  "dyType": "signup-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Newsletter Subscription",
              "description": "Reports that a user subscribed to a newsletter. Identification event.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `newsletter-subscription-v1`.",
                          "type": "string",
                          "pattern": "newsletter-subscription-v1",
                          "default": "newsletter-subscription-v1"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/newsletter-subscription#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Newsletter Subscription",
                "properties": {
                  "dyType": "newsletter-subscription-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Push Opt-In",
              "description": "Reports that a user opted in to receive Reconnect push notifications.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `message-optin-v1`.",
                          "type": "string",
                          "pattern": "message-optin-v1",
                          "default": "message-optin-v1"
                        },
                        "pushId": {
                          "description": "Reports that a user opted in to receive Reconnect push notifications.",
                          "type": "string",
                          "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                        }
                      },
                      "required": [
                        "dyType",
                        "pushId"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Push Opt-in",
                "properties": {
                  "dyType": "message-optin-v1",
                  "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                }
              }
            },
            {
              "title": "Push Opt-Out",
              "description": "Reports that a user opted out of receiving Reconnect push notifications.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `message-optout-v1`.",
                          "type": "string",
                          "pattern": "message-optout-v1",
                          "default": "message-optout-v1"
                        },
                        "pushId": {
                          "description": "Reports that a user opted in to receive Reconnect push notifications.",
                          "type": "string",
                          "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                        }
                      },
                      "required": [
                        "dyType",
                        "pushId"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Push Opt-Out",
                "properties": {
                  "dyType": "message-optout-v1",
                  "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                }
              }
            },
            {
              "title": "Keyword Search",
              "description": "Reports that a user ran a freestyle keyword search.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `keyword-search-v1`.",
                          "type": "string",
                          "pattern": "keyword-search-v1",
                          "default": "keyword-search-v1"
                        },
                        "keywords": {
                          "description": "The search string.",
                          "type": "string",
                          "example": "contact info"
                        }
                      },
                      "required": [
                        "dyType",
                        "keywords"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Keyword search",
                "properties": {
                  "dyType": "keyword-search-v1",
                  "keywords": "contact info"
                }
              }
            },
            {
              "title": "Add to Wishlist",
              "description": "Reports that a user added a product to their wishlist.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `add-to-wishlist-v1`.",
                          "type": "string",
                          "pattern": "add-to-wishlist-v1",
                          "default": "add-to-wishlist-v1"
                        },
                        "productId": {
                          "description": "SKU exactly as it appears in the product feed.",
                          "type": "string"
                        },
                        "size": {
                          "description": "Product size.",
                          "type": "string",
                          "example": "L"
                        }
                      },
                      "required": [
                        "dyType",
                        "productId"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Add to Wishlist",
                "properties": {
                  "dyType": "add-to-wishlist-v1",
                  "productId": "item-34454",
                  "size": "XL"
                }
              }
            },
            {
              "title": "Filter Items",
              "description": "Reports that the user filtered the product list by a specific field value.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `filter-items-v1`.",
                          "type": "string",
                          "pattern": "filter-items-v1",
                          "default": "filter-items-v1"
                        },
                        "filterType": {
                          "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
                          "type": "string",
                          "example": "color"
                        },
                        "filterNumericValue": {
                          "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
                          "type": "number",
                          "example": 20
                        },
                        "filterStringValue": {
                          "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
                          "type": "string",
                          "example": "Gray"
                        }
                      },
                      "required": [
                        "dyType",
                        "filterType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Filter Items",
                "properties": {
                  "dyType": "filter-items-v1",
                  "filterType": "color",
                  "filterNumericValue": 4
                }
              }
            },
            {
              "title": "Change Attribute",
              "description": "Reports that a user changed an attribute of the displayed product (such as color or size).<br>**Note:** The attribute type and value must match information in your product feed. The currently displayed product is inferred from the in-page context.<br>**This event is currently available for script implementation only.**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `change-attribute-v1`.",
                          "type": "string",
                          "pattern": "change-attr-v1",
                          "default": "change-attr-v1"
                        },
                        "attributeType": {
                          "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
                          "type": "string",
                          "example": "Color"
                        },
                        "attributeValue": {
                          "description": "The new value (for example, new color is Gray).",
                          "type": "string",
                          "example": "Navy Blue"
                        }
                      },
                      "required": [
                        "dyType",
                        "attributeType",
                        "attributeValue"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Change Attribute",
                "properties": {
                  "dyType": "change-attr-v1",
                  "attributeType": "Color",
                  "attributeValue": "Navy Blue"
                }
              }
            },
            {
              "title": "Video Watch",
              "description": "Reports that a user watched a video on a media site or application.<br>This event can report that the user watched a video in part or in full. You can distinguish between auto-play videos and those that the user explicitly clicked to watch.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `video-watch-v1`.",
                          "type": "string",
                          "pattern": "video-watch-v1",
                          "default": "video-watch-v1"
                        },
                        "itemId": {
                          "description": "ID that matches an item ID in the content feed.",
                          "type": "string",
                          "example": "33849492012003"
                        },
                        "categories": {
                          "description": "*Optional*",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Sports",
                            "Baseball"
                          ]
                        },
                        "autoplay": {
                          "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
                          "type": "boolean",
                          "default": false
                        },
                        "progress": {
                          "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
                          "type": "string",
                          "enum": [
                            "VIDEO_STARTED",
                            "PREROLL_FINISHED",
                            "VIDEO_FINISHED",
                            "VIDEO_PROGRESS"
                          ],
                          "example": "VIDEO_STARTED"
                        },
                        "progressPercent": {
                          "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
                          "type": "number",
                          "example": 65
                        }
                      },
                      "required": [
                        "dyType",
                        "itemId",
                        "autoplay",
                        "progress",
                        "progressPercent"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Video Watch",
                "properties": {
                  "dyType": "video-watch-v1",
                  "itemId": "33849492012003",
                  "categories": [
                    "Sports",
                    "Baseball"
                  ],
                  "autoplay": true,
                  "progress": "VIDEO_PROGRESS",
                  "progressPercent": 65
                }
              }
            },
            {
              "title": "Sort Items",
              "description": "Reports that the user changed the sorting of a product list.<br>**This event is currently available for script implementation only.**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `sort-items-v1`.",
                          "type": "string",
                          "pattern": "sort-items-v1",
                          "default": "sort-items-v1"
                        },
                        "sortBy": {
                          "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
                          "type": "string",
                          "example": "price"
                        },
                        "sortOrder": {
                          "description": "`ASC` or `DESC`.",
                          "type": "string",
                          "example": "ASC"
                        }
                      },
                      "required": [
                        "dyType",
                        "sortBy",
                        "sortOrder"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Sort Items",
                "properties": {
                  "dyType": "sort-items-v1",
                  "sortBy": "PRICE",
                  "sortOrder": "ASC"
                }
              }
            },
            {
              "title": "Promo Code Entered",
              "description": "Reports that the user entered a valid promotion code.<br>**This event is currently available for script implementation only.**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `enter-promo-code-v1`.",
                          "type": "string",
                          "pattern": "enter-promo-code-v1",
                          "default": "enter-promo-code-v1"
                        },
                        "code": {
                          "description": "The promo code.",
                          "type": "string",
                          "example": "SPECIALOFFER"
                        }
                      },
                      "required": [
                        "dyType",
                        "code"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Promo Code Entered",
                "properties": {
                  "dyType": "enter-promo-code-v1",
                  "code": "SPECIALOFFER"
                }
              }
            },
            {
              "title": "Custom Event",
              "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Event name for display. Does not have a `dyType` property.",
                  "type": "string",
                  "example": "VIP Login"
                },
                "properties": {
                  "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                      "type": "number",
                      "example": 98.7
                    },
                    "currency": {
                      "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                      "type": "string",
                      "example": "USD"
                    }
                  },
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                }
              },
              "required": [
                "name"
              ],
              "example": {
                "name": "Custom Event Example 1",
                "properties": {
                  "isVIP": true
                }
              }
            },
            {
              "title": "Inform Affinity",
              "description": "Report an array of product attributes to use in affinity personalization.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `inform-affinity-v1`.",
                          "type": "string",
                          "pattern": "inform-affinity-v1"
                        },
                        "source": {
                          "description": "The source of the user data",
                          "type": "string"
                        },
                        "data": {
                          "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "attribute": {
                                "description": "name of attribute"
                              },
                              "values": {
                                "type": "array",
                                "maxItems": 10,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "dyType",
                        "data"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Inform Affinity",
                "properties": {
                  "dyType": "inform-affinity-v1",
                  "source": "registration-form",
                  "data": [
                    {
                      "attribute": "categories",
                      "values": [
                        "shoes",
                        "tops",
                        "accessories"
                      ]
                    },
                    {
                      "attribute": "brand",
                      "values": [
                        "adidas"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "EventsFi": {
        "description": "One or more events to report.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Application",
              "description": "Reports that a user started the application process for a product.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `add-to-cart-v1`.",
                          "type": "string",
                          "pattern": "add-to-cart-v1",
                          "default": "add-to-cart-v1"
                        },
                        "value": {
                          "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                          "type": "number",
                          "example": 19.9
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "productId": {
                          "description": "SKU exactly as it appears in the product feed.",
                          "type": "string"
                        },
                        "quantity": {
                          "allOf": [
                            {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            {
                              "description": "The total number of items that were added to the cart."
                            }
                          ]
                        },
                        "cart": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            },
                            {
                              "description": "The cart's current state, including the last item added. Products are ordered from the first added to the cart to the most recent.<br><br>**Note:** Pass the updated cart with the newly added products to ensure that the cart state is fully in sync with your system. This is important mainly for triggered email and push notifications. *Optional, but recommended.*"
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "productId",
                        "quantity"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Application Started",
                "properties": {
                  "dyType": "add-to-cart-v1",
                  "value": 400,
                  "currency": "EUR",
                  "productId": "item-34454",
                  "quantity": 2,
                  "cart": [
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 100
                    },
                    {
                      "productId": "item-34454",
                      "quantity": 2,
                      "itemPrice": 200
                    }
                  ]
                }
              }
            },
            {
              "title": "Submission",
              "description": "Reports that the user submitted an application.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `purchase-v1`.",
                          "type": "string",
                          "pattern": "purchase-v1",
                          "default": "purchase-v1"
                        },
                        "value": {
                          "allOf": [
                            {
                              "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 98.8
                            },
                            {
                              "description": "The total monetary value of the event. This refers only to the item or items removed that triggered the event, not the entire cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0."
                            }
                          ]
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "uniqueTransactionId": {
                          "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                          "type": "string",
                          "example": "38373991919193830033"
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "cart"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Submission",
                "properties": {
                  "uniqueTransactionId": 123456,
                  "dyType": "purchase-v1",
                  "value": 90.55,
                  "currency": "any supported currency code",
                  "cart": [
                    {
                      "productId": "item-34454",
                      "quantity": 1,
                      "itemPrice": 65.87
                    },
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 12.34
                    }
                  ]
                }
              }
            },
            {
              "title": "Remove from Cart",
              "description": "Reports that the user removed an item from the cart.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `remove-from-cart-v1`.",
                          "type": "string",
                          "pattern": "remove-from-cart-v1",
                          "default": "remove-from-cart-v1"
                        },
                        "value": {
                          "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                          "type": "number",
                          "example": 19.9
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "productId": {
                          "description": "SKU exactly as it appears in the product feed.",
                          "type": "string"
                        },
                        "quantity": {
                          "allOf": [
                            {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            {
                              "description": "The total number of items removed."
                            }
                          ]
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "The cart's current state, after the removal of the item. Products are ordered from the first added to the cart to the most recent.<br>*Optional, but recommended.*"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "productId",
                        "quantity"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Remove from Cart",
                "properties": {
                  "dyType": "remove-from-cart-v1",
                  "value": 34.45,
                  "currency": "any supported currency code",
                  "productId": "gswefd-34-454",
                  "quantity": 1,
                  "cart": [
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 12.34
                    },
                    {
                      "productId": "item-34454",
                      "quantity": 1,
                      "itemPrice": 34.45
                    }
                  ]
                }
              }
            },
            {
              "title": "Sync Cart",
              "description": "**THIS EVENT IS MANDATORY FOR:**<br><ul><li>The [*Exclude items currently in cart* filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178#h_01FZW8C8C9JSHT05QW6764K0XV), and must be fired upon every page load.</li><li>[Reconnect](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect) implementation.</li></ul>",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `sync-cart-v1`.",
                          "type": "string",
                          "pattern": "sync-cart-v1",
                          "default": "sync-cart-v1"
                        },
                        "value": {
                          "allOf": [
                            {
                              "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                              "type": "number",
                              "example": 98.8
                            },
                            {
                              "description": "The total monetary value of the event (the total value of the cart, not just the item that triggered the event); in the actual payment currency."
                            }
                          ]
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "The cart's absolute current state, including the last item added. Products are ordered from the first added to the cart to the most recent."
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number",
                                    "example": 1
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "cart"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Sync Cart",
                "properties": {
                  "dyType": "sync-cart-v1",
                  "value": 125.5,
                  "currency": "any supported currency code",
                  "cart": [
                    {
                      "productId": "sku-4324-bg",
                      "quantity": 2,
                      "itemPrice": 12.34
                    },
                    {
                      "productId": "item-34454",
                      "quantity": 1,
                      "itemPrice": 34.45
                    }
                  ]
                }
              }
            },
            {
              "title": "Identify User",
              "type": "object",
              "description": "Use to identify visitors at any point during their journey on your site or app, such as during the checkout process.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `identify-v1`.",
                          "type": "string",
                          "pattern": "identify-v1",
                          "default": "identify-v1"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/identify-user#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Identify",
                "properties": {
                  "dyType": "identify-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Login",
              "type": "object",
              "description": "Reports that a user has logged in.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `login-v1`.",
                          "type": "string",
                          "pattern": "login-v1",
                          "default": "login-v1"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/login#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Login",
                "properties": {
                  "dyType": "login-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Signup",
              "type": "object",
              "description": "Reports that the user completed the signup process and is a registered user.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `signup-v1`.",
                          "type": "string"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/signup#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Signup",
                "properties": {
                  "dyType": "signup-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Newsletter Subscription",
              "description": "Reports that a user subscribed to a newsletter. Identification event.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `newsletter-subscription-v1`.",
                          "type": "string",
                          "pattern": "newsletter-subscription-v1",
                          "default": "newsletter-subscription-v1"
                        },
                        "cuid": {
                          "description": "User identifier value. Max 250 characters.",
                          "type": "string",
                          "enum": [
                            "demo@email.com",
                            "123456789"
                          ]
                        },
                        "cuidType": {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        "secondaryIdentifiers": {
                          "allOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "hashedPhoneNumber"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  }
                                }
                              }
                            },
                            {
                              "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/newsletter-subscription#parameters)."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Newsletter Subscription",
                "properties": {
                  "dyType": "newsletter-subscription-v1",
                  "cuid": "demo@email.com",
                  "cuidType": "EcommerceID",
                  "secondaryIdentifiers": [
                    {
                      "type": "hashedPhoneNumber",
                      "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                    },
                    {
                      "type": "ecommerceID",
                      "value": "12345"
                    },
                    {
                      "type": "vipClub",
                      "value": "678910"
                    }
                  ]
                }
              }
            },
            {
              "title": "Push Opt-In",
              "description": "Reports that a user opted in to receive Reconnect push notifications.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `message-optin-v1`.",
                          "type": "string",
                          "pattern": "message-optin-v1",
                          "default": "message-optin-v1"
                        },
                        "pushId": {
                          "description": "Reports that a user opted in to receive Reconnect push notifications.",
                          "type": "string",
                          "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                        }
                      },
                      "required": [
                        "dyType",
                        "pushId"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Push Opt-in",
                "properties": {
                  "dyType": "message-optin-v1",
                  "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                }
              }
            },
            {
              "title": "Push Opt-Out",
              "description": "Reports that a user opted out of receiving Reconnect push notifications.",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `message-optout-v1`.",
                          "type": "string",
                          "pattern": "message-optout-v1",
                          "default": "message-optout-v1"
                        },
                        "pushId": {
                          "description": "Reports that a user opted in to receive Reconnect push notifications.",
                          "type": "string",
                          "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                        }
                      },
                      "required": [
                        "dyType",
                        "pushId"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Push Opt-Out",
                "properties": {
                  "dyType": "message-optout-v1",
                  "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                }
              }
            },
            {
              "title": "Keyword Search",
              "description": "Reports that a user ran a freestyle keyword search.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `keyword-search-v1`.",
                          "type": "string",
                          "pattern": "keyword-search-v1",
                          "default": "keyword-search-v1"
                        },
                        "keywords": {
                          "description": "The search string.",
                          "type": "string",
                          "example": "contact info"
                        }
                      },
                      "required": [
                        "dyType",
                        "keywords"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Keyword search",
                "properties": {
                  "dyType": "keyword-search-v1",
                  "keywords": "contact info"
                }
              }
            },
            {
              "title": "Add to Wishlist",
              "description": "Reports that a user added a product to their wishlist.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `add-to-wishlist-v1`.",
                          "type": "string",
                          "pattern": "add-to-wishlist-v1",
                          "default": "add-to-wishlist-v1"
                        },
                        "productId": {
                          "description": "SKU exactly as it appears in the product feed.",
                          "type": "string"
                        },
                        "size": {
                          "description": "Product size.",
                          "type": "string",
                          "example": "L"
                        }
                      },
                      "required": [
                        "dyType",
                        "productId"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Add to Wishlist",
                "properties": {
                  "dyType": "add-to-wishlist-v1",
                  "productId": "item-34454",
                  "size": "XL"
                }
              }
            },
            {
              "title": "Filter Items",
              "description": "Reports that the user filtered the product list by a specific field value.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `filter-items-v1`.",
                          "type": "string",
                          "pattern": "filter-items-v1",
                          "default": "filter-items-v1"
                        },
                        "filterType": {
                          "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
                          "type": "string",
                          "example": "color"
                        },
                        "filterNumericValue": {
                          "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
                          "type": "number",
                          "example": 20
                        },
                        "filterStringValue": {
                          "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
                          "type": "string",
                          "example": "Gray"
                        }
                      },
                      "required": [
                        "dyType",
                        "filterType"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Filter Items",
                "properties": {
                  "dyType": "filter-items-v1",
                  "filterType": "color",
                  "filterNumericValue": 4
                }
              }
            },
            {
              "title": "Change Attribute",
              "description": "Reports that a user changed an attribute of the displayed product (such as color or size).<br>**Note:** The attribute type and value must match information in your product feed. The currently displayed product is inferred from the in-page context.<br>**This event is currently available for script implementation only.**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `change-attribute-v1`.",
                          "type": "string",
                          "pattern": "change-attr-v1",
                          "default": "change-attr-v1"
                        },
                        "attributeType": {
                          "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
                          "type": "string",
                          "example": "Color"
                        },
                        "attributeValue": {
                          "description": "The new value (for example, new color is Gray).",
                          "type": "string",
                          "example": "Navy Blue"
                        }
                      },
                      "required": [
                        "dyType",
                        "attributeType",
                        "attributeValue"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Change Attribute",
                "properties": {
                  "dyType": "change-attr-v1",
                  "attributeType": "Color",
                  "attributeValue": "Navy Blue"
                }
              }
            },
            {
              "title": "Video Watch",
              "description": "Reports that a user watched a video on a media site or application.<br>This event can report that the user watched a video in part or in full. You can distinguish between auto-play videos and those that the user explicitly clicked to watch.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `video-watch-v1`.",
                          "type": "string",
                          "pattern": "video-watch-v1",
                          "default": "video-watch-v1"
                        },
                        "itemId": {
                          "description": "ID that matches an item ID in the content feed.",
                          "type": "string",
                          "example": "33849492012003"
                        },
                        "categories": {
                          "description": "*Optional*",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Sports",
                            "Baseball"
                          ]
                        },
                        "autoplay": {
                          "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
                          "type": "boolean",
                          "default": false
                        },
                        "progress": {
                          "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
                          "type": "string",
                          "enum": [
                            "VIDEO_STARTED",
                            "PREROLL_FINISHED",
                            "VIDEO_FINISHED",
                            "VIDEO_PROGRESS"
                          ],
                          "example": "VIDEO_STARTED"
                        },
                        "progressPercent": {
                          "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
                          "type": "number",
                          "example": 65
                        }
                      },
                      "required": [
                        "dyType",
                        "itemId",
                        "autoplay",
                        "progress",
                        "progressPercent"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Video Watch",
                "properties": {
                  "dyType": "video-watch-v1",
                  "itemId": "33849492012003",
                  "categories": [
                    "Sports",
                    "Baseball"
                  ],
                  "autoplay": true,
                  "progress": "VIDEO_PROGRESS",
                  "progressPercent": 65
                }
              }
            },
            {
              "title": "Sort Items",
              "description": "Reports that the user changed the sorting of a product list.<br>**This event is currently available for script implementation only.**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `sort-items-v1`.",
                          "type": "string",
                          "pattern": "sort-items-v1",
                          "default": "sort-items-v1"
                        },
                        "sortBy": {
                          "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
                          "type": "string",
                          "example": "price"
                        },
                        "sortOrder": {
                          "description": "`ASC` or `DESC`.",
                          "type": "string",
                          "example": "ASC"
                        }
                      },
                      "required": [
                        "dyType",
                        "sortBy",
                        "sortOrder"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Sort Items",
                "properties": {
                  "dyType": "sort-items-v1",
                  "sortBy": "PRICE",
                  "sortOrder": "ASC"
                }
              }
            },
            {
              "title": "Promo Code Entered",
              "description": "Reports that the user entered a valid promotion code.<br>**This event is currently available for script implementation only.**",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `enter-promo-code-v1`.",
                          "type": "string",
                          "pattern": "enter-promo-code-v1",
                          "default": "enter-promo-code-v1"
                        },
                        "code": {
                          "description": "The promo code.",
                          "type": "string",
                          "example": "SPECIALOFFER"
                        }
                      },
                      "required": [
                        "dyType",
                        "code"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Promo Code Entered",
                "properties": {
                  "dyType": "enter-promo-code-v1",
                  "code": "SPECIALOFFER"
                }
              }
            },
            {
              "title": "Custom Event",
              "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Event name for display. Does not have a `dyType` property.",
                  "type": "string",
                  "example": "VIP Login"
                },
                "properties": {
                  "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                      "type": "number",
                      "example": 98.7
                    },
                    "currency": {
                      "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                      "type": "string",
                      "example": "USD"
                    }
                  },
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                }
              },
              "required": [
                "name"
              ],
              "example": {
                "name": "Custom Event Example 1",
                "properties": {
                  "isVIP": true
                }
              }
            },
            {
              "title": "Inform Affinity",
              "description": "Report an array of product attributes to use in affinity personalization.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `inform-affinity-v1`.",
                          "type": "string",
                          "pattern": "inform-affinity-v1"
                        },
                        "source": {
                          "description": "The source of the user data",
                          "type": "string"
                        },
                        "data": {
                          "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "attribute": {
                                "description": "name of attribute"
                              },
                              "values": {
                                "type": "array",
                                "maxItems": 10,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "dyType",
                        "data"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Inform Affinity",
                "properties": {
                  "dyType": "inform-affinity-v1",
                  "source": "registration-form",
                  "data": [
                    {
                      "attribute": "categories",
                      "values": [
                        "shoes",
                        "tops",
                        "accessories"
                      ]
                    },
                    {
                      "attribute": "brand",
                      "values": [
                        "adidas"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "EventsQsr": {
        "description": "One or more events to report.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Purchase",
              "description": "Reports that the user completed a purchase.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `purchase-v1`.",
                          "type": "string",
                          "pattern": "purchase-v1",
                          "default": "purchase-v1"
                        },
                        "value": {
                          "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                          "type": "number",
                          "example": 19.9
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "uniqueTransactionId": {
                          "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                          "type": "string",
                          "example": "38373991919193830033"
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                            },
                            {
                              "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "The product ID from the restaurant product catalog.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number"
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  },
                                  "innerProducts": {
                                    "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "productId": {
                                          "description": "The product ID from the restaurant product catalog.",
                                          "type": "string"
                                        },
                                        "quantity": {
                                          "description": "Number of items.",
                                          "type": "number"
                                        },
                                        "itemPrice": {
                                          "description": "unit.cents format using the section default currency.",
                                          "type": "number",
                                          "example": 23.99
                                        }
                                      },
                                      "required": [
                                        "productId"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "productId"
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "value",
                        "cart"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "EventsExternal": {
        "description": "One or more events to report.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Offline Purchase",
              "description": "Reports that the user completed a purchase.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `offline-purchase-v1`.",
                          "type": "string",
                          "pattern": "offline-purchase-v1",
                          "default": "offline-purchase-v1",
                          "example": "offline-purchase-v1"
                        },
                        "uniqueTransactionId": {
                          "allOf": [
                            {
                              "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                              "type": "string",
                              "example": "38373991919193830033"
                            },
                            {
                              "description": "The purchase transaction ID. Each line contains a maximum of one SKU. If multiple items were purchased together, create multiple lines with the same transactionId.<br>The transaction ID must be unique per transaction, including online purchases.<br>A transaction with the same ID as another transaction previously ingested within the past day is ignored."
                            }
                          ]
                        },
                        "transactionSource": {
                          "description": "The source where the transaction occurred, usually the physical store ID.",
                          "type": "string",
                          "example": "f877e8a9dbb"
                        },
                        "transactionDatetime": {
                          "description": "The date and time of the purchase in **ISO 8601 combined date and time** format.",
                          "type": "string",
                          "example": "2018-09-23T07:29:51+00:00"
                        },
                        "currency": {
                          "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                          "type": "string",
                          "example": "USD"
                        },
                        "value": {
                          "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                          "type": "number",
                          "example": 19.9
                        },
                        "cart": {
                          "allOf": [
                            {
                              "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number"
                                  },
                                  "itemPrice": {
                                    "allOf": [
                                      {
                                        "description": "unit.cents format using the section default currency.",
                                        "type": "number",
                                        "example": 23.99
                                      },
                                      {
                                        "description": "List price for each item (quantity of one). This might be different from the `transactionItemValue` due to discounts, taxes, and so on."
                                      }
                                    ]
                                  },
                                  "transactionItemValue": {
                                    "description": "Value of the line item in actual payment currency.<br>The value is the product of `itemPrice` times `quantity`, after discount and taxes.<br>Negative values are ignored.<br>Required if the `value` property is not defined. Otherwise, it's optional.",
                                    "type": "number",
                                    "example": 23.99
                                  },
                                  "size": {
                                    "description": "Product size.",
                                    "type": "string",
                                    "example": "L"
                                  },
                                  "innerProducts": {
                                    "description": "**For restaurants only.** Indicate any inner products within the main product.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "productId": {
                                          "description": "SKU exactly as it appears in the product feed.",
                                          "type": "string"
                                        },
                                        "quantity": {
                                          "description": "Number of items.",
                                          "type": "number"
                                        },
                                        "itemPrice": {
                                          "description": "unit.cents format using the section default currency.",
                                          "type": "number",
                                          "example": 23.99
                                        }
                                      },
                                      "required": [
                                        "productId"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "productId",
                                  "quantity",
                                  "itemPrice",
                                  "transactionItemValue"
                                ]
                              }
                            },
                            {
                              "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                            }
                          ]
                        }
                      },
                      "required": [
                        "dyType",
                        "uniqueTransactionId",
                        "transactionDatetime",
                        "value",
                        "cart"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "name",
                "properties"
              ]
            },
            {
              "title": "Inform Affinity",
              "description": "Report an array of product attributes to use in affinity personalization.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A human-readable name corresponding to the schema name.",
                  "type": "string"
                },
                "properties": {
                  "allOf": [
                    {
                      "description": "Data for the reported event.",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "dyType": {
                          "description": "Must be `inform-affinity-v1`.",
                          "type": "string",
                          "pattern": "inform-affinity-v1"
                        },
                        "source": {
                          "description": "The source of the user data",
                          "type": "string"
                        },
                        "data": {
                          "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "attribute": {
                                "description": "name of attribute"
                              },
                              "values": {
                                "type": "array",
                                "maxItems": 10,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "dyType",
                        "data"
                      ]
                    }
                  ]
                }
              },
              "example": {
                "name": "Inform Affinity",
                "properties": {
                  "dyType": "inform-affinity-v1",
                  "source": "registration-form",
                  "data": [
                    {
                      "attribute": "categories",
                      "values": [
                        "shoes",
                        "tops",
                        "accessories"
                      ]
                    },
                    {
                      "attribute": "brand",
                      "values": [
                        "adidas"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "title": "Custom Event",
              "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Event name for display. Does not have a `dyType` property.",
                  "type": "string",
                  "example": "VIP Login"
                },
                "properties": {
                  "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                      "type": "number",
                      "example": 98.7
                    },
                    "currency": {
                      "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                      "type": "string",
                      "example": "USD"
                    }
                  },
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                }
              },
              "required": [
                "name"
              ],
              "example": {
                "name": "Custom Event Example 1",
                "properties": {
                  "isVIP": true
                }
              }
            }
          ]
        }
      },
      "EventProperties": {
        "description": "Data for the reported event.",
        "type": "object"
      },
      "EventName": {
        "description": "A human-readable name corresponding to the schema name.",
        "type": "string"
      },
      "AddToCart": {
        "title": "Add to Cart",
        "description": "Reports that the user added a product to the cart.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `add-to-cart-v1`.",
                    "type": "string",
                    "pattern": "add-to-cart-v1",
                    "default": "add-to-cart-v1"
                  },
                  "value": {
                    "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                    "type": "number",
                    "example": 19.9
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "productId": {
                    "description": "SKU exactly as it appears in the product feed.",
                    "type": "string"
                  },
                  "quantity": {
                    "allOf": [
                      {
                        "description": "Number of items.",
                        "type": "number",
                        "example": 1
                      },
                      {
                        "description": "The number of items with this SKU added to the cart in the scope of this event."
                      }
                    ]
                  },
                  "cart": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            "itemPrice": {
                              "description": "unit.cents format using the section default currency.",
                              "type": "number",
                              "example": 23.99
                            }
                          }
                        }
                      },
                      {
                        "description": "The updated contents of the cart, including the items added to trigger this event. Each object is a unique item/SKU.<br>This object is required for Reconnect campaigns, as well as to enable the recommendations engine to filter out products that are already in the cart. [Learn more about this filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178-Recommendation-Filters#exclude)."
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "value",
                  "productId",
                  "quantity"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Add To Cart",
          "properties": {
            "dyType": "add-to-cart-v1",
            "value": 118.26,
            "currency": "any supported currency code",
            "productId": "item-34454",
            "quantity": 2,
            "cart": [
              {
                "productId": "sku-4324-bg",
                "quantity": 2,
                "itemPrice": 12.34
              },
              {
                "productId": "item-34454",
                "quantity": 2,
                "itemPrice": 59.13
              }
            ]
          }
        }
      },
      "Application": {
        "title": "Application",
        "description": "Reports that a user started the application process for a product.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `add-to-cart-v1`.",
                    "type": "string",
                    "pattern": "add-to-cart-v1",
                    "default": "add-to-cart-v1"
                  },
                  "value": {
                    "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                    "type": "number",
                    "example": 19.9
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "productId": {
                    "description": "SKU exactly as it appears in the product feed.",
                    "type": "string"
                  },
                  "quantity": {
                    "allOf": [
                      {
                        "description": "Number of items.",
                        "type": "number",
                        "example": 1
                      },
                      {
                        "description": "The total number of items that were added to the cart."
                      }
                    ]
                  },
                  "cart": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            "itemPrice": {
                              "description": "unit.cents format using the section default currency.",
                              "type": "number",
                              "example": 23.99
                            }
                          }
                        }
                      },
                      {
                        "description": "The cart's current state, including the last item added. Products are ordered from the first added to the cart to the most recent.<br><br>**Note:** Pass the updated cart with the newly added products to ensure that the cart state is fully in sync with your system. This is important mainly for triggered email and push notifications. *Optional, but recommended.*"
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "value",
                  "productId",
                  "quantity"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Application Started",
          "properties": {
            "dyType": "add-to-cart-v1",
            "value": 400,
            "currency": "EUR",
            "productId": "item-34454",
            "quantity": 2,
            "cart": [
              {
                "productId": "sku-4324-bg",
                "quantity": 2,
                "itemPrice": 100
              },
              {
                "productId": "item-34454",
                "quantity": 2,
                "itemPrice": 200
              }
            ]
          }
        }
      },
      "Purchase": {
        "title": "Purchase",
        "description": "Reports that the user completed a purchase.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `purchase-v1`.",
                    "type": "string",
                    "pattern": "purchase-v1",
                    "default": "purchase-v1"
                  },
                  "value": {
                    "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                    "type": "number",
                    "example": 98.8
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "uniqueTransactionId": {
                    "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                    "type": "string",
                    "example": "38373991919193830033"
                  },
                  "cart": {
                    "allOf": [
                      {
                        "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            "itemPrice": {
                              "description": "unit.cents format using the section default currency.",
                              "type": "number",
                              "example": 23.99
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "value",
                  "cart"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Purchase",
          "properties": {
            "uniqueTransactionId": 123456,
            "dyType": "purchase-v1",
            "value": 90.55,
            "currency": "any supported currency code",
            "cart": [
              {
                "productId": "item-34454",
                "quantity": 1,
                "itemPrice": 65.87
              },
              {
                "productId": "sku-4324-bg",
                "quantity": 2,
                "itemPrice": 12.34
              }
            ]
          }
        }
      },
      "PurchaseQsr": {
        "title": "Purchase",
        "description": "Reports that the user completed a purchase.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `purchase-v1`.",
                    "type": "string",
                    "pattern": "purchase-v1",
                    "default": "purchase-v1"
                  },
                  "value": {
                    "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                    "type": "number",
                    "example": 19.9
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "uniqueTransactionId": {
                    "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                    "type": "string",
                    "example": "38373991919193830033"
                  },
                  "cart": {
                    "allOf": [
                      {
                        "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                      },
                      {
                        "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "The product ID from the restaurant product catalog.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number"
                            },
                            "itemPrice": {
                              "description": "unit.cents format using the section default currency.",
                              "type": "number",
                              "example": 23.99
                            },
                            "innerProducts": {
                              "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "The product ID from the restaurant product catalog.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number"
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                },
                                "required": [
                                  "productId"
                                ]
                              }
                            }
                          },
                          "required": [
                            "productId"
                          ]
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "value",
                  "cart"
                ]
              }
            ]
          }
        }
      },
      "Submission": {
        "title": "Submission",
        "description": "Reports that the user submitted an application.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `purchase-v1`.",
                    "type": "string",
                    "pattern": "purchase-v1",
                    "default": "purchase-v1"
                  },
                  "value": {
                    "allOf": [
                      {
                        "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                        "type": "number",
                        "example": 98.8
                      },
                      {
                        "description": "The total monetary value of the event. This refers only to the item or items removed that triggered the event, not the entire cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0."
                      }
                    ]
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "uniqueTransactionId": {
                    "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                    "type": "string",
                    "example": "38373991919193830033"
                  },
                  "cart": {
                    "allOf": [
                      {
                        "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            "itemPrice": {
                              "description": "unit.cents format using the section default currency.",
                              "type": "number",
                              "example": 23.99
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "value",
                  "cart"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Submission",
          "properties": {
            "uniqueTransactionId": 123456,
            "dyType": "purchase-v1",
            "value": 90.55,
            "currency": "any supported currency code",
            "cart": [
              {
                "productId": "item-34454",
                "quantity": 1,
                "itemPrice": 65.87
              },
              {
                "productId": "sku-4324-bg",
                "quantity": 2,
                "itemPrice": 12.34
              }
            ]
          }
        }
      },
      "RemoveFromCart": {
        "title": "Remove from Cart",
        "description": "Reports that the user removed an item from the cart.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `remove-from-cart-v1`.",
                    "type": "string",
                    "pattern": "remove-from-cart-v1",
                    "default": "remove-from-cart-v1"
                  },
                  "value": {
                    "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                    "type": "number",
                    "example": 19.9
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "productId": {
                    "description": "SKU exactly as it appears in the product feed.",
                    "type": "string"
                  },
                  "quantity": {
                    "allOf": [
                      {
                        "description": "Number of items.",
                        "type": "number",
                        "example": 1
                      },
                      {
                        "description": "The total number of items removed."
                      }
                    ]
                  },
                  "cart": {
                    "allOf": [
                      {
                        "description": "The cart's current state, after the removal of the item. Products are ordered from the first added to the cart to the most recent.<br>*Optional, but recommended.*"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            "itemPrice": {
                              "description": "unit.cents format using the section default currency.",
                              "type": "number",
                              "example": 23.99
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "value",
                  "productId",
                  "quantity"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Remove from Cart",
          "properties": {
            "dyType": "remove-from-cart-v1",
            "value": 34.45,
            "currency": "any supported currency code",
            "productId": "gswefd-34-454",
            "quantity": 1,
            "cart": [
              {
                "productId": "sku-4324-bg",
                "quantity": 2,
                "itemPrice": 12.34
              },
              {
                "productId": "item-34454",
                "quantity": 1,
                "itemPrice": 34.45
              }
            ]
          }
        }
      },
      "SyncCart": {
        "title": "Sync Cart",
        "description": "**THIS EVENT IS MANDATORY FOR:**<br><ul><li>The [*Exclude items currently in cart* filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178#h_01FZW8C8C9JSHT05QW6764K0XV), and must be fired upon every page load.</li><li>[Reconnect](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect) implementation.</li></ul>",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `sync-cart-v1`.",
                    "type": "string",
                    "pattern": "sync-cart-v1",
                    "default": "sync-cart-v1"
                  },
                  "value": {
                    "allOf": [
                      {
                        "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                        "type": "number",
                        "example": 98.8
                      },
                      {
                        "description": "The total monetary value of the event (the total value of the cart, not just the item that triggered the event); in the actual payment currency."
                      }
                    ]
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "cart": {
                    "allOf": [
                      {
                        "description": "The cart's absolute current state, including the last item added. Products are ordered from the first added to the cart to the most recent."
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number",
                              "example": 1
                            },
                            "itemPrice": {
                              "description": "unit.cents format using the section default currency.",
                              "type": "number",
                              "example": 23.99
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "value",
                  "cart"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Sync Cart",
          "properties": {
            "dyType": "sync-cart-v1",
            "value": 125.5,
            "currency": "any supported currency code",
            "cart": [
              {
                "productId": "sku-4324-bg",
                "quantity": 2,
                "itemPrice": 12.34
              },
              {
                "productId": "item-34454",
                "quantity": 1,
                "itemPrice": 34.45
              }
            ]
          }
        }
      },
      "IdentifyUser": {
        "title": "Identify User",
        "type": "object",
        "description": "Use to identify visitors at any point during their journey on your site or app, such as during the checkout process.",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `identify-v1`.",
                    "type": "string",
                    "pattern": "identify-v1",
                    "default": "identify-v1"
                  },
                  "cuid": {
                    "description": "User identifier value. Max 250 characters.",
                    "type": "string",
                    "enum": [
                      "demo@email.com",
                      "123456789"
                    ]
                  },
                  "cuidType": {
                    "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                    "type": "string"
                  },
                  "secondaryIdentifiers": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "hashedPhoneNumber"
                            },
                            "value": {
                              "type": "string",
                              "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/identify-user#parameters)."
                      }
                    ]
                  }
                },
                "required": [
                  "dyType"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Identify",
          "properties": {
            "dyType": "identify-v1",
            "cuid": "demo@email.com",
            "cuidType": "EcommerceID",
            "secondaryIdentifiers": [
              {
                "type": "hashedPhoneNumber",
                "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
              },
              {
                "type": "ecommerceID",
                "value": "12345"
              },
              {
                "type": "vipClub",
                "value": "678910"
              }
            ]
          }
        }
      },
      "Login": {
        "title": "Login",
        "type": "object",
        "description": "Reports that a user has logged in.",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `login-v1`.",
                    "type": "string",
                    "pattern": "login-v1",
                    "default": "login-v1"
                  },
                  "cuid": {
                    "description": "User identifier value. Max 250 characters.",
                    "type": "string",
                    "enum": [
                      "demo@email.com",
                      "123456789"
                    ]
                  },
                  "cuidType": {
                    "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                    "type": "string"
                  },
                  "secondaryIdentifiers": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "hashedPhoneNumber"
                            },
                            "value": {
                              "type": "string",
                              "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/login#parameters)."
                      }
                    ]
                  }
                },
                "required": [
                  "dyType"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Login",
          "properties": {
            "dyType": "login-v1",
            "cuid": "demo@email.com",
            "cuidType": "EcommerceID",
            "secondaryIdentifiers": [
              {
                "type": "hashedPhoneNumber",
                "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
              },
              {
                "type": "ecommerceID",
                "value": "12345"
              },
              {
                "type": "vipClub",
                "value": "678910"
              }
            ]
          }
        }
      },
      "Signup": {
        "title": "Signup",
        "type": "object",
        "description": "Reports that the user completed the signup process and is a registered user.",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `signup-v1`.",
                    "type": "string"
                  },
                  "cuid": {
                    "description": "User identifier value. Max 250 characters.",
                    "type": "string",
                    "enum": [
                      "demo@email.com",
                      "123456789"
                    ]
                  },
                  "cuidType": {
                    "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                    "type": "string"
                  },
                  "secondaryIdentifiers": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "hashedPhoneNumber"
                            },
                            "value": {
                              "type": "string",
                              "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/signup#parameters)."
                      }
                    ]
                  }
                },
                "required": [
                  "dyType"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Signup",
          "properties": {
            "dyType": "signup-v1",
            "cuid": "demo@email.com",
            "cuidType": "EcommerceID",
            "secondaryIdentifiers": [
              {
                "type": "hashedPhoneNumber",
                "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
              },
              {
                "type": "ecommerceID",
                "value": "12345"
              },
              {
                "type": "vipClub",
                "value": "678910"
              }
            ]
          }
        }
      },
      "NewsletterSubscription": {
        "title": "Newsletter Subscription",
        "description": "Reports that a user subscribed to a newsletter. Identification event.",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `newsletter-subscription-v1`.",
                    "type": "string",
                    "pattern": "newsletter-subscription-v1",
                    "default": "newsletter-subscription-v1"
                  },
                  "cuid": {
                    "description": "User identifier value. Max 250 characters.",
                    "type": "string",
                    "enum": [
                      "demo@email.com",
                      "123456789"
                    ]
                  },
                  "cuidType": {
                    "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                    "type": "string"
                  },
                  "secondaryIdentifiers": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "hashedPhoneNumber"
                            },
                            "value": {
                              "type": "string",
                              "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/newsletter-subscription#parameters)."
                      }
                    ]
                  }
                },
                "required": [
                  "dyType"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Newsletter Subscription",
          "properties": {
            "dyType": "newsletter-subscription-v1",
            "cuid": "demo@email.com",
            "cuidType": "EcommerceID",
            "secondaryIdentifiers": [
              {
                "type": "hashedPhoneNumber",
                "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
              },
              {
                "type": "ecommerceID",
                "value": "12345"
              },
              {
                "type": "vipClub",
                "value": "678910"
              }
            ]
          }
        }
      },
      "MessageOptIn": {
        "title": "Push Opt-In",
        "description": "Reports that a user opted in to receive Reconnect push notifications.",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `message-optin-v1`.",
                    "type": "string",
                    "pattern": "message-optin-v1",
                    "default": "message-optin-v1"
                  },
                  "pushId": {
                    "description": "Reports that a user opted in to receive Reconnect push notifications.",
                    "type": "string",
                    "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                  }
                },
                "required": [
                  "dyType",
                  "pushId"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Push Opt-in",
          "properties": {
            "dyType": "message-optin-v1",
            "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
          }
        }
      },
      "MessageOptOut": {
        "title": "Push Opt-Out",
        "description": "Reports that a user opted out of receiving Reconnect push notifications.",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `message-optout-v1`.",
                    "type": "string",
                    "pattern": "message-optout-v1",
                    "default": "message-optout-v1"
                  },
                  "pushId": {
                    "description": "Reports that a user opted in to receive Reconnect push notifications.",
                    "type": "string",
                    "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                  }
                },
                "required": [
                  "dyType",
                  "pushId"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Push Opt-Out",
          "properties": {
            "dyType": "message-optout-v1",
            "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
          }
        }
      },
      "KeywordSearch": {
        "title": "Keyword Search",
        "description": "Reports that a user ran a freestyle keyword search.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `keyword-search-v1`.",
                    "type": "string",
                    "pattern": "keyword-search-v1",
                    "default": "keyword-search-v1"
                  },
                  "keywords": {
                    "description": "The search string.",
                    "type": "string",
                    "example": "contact info"
                  }
                },
                "required": [
                  "dyType",
                  "keywords"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Keyword search",
          "properties": {
            "dyType": "keyword-search-v1",
            "keywords": "contact info"
          }
        }
      },
      "AddToWishlist": {
        "title": "Add to Wishlist",
        "description": "Reports that a user added a product to their wishlist.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `add-to-wishlist-v1`.",
                    "type": "string",
                    "pattern": "add-to-wishlist-v1",
                    "default": "add-to-wishlist-v1"
                  },
                  "productId": {
                    "description": "SKU exactly as it appears in the product feed.",
                    "type": "string"
                  },
                  "size": {
                    "description": "Product size.",
                    "type": "string",
                    "example": "L"
                  }
                },
                "required": [
                  "dyType",
                  "productId"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Add to Wishlist",
          "properties": {
            "dyType": "add-to-wishlist-v1",
            "productId": "item-34454",
            "size": "XL"
          }
        }
      },
      "FilterItems": {
        "title": "Filter Items",
        "description": "Reports that the user filtered the product list by a specific field value.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `filter-items-v1`.",
                    "type": "string",
                    "pattern": "filter-items-v1",
                    "default": "filter-items-v1"
                  },
                  "filterType": {
                    "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
                    "type": "string",
                    "example": "color"
                  },
                  "filterNumericValue": {
                    "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
                    "type": "number",
                    "example": 20
                  },
                  "filterStringValue": {
                    "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
                    "type": "string",
                    "example": "Gray"
                  }
                },
                "required": [
                  "dyType",
                  "filterType"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Filter Items",
          "properties": {
            "dyType": "filter-items-v1",
            "filterType": "color",
            "filterNumericValue": 4
          }
        }
      },
      "ChangeAttribute": {
        "title": "Change Attribute",
        "description": "Reports that a user changed an attribute of the displayed product (such as color or size).<br>**Note:** The attribute type and value must match information in your product feed. The currently displayed product is inferred from the in-page context.<br>**This event is currently available for script implementation only.**",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `change-attribute-v1`.",
                    "type": "string",
                    "pattern": "change-attr-v1",
                    "default": "change-attr-v1"
                  },
                  "attributeType": {
                    "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
                    "type": "string",
                    "example": "Color"
                  },
                  "attributeValue": {
                    "description": "The new value (for example, new color is Gray).",
                    "type": "string",
                    "example": "Navy Blue"
                  }
                },
                "required": [
                  "dyType",
                  "attributeType",
                  "attributeValue"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Change Attribute",
          "properties": {
            "dyType": "change-attr-v1",
            "attributeType": "Color",
            "attributeValue": "Navy Blue"
          }
        }
      },
      "VideoWatch": {
        "title": "Video Watch",
        "description": "Reports that a user watched a video on a media site or application.<br>This event can report that the user watched a video in part or in full. You can distinguish between auto-play videos and those that the user explicitly clicked to watch.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `video-watch-v1`.",
                    "type": "string",
                    "pattern": "video-watch-v1",
                    "default": "video-watch-v1"
                  },
                  "itemId": {
                    "description": "ID that matches an item ID in the content feed.",
                    "type": "string",
                    "example": "33849492012003"
                  },
                  "categories": {
                    "description": "*Optional*",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "Sports",
                      "Baseball"
                    ]
                  },
                  "autoplay": {
                    "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
                    "type": "boolean",
                    "default": false
                  },
                  "progress": {
                    "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
                    "type": "string",
                    "enum": [
                      "VIDEO_STARTED",
                      "PREROLL_FINISHED",
                      "VIDEO_FINISHED",
                      "VIDEO_PROGRESS"
                    ],
                    "example": "VIDEO_STARTED"
                  },
                  "progressPercent": {
                    "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
                    "type": "number",
                    "example": 65
                  }
                },
                "required": [
                  "dyType",
                  "itemId",
                  "autoplay",
                  "progress",
                  "progressPercent"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Video Watch",
          "properties": {
            "dyType": "video-watch-v1",
            "itemId": "33849492012003",
            "categories": [
              "Sports",
              "Baseball"
            ],
            "autoplay": true,
            "progress": "VIDEO_PROGRESS",
            "progressPercent": 65
          }
        }
      },
      "SortItems": {
        "title": "Sort Items",
        "description": "Reports that the user changed the sorting of a product list.<br>**This event is currently available for script implementation only.**",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `sort-items-v1`.",
                    "type": "string",
                    "pattern": "sort-items-v1",
                    "default": "sort-items-v1"
                  },
                  "sortBy": {
                    "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
                    "type": "string",
                    "example": "price"
                  },
                  "sortOrder": {
                    "description": "`ASC` or `DESC`.",
                    "type": "string",
                    "example": "ASC"
                  }
                },
                "required": [
                  "dyType",
                  "sortBy",
                  "sortOrder"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Sort Items",
          "properties": {
            "dyType": "sort-items-v1",
            "sortBy": "PRICE",
            "sortOrder": "ASC"
          }
        }
      },
      "PromoCodeEntered": {
        "title": "Promo Code Entered",
        "description": "Reports that the user entered a valid promotion code.<br>**This event is currently available for script implementation only.**",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `enter-promo-code-v1`.",
                    "type": "string",
                    "pattern": "enter-promo-code-v1",
                    "default": "enter-promo-code-v1"
                  },
                  "code": {
                    "description": "The promo code.",
                    "type": "string",
                    "example": "SPECIALOFFER"
                  }
                },
                "required": [
                  "dyType",
                  "code"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Promo Code Entered",
          "properties": {
            "dyType": "enter-promo-code-v1",
            "code": "SPECIALOFFER"
          }
        }
      },
      "CustomEvent": {
        "title": "Custom Event",
        "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Event name for display. Does not have a `dyType` property.",
            "type": "string",
            "example": "VIP Login"
          },
          "properties": {
            "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
            "type": "object",
            "properties": {
              "value": {
                "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                "type": "number",
                "example": 98.7
              },
              "currency": {
                "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                "type": "string",
                "example": "USD"
              }
            },
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          }
        },
        "required": [
          "name"
        ],
        "example": {
          "name": "Custom Event Example 1",
          "properties": {
            "isVIP": true
          }
        }
      },
      "InformAffinity": {
        "title": "Inform Affinity",
        "description": "Report an array of product attributes to use in affinity personalization.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `inform-affinity-v1`.",
                    "type": "string",
                    "pattern": "inform-affinity-v1"
                  },
                  "source": {
                    "description": "The source of the user data",
                    "type": "string"
                  },
                  "data": {
                    "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "attribute": {
                          "description": "name of attribute"
                        },
                        "values": {
                          "type": "array",
                          "maxItems": 10,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "dyType",
                  "data"
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Inform Affinity",
          "properties": {
            "dyType": "inform-affinity-v1",
            "source": "registration-form",
            "data": [
              {
                "attribute": "categories",
                "values": [
                  "shoes",
                  "tops",
                  "accessories"
                ]
              },
              {
                "attribute": "brand",
                "values": [
                  "adidas"
                ]
              }
            ]
          }
        }
      },
      "OfflinePurchase": {
        "title": "Offline Purchase",
        "description": "Reports that the user completed a purchase.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human-readable name corresponding to the schema name.",
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "description": "Data for the reported event.",
                "type": "object"
              },
              {
                "properties": {
                  "dyType": {
                    "description": "Must be `offline-purchase-v1`.",
                    "type": "string",
                    "pattern": "offline-purchase-v1",
                    "default": "offline-purchase-v1",
                    "example": "offline-purchase-v1"
                  },
                  "uniqueTransactionId": {
                    "allOf": [
                      {
                        "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                        "type": "string",
                        "example": "38373991919193830033"
                      },
                      {
                        "description": "The purchase transaction ID. Each line contains a maximum of one SKU. If multiple items were purchased together, create multiple lines with the same transactionId.<br>The transaction ID must be unique per transaction, including online purchases.<br>A transaction with the same ID as another transaction previously ingested within the past day is ignored."
                      }
                    ]
                  },
                  "transactionSource": {
                    "description": "The source where the transaction occurred, usually the physical store ID.",
                    "type": "string",
                    "example": "f877e8a9dbb"
                  },
                  "transactionDatetime": {
                    "description": "The date and time of the purchase in **ISO 8601 combined date and time** format.",
                    "type": "string",
                    "example": "2018-09-23T07:29:51+00:00"
                  },
                  "currency": {
                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                    "type": "string",
                    "example": "USD"
                  },
                  "value": {
                    "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                    "type": "number",
                    "example": 19.9
                  },
                  "cart": {
                    "allOf": [
                      {
                        "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "description": "SKU exactly as it appears in the product feed.",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Number of items.",
                              "type": "number"
                            },
                            "itemPrice": {
                              "allOf": [
                                {
                                  "description": "unit.cents format using the section default currency.",
                                  "type": "number",
                                  "example": 23.99
                                },
                                {
                                  "description": "List price for each item (quantity of one). This might be different from the `transactionItemValue` due to discounts, taxes, and so on."
                                }
                              ]
                            },
                            "transactionItemValue": {
                              "description": "Value of the line item in actual payment currency.<br>The value is the product of `itemPrice` times `quantity`, after discount and taxes.<br>Negative values are ignored.<br>Required if the `value` property is not defined. Otherwise, it's optional.",
                              "type": "number",
                              "example": 23.99
                            },
                            "size": {
                              "description": "Product size.",
                              "type": "string",
                              "example": "L"
                            },
                            "innerProducts": {
                              "description": "**For restaurants only.** Indicate any inner products within the main product.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "productId": {
                                    "description": "SKU exactly as it appears in the product feed.",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Number of items.",
                                    "type": "number"
                                  },
                                  "itemPrice": {
                                    "description": "unit.cents format using the section default currency.",
                                    "type": "number",
                                    "example": 23.99
                                  }
                                },
                                "required": [
                                  "productId"
                                ]
                              }
                            }
                          },
                          "required": [
                            "productId",
                            "quantity",
                            "itemPrice",
                            "transactionItemValue"
                          ]
                        }
                      },
                      {
                        "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                      }
                    ]
                  }
                },
                "required": [
                  "dyType",
                  "uniqueTransactionId",
                  "transactionDatetime",
                  "value",
                  "cart"
                ]
              }
            ]
          }
        },
        "required": [
          "name",
          "properties"
        ]
      },
      "AttributeType": {
        "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
        "type": "string",
        "example": "Color"
      },
      "AttributeValue": {
        "description": "The new value (for example, new color is Gray).",
        "type": "string",
        "example": "Navy Blue"
      },
      "Autoplay": {
        "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
        "type": "boolean",
        "default": false
      },
      "Categories": {
        "description": "*Optional*",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "Sports",
          "Baseball"
        ]
      },
      "Code": {
        "description": "The promo code.",
        "type": "string",
        "example": "SPECIALOFFER"
      },
      "Currency": {
        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
        "type": "string",
        "example": "USD"
      },
      "FilterNumericValue": {
        "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
        "type": "number",
        "example": 20
      },
      "FilterStringValue": {
        "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
        "type": "string",
        "example": "Gray"
      },
      "FilterType": {
        "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
        "type": "string",
        "example": "color"
      },
      "ItemId": {
        "description": "ID that matches an item ID in the content feed.",
        "type": "string",
        "example": "33849492012003"
      },
      "Keywords": {
        "description": "The search string.",
        "type": "string",
        "example": "contact info"
      },
      "ProgressPercent": {
        "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
        "type": "number",
        "example": 65
      },
      "Progress": {
        "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
        "type": "string",
        "enum": [
          "VIDEO_STARTED",
          "PREROLL_FINISHED",
          "VIDEO_FINISHED",
          "VIDEO_PROGRESS"
        ],
        "example": "VIDEO_STARTED"
      },
      "PushId": {
        "description": "Reports that a user opted in to receive Reconnect push notifications.",
        "type": "string",
        "example": "f7a8c987-7ab5-400f-b989-5357af507343"
      },
      "Quantity": {
        "description": "Number of items.",
        "type": "number",
        "example": 1
      },
      "Size": {
        "description": "Product size.",
        "type": "string",
        "example": "L"
      },
      "SortBy": {
        "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
        "type": "string",
        "example": "price"
      },
      "SortOrder": {
        "description": "`ASC` or `DESC`.",
        "type": "string",
        "example": "ASC"
      },
      "TransactionDatetime": {
        "description": "The date and time of the purchase in **ISO 8601 combined date and time** format.",
        "type": "string",
        "example": "2018-09-23T07:29:51+00:00"
      },
      "TransactionSource": {
        "description": "The source where the transaction occurred, usually the physical store ID.",
        "type": "string",
        "example": "f877e8a9dbb"
      },
      "UniqueTransactionId": {
        "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
        "type": "string",
        "example": "38373991919193830033"
      },
      "ValueTotal": {
        "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
        "type": "number",
        "example": 98.8
      },
      "Value": {
        "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
        "type": "number",
        "example": 19.9
      },
      "OutagesQsr": {
        "description": "A list of outage reports per branch.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "branchId": {
              "description": "The ID of the branch the recommendation is for.",
              "type": "string"
            },
            "products": {
              "description": "A list of out-of-stock product IDs",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "branchId",
            "products"
          ]
        }
      },
      "OutageProducts": {
        "description": "A list of out-of-stock product IDs",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Sku": {
        "description": "The SKU (unique identifier) of the product. These SKUs must exist in the global product feed.",
        "type": "string",
        "example": "A123"
      },
      "Availability": {
        "description": "Whether the product is available in the specific branch or not. Unavailable products will not be recommended.",
        "type": "boolean",
        "example": true
      },
      "Price": {
        "description": "The price of the product that is used in the specific branch.",
        "type": "number",
        "example": 3.14
      },
      "Name": {
        "description": "A local variation of the product name, if exists in the specific branch.",
        "type": "string"
      },
      "Addons": {
        "description": "The SKUs of all the products that can be added onto the main product, and the permitted quantities.",
        "type": "array",
        "items": {
          "properties": {
            "sku": {
              "description": "The SKU (unique identifier) of the product. These SKUs must exist in the global product feed.",
              "type": "string",
              "example": "A123"
            },
            "default_quantity": {
              "description": "The default quantity of this ingredient (add on) inside the parent product.",
              "type": "number",
              "example": 1
            },
            "min_quantity": {
              "description": "The minimum quantity of this ingredient (add on) inside the parent product.",
              "type": "number",
              "example": 0
            },
            "max_quantity": {
              "description": "The maximum quantity of this ingredient (add on) inside the parent product.",
              "type": "number",
              "example": 3
            },
            "charge_threshold": {
              "description": "The amount from which the QSR is going to charge for the addition of the add on.",
              "type": "number",
              "example": 1
            }
          },
          "required": [
            "sku"
          ]
        }
      },
      "DefaultQuantity": {
        "description": "The default quantity of this ingredient (add on) inside the parent product.",
        "type": "number",
        "example": 1
      },
      "MinQuantity": {
        "description": "The minimum quantity of this ingredient (add on) inside the parent product.",
        "type": "number",
        "example": 0
      },
      "MaxQuantity": {
        "description": "The maximum quantity of this ingredient (add on) inside the parent product.",
        "type": "number",
        "example": 3
      },
      "ChargeThreshold": {
        "description": "The amount from which the QSR is going to charge for the addition of the add on.",
        "type": "number",
        "example": 1
      },
      "UserDataRequests": {
        "description": "A list of user data update requests to be executed.",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "title": "Upsert Request",
              "type": "object",
              "properties": {
                "action": {
                  "description": "Use `upsert` to add user data.",
                  "type": "string",
                  "enum": [
                    "upsert"
                  ],
                  "example": "upsert"
                },
                "cuid": {
                  "allOf": [
                    {
                      "description": "User identifier value. Max 250 characters.",
                      "type": "string",
                      "enum": [
                        "demo@email.com",
                        "123456789"
                      ]
                    },
                    {
                      "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                    }
                  ]
                },
                "cuidtype": {
                  "allOf": [
                    {
                      "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                      "type": "string"
                    },
                    {
                      "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                    },
                    {
                      "example": "he"
                    }
                  ]
                },
                "timestamp": {
                  "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                  "type": "string",
                  "format": "date-time",
                  "example": "2021-07-24T13:44:17+02:00"
                },
                "data": {
                  "description": "Add CRM data here. Date values within the CRM Data should be date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "required": [
                "action",
                "cuid",
                "cuidtype",
                "timestamp",
                "data"
              ]
            },
            {
              "title": "Delete Request",
              "type": "object",
              "properties": {
                "action": {
                  "description": "Use `delete` to remove data.",
                  "type": "string",
                  "enum": [
                    "delete"
                  ],
                  "example": "delete"
                },
                "cuid": {
                  "allOf": [
                    {
                      "description": "User identifier value. Max 250 characters.",
                      "type": "string",
                      "enum": [
                        "demo@email.com",
                        "123456789"
                      ]
                    },
                    {
                      "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                    }
                  ]
                },
                "cuidtype": {
                  "allOf": [
                    {
                      "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                      "type": "string"
                    },
                    {
                      "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                    },
                    {
                      "example": "he"
                    }
                  ]
                },
                "timestamp": {
                  "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                  "type": "string",
                  "format": "date-time",
                  "example": "2021-07-24T13:44:17+02:00"
                }
              },
              "required": [
                "action",
                "cuid",
                "cuidtype",
                "timestamp"
              ]
            },
            {
              "title": "array_add/array_remove Request",
              "type": "object",
              "properties": {
                "action": {
                  "description": "Use `array_add` and `array_remove` to edit data in existing arrays.",
                  "type": "string",
                  "enum": [
                    "array_add",
                    "array_remove"
                  ],
                  "example": "array_add"
                },
                "cuid": {
                  "allOf": [
                    {
                      "description": "User identifier value. Max 250 characters.",
                      "type": "string",
                      "enum": [
                        "demo@email.com",
                        "123456789"
                      ]
                    },
                    {
                      "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                    }
                  ]
                },
                "cuidtype": {
                  "allOf": [
                    {
                      "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                      "type": "string"
                    },
                    {
                      "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                    },
                    {
                      "example": "he"
                    }
                  ]
                },
                "timestamp": {
                  "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                  "type": "string",
                  "format": "date-time",
                  "example": "2021-07-24T13:44:17+02:00"
                },
                "data": {
                  "oneOf": [
                    {
                      "title": "Data: array of strings",
                      "description": "Add CRM data here.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "title": "Data: array of numbers",
                      "description": "Add CRM data here. Insert the integer values corresponding to your predefined dropdown array. [Learn more about mapping numeric values to dropdown arrays](https://support.dynamicyield.com/hc/en-us/articles/4409595248017-Update-Your-User-Data-Feed-by-API#h_01FZ58DYM9WMR66N2P3Z4NKF7R).",
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "action",
                "cuid",
                "cuidtype",
                "timestamp",
                "data"
              ]
            }
          ]
        }
      },
      "UserDataRequestArray": {
        "title": "array_add/array_remove Request",
        "type": "object",
        "properties": {
          "action": {
            "description": "Use `array_add` and `array_remove` to edit data in existing arrays.",
            "type": "string",
            "enum": [
              "array_add",
              "array_remove"
            ],
            "example": "array_add"
          },
          "cuid": {
            "allOf": [
              {
                "description": "User identifier value. Max 250 characters.",
                "type": "string",
                "enum": [
                  "demo@email.com",
                  "123456789"
                ]
              },
              {
                "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
              }
            ]
          },
          "cuidtype": {
            "allOf": [
              {
                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                "type": "string"
              },
              {
                "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
              },
              {
                "example": "he"
              }
            ]
          },
          "timestamp": {
            "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
            "type": "string",
            "format": "date-time",
            "example": "2021-07-24T13:44:17+02:00"
          },
          "data": {
            "oneOf": [
              {
                "title": "Data: array of strings",
                "description": "Add CRM data here.",
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "Data: array of numbers",
                "description": "Add CRM data here. Insert the integer values corresponding to your predefined dropdown array. [Learn more about mapping numeric values to dropdown arrays](https://support.dynamicyield.com/hc/en-us/articles/4409595248017-Update-Your-User-Data-Feed-by-API#h_01FZ58DYM9WMR66N2P3Z4NKF7R).",
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            ]
          }
        },
        "required": [
          "action",
          "cuid",
          "cuidtype",
          "timestamp",
          "data"
        ]
      },
      "UserDataRequestUpsert": {
        "title": "Upsert Request",
        "type": "object",
        "properties": {
          "action": {
            "description": "Use `upsert` to add user data.",
            "type": "string",
            "enum": [
              "upsert"
            ],
            "example": "upsert"
          },
          "cuid": {
            "allOf": [
              {
                "description": "User identifier value. Max 250 characters.",
                "type": "string",
                "enum": [
                  "demo@email.com",
                  "123456789"
                ]
              },
              {
                "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
              }
            ]
          },
          "cuidtype": {
            "allOf": [
              {
                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                "type": "string"
              },
              {
                "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
              },
              {
                "example": "he"
              }
            ]
          },
          "timestamp": {
            "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
            "type": "string",
            "format": "date-time",
            "example": "2021-07-24T13:44:17+02:00"
          },
          "data": {
            "description": "Add CRM data here. Date values within the CRM Data should be date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "action",
          "cuid",
          "cuidtype",
          "timestamp",
          "data"
        ]
      },
      "UserDataRequestDelete": {
        "title": "Delete Request",
        "type": "object",
        "properties": {
          "action": {
            "description": "Use `delete` to remove data.",
            "type": "string",
            "enum": [
              "delete"
            ],
            "example": "delete"
          },
          "cuid": {
            "allOf": [
              {
                "description": "User identifier value. Max 250 characters.",
                "type": "string",
                "enum": [
                  "demo@email.com",
                  "123456789"
                ]
              },
              {
                "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
              }
            ]
          },
          "cuidtype": {
            "allOf": [
              {
                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                "type": "string"
              },
              {
                "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
              },
              {
                "example": "he"
              }
            ]
          },
          "timestamp": {
            "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
            "type": "string",
            "format": "date-time",
            "example": "2021-07-24T13:44:17+02:00"
          }
        },
        "required": [
          "action",
          "cuid",
          "cuidtype",
          "timestamp"
        ]
      },
      "UserDataActionArray": {
        "description": "Use `array_add` and `array_remove` to edit data in existing arrays.",
        "type": "string",
        "enum": [
          "array_add",
          "array_remove"
        ],
        "example": "array_add"
      },
      "UserDataActionUpsert": {
        "description": "Use `upsert` to add user data.",
        "type": "string",
        "enum": [
          "upsert"
        ],
        "example": "upsert"
      },
      "UserDataActionDelete": {
        "description": "Use `delete` to remove data.",
        "type": "string",
        "enum": [
          "delete"
        ],
        "example": "delete"
      },
      "Timestamp": {
        "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
        "type": "string",
        "format": "date-time",
        "example": "2021-07-24T13:44:17+02:00"
      },
      "UserDataUpsert": {
        "description": "Add CRM data here. Date values within the CRM Data should be date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
        "type": "object",
        "additionalProperties": {}
      },
      "UserDataArrayString": {
        "title": "Data: array of strings",
        "description": "Add CRM data here.",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "UserDataArrayNumber": {
        "title": "Data: array of numbers",
        "description": "Add CRM data here. Insert the integer values corresponding to your predefined dropdown array. [Learn more about mapping numeric values to dropdown arrays](https://support.dynamicyield.com/hc/en-us/articles/4409595248017-Update-Your-User-Data-Feed-by-API#h_01FZ58DYM9WMR66N2P3Z4NKF7R).",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "UserDataUser": {
        "description": "User's identifying details.",
        "type": "object",
        "properties": {
          "cuid": {
            "description": "User identifier value. Max 250 characters.",
            "type": "string",
            "enum": [
              "demo@email.com",
              "123456789"
            ]
          },
          "cuidType": {
            "allOf": [
              {
                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                "type": "string"
              },
              {
                "description": "The type of identifier used to identify the user. The value should be one of the following:<ul><li>`he` - hashed email</li><li>Any custom identifier previously defined</li></ul>"
              }
            ]
          }
        },
        "required": [
          "cuidType",
          "cuid"
        ]
      },
      "ProductFeedRequests": {
        "description": "A list of product feed action requests.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "description": "SKU exactly as it appears in the product feed.",
              "type": "string"
            },
            "action": {
              "description": "Type of action requested. Valid values are:<ul>`update` - Insert a new product or rewrite an entire product’s data<br>`partial` - Update specific fields for a single product<br>`delete` - Delete a product</ul>",
              "type": "string",
              "enum": [
                "update",
                "partial",
                "delete"
              ]
            },
            "body": {
              "description": "Single request body.",
              "type": "object",
              "properties": {
                "data": {
                  "description": "Product data.",
                  "type": "object",
                  "properties": {
                    "sku": {
                      "description": "SKU exactly as it appears in the product feed.",
                      "type": "string"
                    },
                    "group_id": {
                      "description": "Product group ID.",
                      "type": "string",
                      "example": "abc"
                    },
                    "url": {
                      "description": "Product details page URL (must be a valid URL, starting with HTTP/HTTPS).",
                      "type": "string",
                      "example": "http://www.example.com/abc-123"
                    },
                    "name": {
                      "description": "Product name.",
                      "type": "string",
                      "example": "white sneakers"
                    },
                    "price": {
                      "description": "unit.cents format using the section default currency.",
                      "type": "number",
                      "example": 23.99
                    },
                    "in_stock": {
                      "description": "Whether the product is in stock or in outage.",
                      "type": "boolean",
                      "example": true
                    },
                    "image_url": {
                      "description": "Product image URL.",
                      "type": "string",
                      "example": "http://www.example.com/abc-123.png"
                    },
                    "categories": {
                      "description": "Categories the product belongs to.",
                      "type": "string",
                      "example": "shoes|sneakers"
                    },
                    "description": {
                      "description": "Product description.",
                      "type": "string",
                      "example": "The white sneakers that everybody wants"
                    },
                    "publish_time": {
                      "description": "Date & time the product was published (added to feed or edited), using the following format: `yyyy-MM-dd'T'HH:mm:ss`",
                      "type": "string",
                      "example": "2018-02-12T17:05:12"
                    },
                    "keywords": {
                      "description": "A list of keywords describing the product.",
                      "type": "string",
                      "example": "tag1|tag2"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          },
          "required": [
            "id",
            "action"
          ]
        }
      },
      "ProductFeedAction": {
        "description": "Type of action requested. Valid values are:<ul>`update` - Insert a new product or rewrite an entire product’s data<br>`partial` - Update specific fields for a single product<br>`delete` - Delete a product</ul>",
        "type": "string",
        "enum": [
          "update",
          "partial",
          "delete"
        ]
      },
      "ProductFeedBody": {
        "description": "Single request body.",
        "type": "object",
        "properties": {
          "data": {
            "description": "Product data.",
            "type": "object",
            "properties": {
              "sku": {
                "description": "SKU exactly as it appears in the product feed.",
                "type": "string"
              },
              "group_id": {
                "description": "Product group ID.",
                "type": "string",
                "example": "abc"
              },
              "url": {
                "description": "Product details page URL (must be a valid URL, starting with HTTP/HTTPS).",
                "type": "string",
                "example": "http://www.example.com/abc-123"
              },
              "name": {
                "description": "Product name.",
                "type": "string",
                "example": "white sneakers"
              },
              "price": {
                "description": "unit.cents format using the section default currency.",
                "type": "number",
                "example": 23.99
              },
              "in_stock": {
                "description": "Whether the product is in stock or in outage.",
                "type": "boolean",
                "example": true
              },
              "image_url": {
                "description": "Product image URL.",
                "type": "string",
                "example": "http://www.example.com/abc-123.png"
              },
              "categories": {
                "description": "Categories the product belongs to.",
                "type": "string",
                "example": "shoes|sneakers"
              },
              "description": {
                "description": "Product description.",
                "type": "string",
                "example": "The white sneakers that everybody wants"
              },
              "publish_time": {
                "description": "Date & time the product was published (added to feed or edited), using the following format: `yyyy-MM-dd'T'HH:mm:ss`",
                "type": "string",
                "example": "2018-02-12T17:05:12"
              },
              "keywords": {
                "description": "A list of keywords describing the product.",
                "type": "string",
                "example": "tag1|tag2"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "ProductFeedData": {
        "description": "Product data.",
        "type": "object",
        "properties": {
          "sku": {
            "description": "SKU exactly as it appears in the product feed.",
            "type": "string"
          },
          "group_id": {
            "description": "Product group ID.",
            "type": "string",
            "example": "abc"
          },
          "url": {
            "description": "Product details page URL (must be a valid URL, starting with HTTP/HTTPS).",
            "type": "string",
            "example": "http://www.example.com/abc-123"
          },
          "name": {
            "description": "Product name.",
            "type": "string",
            "example": "white sneakers"
          },
          "price": {
            "description": "unit.cents format using the section default currency.",
            "type": "number",
            "example": 23.99
          },
          "in_stock": {
            "description": "Whether the product is in stock or in outage.",
            "type": "boolean",
            "example": true
          },
          "image_url": {
            "description": "Product image URL.",
            "type": "string",
            "example": "http://www.example.com/abc-123.png"
          },
          "categories": {
            "description": "Categories the product belongs to.",
            "type": "string",
            "example": "shoes|sneakers"
          },
          "description": {
            "description": "Product description.",
            "type": "string",
            "example": "The white sneakers that everybody wants"
          },
          "publish_time": {
            "description": "Date & time the product was published (added to feed or edited), using the following format: `yyyy-MM-dd'T'HH:mm:ss`",
            "type": "string",
            "example": "2018-02-12T17:05:12"
          },
          "keywords": {
            "description": "A list of keywords describing the product.",
            "type": "string",
            "example": "tag1|tag2"
          }
        },
        "additionalProperties": true
      }
    },
    "parameters": {
      "ProductFeedId": {
        "name": "feedId",
        "description": "The ID of the feed.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "85915"
      },
      "ProductFeedTransactionId": {
        "name": "transactionId",
        "description": "The ID of the transaction received from an API call.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "MDcyNWM0MTEtYWZlZS00MjdkLWExYmYtMDlhMWIwNGFjMzg4LWZpZC0yMTYxNi10cy0xNTg2NjgxOTE0MDYwLXQtcGFydGlhbA"
      },
      "ProductFeedItemId": {
        "name": "itemId",
        "description": "The ID of the item.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "abc-123"
      },
      "BranchFeedId": {
        "name": "id",
        "description": "The branch ID.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "4012"
      },
      "UserDataFeedKey": {
        "name": "feedKey",
        "description": "The data feed key. To get the key of an existing data feed, go to the data feed in Experience OS, click Edit, and copy the key.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "114f64059571a124de146311f2256f2"
      },
      "UserProfileCuid": {
        "name": "cuid",
        "description": "The user's unique identifier.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "13510582476552222"
      },
      "UserProfileCuidType": {
        "name": "cuidType",
        "description": "Use `he` for hashed email addresses or use your custom identifier type.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "HashedEmail": {
            "value": "he"
          },
          "ExternalIdentifier": {
            "value": "external"
          },
          "CustomIdentifier": {
            "value": "vipclub"
          }
        }
      },
      "UserProfileAffinity": {
        "name": "affinity",
        "description": "Whether to receive affinity data for the user.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "boolean"
        },
        "example": true
      }
    },
    "requestBodies": {
      "ChooseBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "anyOf": [
                {
                  "title": "Choose Request - E-Commerce",
                  "type": "object",
                  "properties": {
                    "user": {
                      "title": "User",
                      "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                      "type": "object",
                      "properties": {
                        "dyid": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "dyid_server": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "active_consent_accepted": {
                          "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Data for the page currently being browsed.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                              "type": "string",
                              "enum": [
                                "HOMEPAGE",
                                "CATEGORY",
                                "PRODUCT",
                                "CART",
                                "OTHER"
                              ],
                              "example": "HOMEPAGE"
                            },
                            "data": {
                              "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "p76311-020"
                              ]
                            },
                            "location": {
                              "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                              "type": "string",
                              "example": "https://shop.biz/nice-shirt-p76311.html"
                            },
                            "referrer": {
                              "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                              "type": "string",
                              "example": "https://google.cz"
                            },
                            "locale": {
                              "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                              "type": "string",
                              "example": "en_US"
                            }
                          },
                          "required": [
                            "type",
                            "location"
                          ]
                        },
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "userAgent": {
                              "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                              "type": "string",
                              "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                            },
                            "type": {
                              "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                              "type": "string",
                              "enum": [
                                "DESKTOP",
                                "SMARTPHONE",
                                "TABLET",
                                "KIOSK"
                              ]
                            },
                            "browser": {
                              "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                              "type": "string",
                              "enum": [
                                "Chrome",
                                "Firefox",
                                "Opera",
                                "Safari",
                                "Other"
                              ],
                              "example": "Firefox"
                            },
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            },
                            "dateTime": {
                              "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                              "type": "string",
                              "example": "2024-01-01T22:30:00.000-05:00"
                            }
                          }
                        },
                        "channel": {
                          "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP"
                          ]
                        },
                        "pageAttributes": {
                          "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          }
                        },
                        "listedItems": {
                          "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "SKU1",
                            "SKU2"
                          ]
                        },
                        "branch": {
                          "description": "The branch where the user experience is taking place.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The branch's unique identifier.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "required": [
                        "page",
                        "device"
                      ]
                    },
                    "selector": {
                      "title": "Selector",
                      "description": "Campaigns to choose variations for.",
                      "type": "object",
                      "properties": {
                        "names": {
                          "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Banner Main",
                            "German Banner",
                            "PDP Recs Tray"
                          ]
                        },
                        "groups": {
                          "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "preview": {
                          "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "ids"
                          ]
                        },
                        "args": {
                          "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                            "type": "object",
                            "properties": {
                              "realtimeRules": {
                                "description": "A list of realtime filtering rules.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Valid values are: `include`, `exclude`.",
                                      "type": "string",
                                      "enum": [
                                        "include",
                                        "exclude"
                                      ]
                                    },
                                    "slots": {
                                      "description": "All or specific slot positions. The first slot is in position 0.",
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    },
                                    "query": {
                                      "description": "The filtering query.",
                                      "type": "object",
                                      "properties": {
                                        "conditions": {
                                          "description": "The realtime rule's query conditions.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "field": {
                                                "description": "Field within the returned results to apply the query for.",
                                                "type": "string",
                                                "example": "categories"
                                              },
                                              "arguments": {
                                                "description": "A list of arguments for a query condition.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "action": {
                                                      "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                                      "type": "string",
                                                      "enum": [
                                                        "IS",
                                                        "IS_NOT",
                                                        "CONTAINS",
                                                        "EQ",
                                                        "GT",
                                                        "GTE",
                                                        "LT",
                                                        "LTE"
                                                      ]
                                                    },
                                                    "value": {
                                                      "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                                      "example": "basketball"
                                                    }
                                                  },
                                                  "required": [
                                                    "action",
                                                    "value"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "field",
                                              "arguments"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "names"
                      ]
                    },
                    "options": {
                      "title": "Options",
                      "description": "Request configuration parameters.",
                      "type": "object",
                      "properties": {
                        "isImplicitPageview": {
                          "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                          "type": "boolean",
                          "default": false
                        },
                        "returnAnalyticsMetadata": {
                          "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                          "type": "boolean",
                          "default": false
                        },
                        "isImplicitImpressionMode": {
                          "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
                          "type": "boolean",
                          "default": true
                        },
                        "isImplicitClientData": {
                          "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                          "type": "boolean",
                          "default": false
                        },
                        "recsProductData": {
                          "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                          "type": "object",
                          "properties": {
                            "fieldFilter": {
                              "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "skusOnly": {
                              "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "context",
                    "selector"
                  ]
                },
                {
                  "allOf": [
                    {
                      "title": "Choose Request - Financial Institutions"
                    },
                    {
                      "title": "Choose Request - E-Commerce",
                      "type": "object",
                      "properties": {
                        "user": {
                          "title": "User",
                          "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                          "type": "object",
                          "properties": {
                            "dyid": {
                              "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                              "type": "string"
                            },
                            "dyid_server": {
                              "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                              "type": "string"
                            },
                            "active_consent_accepted": {
                              "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "session": {
                          "title": "Session",
                          "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                          "type": "object",
                          "properties": {
                            "dy": {
                              "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                              "type": "string"
                            }
                          }
                        },
                        "context": {
                          "title": "Context",
                          "description": "The request's context.",
                          "type": "object",
                          "properties": {
                            "page": {
                              "description": "Data for the page currently being browsed.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                                  "type": "string",
                                  "enum": [
                                    "HOMEPAGE",
                                    "CATEGORY",
                                    "PRODUCT",
                                    "CART",
                                    "OTHER"
                                  ],
                                  "example": "HOMEPAGE"
                                },
                                "data": {
                                  "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "p76311-020"
                                  ]
                                },
                                "location": {
                                  "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                                  "type": "string",
                                  "example": "https://shop.biz/nice-shirt-p76311.html"
                                },
                                "referrer": {
                                  "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                                  "type": "string",
                                  "example": "https://google.cz"
                                },
                                "locale": {
                                  "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                                  "type": "string",
                                  "example": "en_US"
                                }
                              },
                              "required": [
                                "type",
                                "location"
                              ]
                            },
                            "device": {
                              "description": "Data for the served device.",
                              "type": "object",
                              "properties": {
                                "userAgent": {
                                  "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                                  "type": "string",
                                  "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                                },
                                "type": {
                                  "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                                  "type": "string",
                                  "enum": [
                                    "DESKTOP",
                                    "SMARTPHONE",
                                    "TABLET",
                                    "KIOSK"
                                  ]
                                },
                                "browser": {
                                  "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                                  "type": "string",
                                  "enum": [
                                    "Chrome",
                                    "Firefox",
                                    "Opera",
                                    "Safari",
                                    "Other"
                                  ],
                                  "example": "Firefox"
                                },
                                "ip": {
                                  "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                                  "type": "string",
                                  "example": "54.100.200.255"
                                },
                                "dateTime": {
                                  "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                                  "type": "string",
                                  "example": "2024-01-01T22:30:00.000-05:00"
                                }
                              }
                            },
                            "channel": {
                              "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                              "type": "string",
                              "enum": [
                                "WEB",
                                "APP"
                              ]
                            },
                            "pageAttributes": {
                              "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              }
                            },
                            "listedItems": {
                              "description": "List of SKUs to sort on PLP. Use only for Sorting Optimizer campaigns.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "SKU1",
                                "SKU2"
                              ]
                            },
                            "branch": {
                              "description": "The branch where the user experience is taking place.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The branch's unique identifier.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "page",
                            "device"
                          ]
                        },
                        "selector": {
                          "title": "Selector",
                          "description": "Campaigns to choose variations for.",
                          "type": "object",
                          "properties": {
                            "names": {
                              "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Banner Main",
                                "German Banner",
                                "PDP Recs Tray"
                              ]
                            },
                            "groups": {
                              "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "preview": {
                              "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                              "type": "object",
                              "properties": {
                                "ids": {
                                  "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "ids"
                              ]
                            },
                            "args": {
                              "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                              "type": "object",
                              "additionalProperties": {
                                "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                                "type": "object",
                                "properties": {
                                  "realtimeRules": {
                                    "description": "A list of realtime filtering rules.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "description": "Valid values are: `include`, `exclude`.",
                                          "type": "string",
                                          "enum": [
                                            "include",
                                            "exclude"
                                          ]
                                        },
                                        "slots": {
                                          "description": "All or specific slot positions. The first slot is in position 0.",
                                          "type": "array",
                                          "items": {
                                            "type": "integer"
                                          }
                                        },
                                        "query": {
                                          "description": "The filtering query.",
                                          "type": "object",
                                          "properties": {
                                            "conditions": {
                                              "description": "The realtime rule's query conditions.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "field": {
                                                    "description": "Field within the returned results to apply the query for.",
                                                    "type": "string",
                                                    "example": "categories"
                                                  },
                                                  "arguments": {
                                                    "description": "A list of arguments for a query condition.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "action": {
                                                          "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                                          "type": "string",
                                                          "enum": [
                                                            "IS",
                                                            "IS_NOT",
                                                            "CONTAINS",
                                                            "EQ",
                                                            "GT",
                                                            "GTE",
                                                            "LT",
                                                            "LTE"
                                                          ]
                                                        },
                                                        "value": {
                                                          "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                                          "example": "basketball"
                                                        }
                                                      },
                                                      "required": [
                                                        "action",
                                                        "value"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "field",
                                                  "arguments"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "names"
                          ]
                        },
                        "options": {
                          "title": "Options",
                          "description": "Request configuration parameters.",
                          "type": "object",
                          "properties": {
                            "isImplicitPageview": {
                              "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                              "type": "boolean",
                              "default": false
                            },
                            "returnAnalyticsMetadata": {
                              "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                              "type": "boolean",
                              "default": false
                            },
                            "isImplicitImpressionMode": {
                              "description": "Report an impression of the chosen variation. This is set to `true` by default, which means that the user's impression of the variation is reported immediately when the variation is chosen. Pass this as `false` to report the impression explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call.",
                              "type": "boolean",
                              "default": true
                            },
                            "isImplicitClientData": {
                              "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                              "type": "boolean",
                              "default": false
                            },
                            "recsProductData": {
                              "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                              "type": "object",
                              "properties": {
                                "fieldFilter": {
                                  "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "skusOnly": {
                                  "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "user",
                        "session",
                        "context",
                        "selector"
                      ]
                    }
                  ]
                },
                {
                  "title": "Choose Request - Restaurants",
                  "type": "object",
                  "properties": {
                    "user": {
                      "oneOf": [
                        {
                          "title": "User (sharedDevice: true)",
                          "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                          "type": "object",
                          "properties": {
                            "sharedDevice": {
                              "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                              "type": "boolean",
                              "default": true
                            },
                            "cuid": {
                              "description": "User identifier value. Required for identified user flows.",
                              "type": "string"
                            },
                            "cuidType": {
                              "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**<br>Required for identified user flows.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "sharedDevice"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "User (sharedDevice: false)"
                            },
                            {
                              "title": "User",
                              "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                              "type": "object",
                              "properties": {
                                "dyid": {
                                  "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                  "type": "string"
                                },
                                "dyid_server": {
                                  "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                  "type": "string"
                                },
                                "active_consent_accepted": {
                                  "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            },
                            {
                              "properties": {
                                "sharedDevice": {
                                  "description": "Set to `false` for transactions made on personal devices.",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            }
                          ],
                          "required": [
                            "sharedDevice"
                          ]
                        }
                      ]
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Data for the page currently being browsed.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                              "type": "string",
                              "enum": [
                                "HOMEPAGE",
                                "CATEGORY",
                                "PRODUCT",
                                "CART",
                                "OTHER"
                              ],
                              "example": "HOMEPAGE"
                            },
                            "data": {
                              "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "p76311-020"
                              ]
                            },
                            "location": {
                              "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                              "type": "string",
                              "example": "https://shop.biz/nice-shirt-p76311.html"
                            },
                            "referrer": {
                              "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                              "type": "string",
                              "example": "https://google.cz"
                            },
                            "locale": {
                              "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                              "type": "string",
                              "example": "en_US"
                            }
                          },
                          "required": [
                            "type",
                            "location"
                          ]
                        },
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "userAgent": {
                              "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                              "type": "string",
                              "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                            },
                            "type": {
                              "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
                              "type": "string",
                              "enum": [
                                "DESKTOP",
                                "SMARTPHONE",
                                "TABLET",
                                "KIOSK",
                                "ODMB"
                              ]
                            },
                            "browser": {
                              "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                              "type": "string",
                              "enum": [
                                "Chrome",
                                "Firefox",
                                "Opera",
                                "Safari",
                                "Other"
                              ],
                              "example": "Firefox"
                            },
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            },
                            "dateTime": {
                              "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                              "type": "string",
                              "example": "2024-01-01T22:30:00.000-05:00"
                            },
                            "id": {
                              "description": "The identifier of the device in the branch.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "dateTime",
                            "type"
                          ]
                        },
                        "branch": {
                          "description": "Use to recommend only items in stock at the branch the user is browsing.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The ID of the branch the recommendation is for.",
                              "type": "string"
                            },
                            "dayPart": {
                              "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                              "type": "string",
                              "enum": [
                                "BREAKFAST",
                                "LUNCH",
                                "DINNER",
                                "LATENIGHT"
                              ]
                            },
                            "orderFulfillment": {
                              "description": "The fulfillment type of the order the request relates to.",
                              "type": "string",
                              "enum": [
                                "DELIVERY",
                                "PICKUP",
                                "DINEIN",
                                "CURBSIDE"
                              ]
                            }
                          },
                          "required": [
                            "dayPart"
                          ]
                        },
                        "channel": {
                          "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP",
                            "KIOSK",
                            "DRIVE-THRU"
                          ]
                        },
                        "cart": {
                          "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "productId": {
                                "description": "The product ID from the restaurant product catalog.",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "Number of items.",
                                "type": "number"
                              },
                              "itemPrice": {
                                "description": "unit.cents format using the section default currency.",
                                "type": "number",
                                "example": 23.99
                              },
                              "innerProducts": {
                                "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "productId": {
                                      "description": "The product ID from the restaurant product catalog.",
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "description": "Number of items.",
                                      "type": "number"
                                    },
                                    "itemPrice": {
                                      "description": "unit.cents format using the section default currency.",
                                      "type": "number",
                                      "example": 23.99
                                    }
                                  },
                                  "required": [
                                    "productId"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "productId"
                            ]
                          }
                        },
                        "pageAttributes": {
                          "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "branch",
                        "channel"
                      ]
                    },
                    "selector": {
                      "title": "Selector",
                      "description": "Campaigns to choose variations for.",
                      "type": "object",
                      "properties": {
                        "names": {
                          "description": "The list of selectors that are eligible for this page. A selector represents a technical name for a campaign. Learn more about [using selectors in your campaigns](https://dy.dev/docs/choose#recommended-use).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Banner Main",
                            "German Banner",
                            "PDP Recs Tray"
                          ]
                        },
                        "groups": {
                          "description": "Call a group of selectors instead of listing each selector individually. Learn more about working with [selector groups](https://dy.dev/docs/selector-groups).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "preview": {
                          "description": "Campaigns to generate previews for. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "Array of preview tokens, as provided in the `dyApiPreview` URL parameter. [Learn more about enabling preview mode](https://dy.dev/docs/preview-api-web#enabling-preview-mode).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "ids"
                          ]
                        },
                        "args": {
                          "description": "Real-time filters for recommendation results, based on data obtained within the session. Learn more about working with [real-time filters](https://dy.dev/docs/return-real-time-filter-data).",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Real-time filter for a single selector. The object key should corresponds to a selector name defined under `selector.names`.",
                            "type": "object",
                            "properties": {
                              "realtimeRules": {
                                "description": "A list of realtime filtering rules.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Valid values are: `include`, `exclude`.",
                                      "type": "string",
                                      "enum": [
                                        "include",
                                        "exclude"
                                      ]
                                    },
                                    "slots": {
                                      "description": "All or specific slot positions. The first slot is in position 0.",
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    },
                                    "query": {
                                      "description": "The filtering query.",
                                      "type": "object",
                                      "properties": {
                                        "conditions": {
                                          "description": "The realtime rule's query conditions.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "field": {
                                                "description": "Field within the returned results to apply the query for.",
                                                "type": "string",
                                                "example": "categories"
                                              },
                                              "arguments": {
                                                "description": "A list of arguments for a query condition.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "action": {
                                                      "description": "Condition types for filtering recommendations. Valid values are:<ul>`IS` - string or boolean<br>`IS_NOT` - string<br>`CONTAINS` - A filtering rule may contain up to 10 queries of this type<br>`EQ`, `GT`, `GTE`, `LT`, `LTE` - number only",
                                                      "type": "string",
                                                      "enum": [
                                                        "IS",
                                                        "IS_NOT",
                                                        "CONTAINS",
                                                        "EQ",
                                                        "GT",
                                                        "GTE",
                                                        "LT",
                                                        "LTE"
                                                      ]
                                                    },
                                                    "value": {
                                                      "description": "Parameter for filter value by condition. Regular expressions are not supported for real-time filters (can and should be added as additional conditions to the filter).",
                                                      "example": "basketball"
                                                    }
                                                  },
                                                  "required": [
                                                    "action",
                                                    "value"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "field",
                                              "arguments"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "names"
                      ]
                    },
                    "options": {
                      "title": "Options",
                      "description": "Request configuration parameters.",
                      "type": "object",
                      "properties": {
                        "isImplicitPageview": {
                          "description": "Determine whether to report a new pageview with the given context. Default is `false`. Set to `true` to report a new pageview with the given context. Keep as `false` if the Dynamic Yield script is implemented on the page. It reports the new pageview from the browser.",
                          "type": "boolean",
                          "default": false
                        },
                        "returnAnalyticsMetadata": {
                          "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                          "type": "boolean",
                          "default": false
                        },
                        "isImplicitImpressionMode": {
                          "description": "Report an impression of the chosen variation. For Restaurants, this is set to `false` by default, which means that impressions should be reported explicitly in an [Engagement](https://dy.dev/docs/engagement#types-of-engagement) call. Pass this as `true` in case the user's impression of the variation should be reported immediately when the variation is chosen.",
                          "type": "boolean",
                          "default": false
                        },
                        "isImplicitClientData": {
                          "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                          "type": "boolean",
                          "default": false
                        },
                        "recsProductData": {
                          "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                          "type": "object",
                          "properties": {
                            "fieldFilter": {
                              "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "skusOnly": {
                              "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "context",
                    "selector"
                  ]
                }
              ]
            },
            "examples": {
              "ChooseRequestExample": {
                "value": {
                  "user": {
                    "dyid": "-4350463893986789401",
                    "dyid_server": "-4350463893986789401"
                  },
                  "session": {
                    "dy": "ohyr6v42l9zd4bpinnvp7urjjx9lrssw"
                  },
                  "selector": {
                    "names": [
                      "PDP Top Banner",
                      "PDP Recs"
                    ]
                  },
                  "context": {
                    "page": {
                      "type": "PRODUCT",
                      "data": [
                        "7383723-010"
                      ],
                      "location": "<https://sugoi-ne.com/men-pants/p7383723-010>",
                      "referrer": "<https://sugoi-ne.com/men-pants>",
                      "locale": "en_US"
                    },
                    "device": {
                      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
                      "ip": "54.100.200.255"
                    },
                    "pageAttributes": {
                      "customPageAttribute": "someValue"
                    }
                  },
                  "options": {
                    "isImplicitPageview": false
                  }
                }
              }
            }
          }
        }
      },
      "SearchBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "title": "Search Request - E-Commerce",
              "type": "object",
              "properties": {
                "user": {
                  "title": "User",
                  "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                  "type": "object",
                  "properties": {
                    "dyid": {
                      "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                      "type": "string"
                    },
                    "dyid_server": {
                      "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                      "type": "string"
                    },
                    "active_consent_accepted": {
                      "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "session": {
                  "title": "Session",
                  "description": "Session ID. A Dynamic Yield-generated identifier is used. For new sessions, send this object empty.",
                  "type": "object",
                  "properties": {
                    "dy": {
                      "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                      "type": "string"
                    }
                  }
                },
                "query": {
                  "oneOf": [
                    {
                      "title": "Semantic Search Query",
                      "description": "The user query for which to conduct the search.",
                      "type": "object",
                      "properties": {
                        "text": {
                          "description": "The user's input text that specifies what should be searched.",
                          "type": "string"
                        },
                        "filters": {
                          "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "title": "Numeric Filter",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "description": "Column name, as reported in the product feed.",
                                    "type": "string"
                                  },
                                  "min": {
                                    "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                                    "type": "number"
                                  },
                                  "max": {
                                    "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "field"
                                ]
                              },
                              {
                                "title": "String Filter",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "description": "Column name, as reported in the product feed.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "field"
                                ]
                              }
                            ]
                          }
                        },
                        "pagination": {
                          "description": "Pagination parameters for the query result.",
                          "type": "object",
                          "properties": {
                            "numItems": {
                              "description": "The number of items to be returned in the query result.",
                              "type": "number"
                            },
                            "offset": {
                              "description": "The starting offset.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "numItems",
                            "offset"
                          ]
                        }
                      },
                      "required": [
                        "text",
                        "pagination"
                      ]
                    },
                    {
                      "title": "Visual Search Query",
                      "description": "The user query for which to conduct the search.",
                      "type": "object",
                      "properties": {
                        "imageBase64": {
                          "description": "A base64 representation of the input image.",
                          "type": "string"
                        },
                        "filters": {
                          "description": "Parameters to filter the search results. When multiple filters are applied, only records matching all specified criteria (`AND` logic) are returned.",
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "title": "Numeric Filter",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "description": "Column name, as reported in the product feed.",
                                    "type": "string"
                                  },
                                  "min": {
                                    "description": "Minimum value (e.g from `price`), for product feed numeric and date values.",
                                    "type": "number"
                                  },
                                  "max": {
                                    "description": "Maximum value (e.g from `price`), for product feed numeric and date values.",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "field"
                                ]
                              },
                              {
                                "title": "String Filter",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "description": "Column name, as reported in the product feed.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "Possible values for the filter column. When multiple values are specified, results matching any of the values (`OR` logic) will be returned.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "field"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "imageBase64"
                      ]
                    },
                    {
                      "title": "Shopping Muse Query",
                      "description": "The user prompt and conversation ID for triggering a contextual Shopping Muse response.",
                      "type": "object",
                      "properties": {
                        "text": {
                          "description": "The user's prompt that specifies a search request, question or an answer.",
                          "type": "string"
                        },
                        "chatId": {
                          "description": "A unique identifier used to maintain conversational context. Include `chatId` when sending follow-up requests related to the response that contains it.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "text"
                      ]
                    }
                  ]
                },
                "context": {
                  "title": "Context",
                  "description": "The request's context.",
                  "type": "object",
                  "properties": {
                    "page": {
                      "description": "Data for the page currently being browsed.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                          "type": "string",
                          "enum": [
                            "HOMEPAGE",
                            "CATEGORY",
                            "PRODUCT",
                            "CART",
                            "OTHER"
                          ],
                          "example": "HOMEPAGE"
                        },
                        "data": {
                          "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "p76311-020"
                          ]
                        },
                        "location": {
                          "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                          "type": "string",
                          "example": "https://shop.biz/nice-shirt-p76311.html"
                        },
                        "referrer": {
                          "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                          "type": "string",
                          "example": "https://google.cz"
                        },
                        "locale": {
                          "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                          "type": "string",
                          "example": "en_US"
                        }
                      },
                      "required": [
                        "type",
                        "location"
                      ]
                    },
                    "device": {
                      "description": "Data for the served device.",
                      "type": "object",
                      "properties": {
                        "userAgent": {
                          "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                          "type": "string",
                          "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                        },
                        "type": {
                          "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                          "type": "string",
                          "enum": [
                            "DESKTOP",
                            "SMARTPHONE",
                            "TABLET",
                            "KIOSK"
                          ]
                        },
                        "browser": {
                          "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                          "type": "string",
                          "enum": [
                            "Chrome",
                            "Firefox",
                            "Opera",
                            "Safari",
                            "Other"
                          ],
                          "example": "Firefox"
                        },
                        "ip": {
                          "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                          "type": "string",
                          "example": "54.100.200.255"
                        },
                        "dateTime": {
                          "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                          "type": "string",
                          "example": "2024-01-01T22:30:00.000-05:00"
                        }
                      }
                    },
                    "channel": {
                      "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                      "type": "string",
                      "enum": [
                        "WEB",
                        "APP"
                      ]
                    },
                    "pageAttributes": {
                      "description": "Pass key-value pairs you want to use for targeting in this campaign. **The value must exactly match the value in the campaign targeting condition, and is case sensitive.** This data is not stored and cannot be used for creating audiences. Values can be strings or numbers.",
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      }
                    },
                    "branch": {
                      "description": "The branch where the user experience is taking place.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The branch's unique identifier.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "page",
                    "device"
                  ]
                },
                "selector": {
                  "title": "Selector",
                  "description": "Campaigns to choose variations for.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The selector name for the applicable search campaign. Must be one of the following:<ul><li>`Semantic Search`</li><li>`Visual Search`</li><li>`Shopping Muse`</li></ul>",
                      "type": "string",
                      "enum": [
                        "Semantic Search",
                        "Visual Search",
                        "Shopping Muse"
                      ]
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "options": {
                  "title": "Options",
                  "description": "Request configuration parameters.",
                  "type": "object",
                  "properties": {
                    "returnAnalyticsMetadata": {
                      "description": "Set to `true` to return additional metadata (display names & IDs for all entities) for reporting to analytics tools.",
                      "type": "boolean",
                      "default": false
                    },
                    "isImplicitClientData": {
                      "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                      "type": "boolean",
                      "default": false
                    },
                    "recsProductData": {
                      "description": "You can use *either* the `fieldFilter` param to ask for specific attributes from the feed, *or* the `skusOnly` param to to fetch only the SKUs.",
                      "type": "object",
                      "properties": {
                        "fieldFilter": {
                          "description": "Specify the fields you need in the recommendation campaign response by using the `fieldFilter` parameter. Simply send an array of strings of the relevant fields, and only those fields and values are sent back.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "skusOnly": {
                          "description": "To reduce the size of the response, you can limit it so that it only includes the SKUs.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user",
                "session",
                "query",
                "context",
                "selector"
              ]
            },
            "examples": {
              "SearchRequestExample": {
                "value": {
                  "query": {
                    "imageBase64": "bGlnaHQgd29yay4=",
                    "text": "dress",
                    "filters": [
                      {
                        "field": "category",
                        "values": [
                          "dresses",
                          "tops"
                        ]
                      },
                      {
                        "field": "price",
                        "min": 100,
                        "max": 200
                      }
                    ],
                    "pagination": {
                      "numItems": 10,
                      "offset": 0
                    },
                    "enableSpellCheck": true
                  },
                  "user": {
                    "active_consent_accepted": true,
                    "dyid": "122113",
                    "dyid_server": "3213213"
                  },
                  "session": {
                    "dy": "3123123"
                  },
                  "context": {
                    "page": {
                      "type": "HOMEPAGE",
                      "location": "https://shop.biz/nice-shirt-p76311.html",
                      "referrer": "https://google.cz",
                      "locale": "en_US"
                    }
                  },
                  "selector": {
                    "name": "Visual Search"
                  },
                  "options": {
                    "returnAnalyticsMetadata": false,
                    "isImplicitClientData": false
                  }
                }
              }
            }
          }
        }
      },
      "PageviewBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "anyOf": [
                {
                  "title": "Pageview Request - E-Commerce",
                  "type": "object",
                  "properties": {
                    "user": {
                      "title": "User",
                      "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                      "type": "object",
                      "properties": {
                        "dyid": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "dyid_server": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "active_consent_accepted": {
                          "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Data for the page currently being browsed.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                              "type": "string",
                              "enum": [
                                "HOMEPAGE",
                                "CATEGORY",
                                "PRODUCT",
                                "CART",
                                "OTHER"
                              ],
                              "example": "HOMEPAGE"
                            },
                            "data": {
                              "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "p76311-020"
                              ]
                            },
                            "location": {
                              "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                              "type": "string",
                              "example": "https://shop.biz/nice-shirt-p76311.html"
                            },
                            "referrer": {
                              "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                              "type": "string",
                              "example": "https://google.cz"
                            },
                            "locale": {
                              "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                              "type": "string",
                              "example": "en_US"
                            }
                          },
                          "required": [
                            "type",
                            "location"
                          ]
                        },
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "userAgent": {
                              "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                              "type": "string",
                              "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                            },
                            "type": {
                              "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                              "type": "string",
                              "enum": [
                                "DESKTOP",
                                "SMARTPHONE",
                                "TABLET",
                                "KIOSK"
                              ]
                            },
                            "browser": {
                              "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                              "type": "string",
                              "enum": [
                                "Chrome",
                                "Firefox",
                                "Opera",
                                "Safari",
                                "Other"
                              ],
                              "example": "Firefox"
                            },
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            }
                          }
                        },
                        "channel": {
                          "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP"
                          ]
                        }
                      },
                      "required": [
                        "page",
                        "device"
                      ]
                    },
                    "options": {
                      "title": "Options",
                      "description": "Request configuration parameters.",
                      "type": "object",
                      "properties": {
                        "isImplicitClientData": {
                          "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "context"
                  ]
                },
                {
                  "allOf": [
                    {
                      "title": "Pageview Request - Finanacial Institutions"
                    },
                    {
                      "title": "Pageview Request - E-Commerce",
                      "type": "object",
                      "properties": {
                        "user": {
                          "title": "User",
                          "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                          "type": "object",
                          "properties": {
                            "dyid": {
                              "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                              "type": "string"
                            },
                            "dyid_server": {
                              "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                              "type": "string"
                            },
                            "active_consent_accepted": {
                              "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "session": {
                          "title": "Session",
                          "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                          "type": "object",
                          "properties": {
                            "dy": {
                              "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                              "type": "string"
                            }
                          }
                        },
                        "context": {
                          "title": "Context",
                          "description": "The request's context.",
                          "type": "object",
                          "properties": {
                            "page": {
                              "description": "Data for the page currently being browsed.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "Page type. Must be upper case. Valid values are:<br>`HOMEPAGE`, `CATEGORY`, `PRODUCT`, `CART`, and `OTHER`.",
                                  "type": "string",
                                  "enum": [
                                    "HOMEPAGE",
                                    "CATEGORY",
                                    "PRODUCT",
                                    "CART",
                                    "OTHER"
                                  ],
                                  "example": "HOMEPAGE"
                                },
                                "data": {
                                  "description": "Additional data for non-homepage pages: The SKU for a `PRODUCT` page, the category for a `CATEGORY` page, SKUs for the `CART` page, and the page ID in `OTHER`. Learn more about [page context data](https://dy.dev/docs/page-context#localization-in-page-context).",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "p76311-020"
                                  ]
                                },
                                "location": {
                                  "description": "The current location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the current page/screen.",
                                  "type": "string",
                                  "example": "https://shop.biz/nice-shirt-p76311.html"
                                },
                                "referrer": {
                                  "description": "The previous location. URL (for web), location (for SPA), or screen name (for mobile apps). Enables targeting the previous page/screen.",
                                  "type": "string",
                                  "example": "https://google.cz"
                                },
                                "locale": {
                                  "description": "Page locale code, such as `en_US`. Learn more about [using country codes for locale](https://dy.dev/docs/page-context#localization-in-page-context).",
                                  "type": "string",
                                  "example": "en_US"
                                }
                              },
                              "required": [
                                "type",
                                "location"
                              ]
                            },
                            "device": {
                              "description": "Data for the served device.",
                              "type": "object",
                              "properties": {
                                "userAgent": {
                                  "description": "For web clients, the browser user-agent string. If not passed, the API gateway checks for the header in the HTTPS request.",
                                  "type": "string",
                                  "example": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
                                },
                                "type": {
                                  "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`",
                                  "type": "string",
                                  "enum": [
                                    "DESKTOP",
                                    "SMARTPHONE",
                                    "TABLET",
                                    "KIOSK"
                                  ]
                                },
                                "browser": {
                                  "description": "Use when the user agent isn't available. Valid values are:<br>`Chrome`, `Firefox`, `Opera`, `Safari`, `Other`",
                                  "type": "string",
                                  "enum": [
                                    "Chrome",
                                    "Firefox",
                                    "Opera",
                                    "Safari",
                                    "Other"
                                  ],
                                  "example": "Firefox"
                                },
                                "ip": {
                                  "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                                  "type": "string",
                                  "example": "54.100.200.255"
                                }
                              }
                            },
                            "channel": {
                              "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                              "type": "string",
                              "enum": [
                                "WEB",
                                "APP"
                              ]
                            }
                          },
                          "required": [
                            "page",
                            "device"
                          ]
                        },
                        "options": {
                          "title": "Options",
                          "description": "Request configuration parameters.",
                          "type": "object",
                          "properties": {
                            "isImplicitClientData": {
                              "description": "For APIs called from the client-side only. When set to `true`, this acts as a fallback if the IP address or user agent isn't sent explicitly. Takes the values from the request header.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      },
                      "required": [
                        "user",
                        "session",
                        "context"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "EngagementBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "anyOf": [
                {
                  "title": "Engagement Request - E-Commerce",
                  "type": "object",
                  "properties": {
                    "user": {
                      "title": "User",
                      "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                      "type": "object",
                      "properties": {
                        "dyid": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "dyid_server": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "active_consent_accepted": {
                          "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            }
                          }
                        },
                        "channel": {
                          "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP"
                          ]
                        }
                      }
                    },
                    "engagements": {
                      "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "Engagement (type: IMP, CLICK)",
                            "description": "A user engagement with a DY campaign.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Pass the value `CLICK` or `IMP` (impressions) for API custom code campaigns.",
                                "type": "string",
                                "enum": [
                                  "CLICK",
                                  "IMP"
                                ]
                              },
                              "decisionId": {
                                "description": "**Required for reporting `CLICK` or `IMP`:** The unique Decision ID as returned from the `/choose` endpoint.",
                                "type": "string"
                              },
                              "variations": {
                                "description": "Use to report explicit impressions over custom code campaigns that return multiple variations on each decision (for example, a slider). Values are variation IDs.",
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              }
                            },
                            "required": [
                              "type",
                              "decisionId",
                              "variations"
                            ]
                          },
                          {
                            "title": "Engagement (type: SLOT_CLICK)",
                            "description": "A user engagement with a DY campaign.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Pass the value `SLOT_CLICK` for API recommendation campaigns.",
                                "type": "string",
                                "enum": [
                                  "SLOT_CLICK"
                                ]
                              },
                              "slotId": {
                                "description": "Use to report a click on an API recommendation or a search result. Pass the Slot ID for the clicked product as returned in the `/choose` response. Do not use for for API custom code campaigns.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "slotId"
                            ]
                          },
                          {
                            "title": "Engagement (type: PN_CLICK)",
                            "description": "A user engagement with a DY campaign.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Pass the value `PN_CLICK` for Reconnect push notification campaigns.",
                                "type": "string",
                                "enum": [
                                  "PN_CLICK"
                                ]
                              },
                              "trackingData": {
                                "description": "Enables Dynamic Yield to track actions attributable to the push notification. Must be extracted from messaging provider. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/13472246286749-Create-a-Reconnect-Campaign#tracklink).",
                                "type": "object",
                                "properties": {
                                  "rri": {
                                    "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                    "type": "string",
                                    "example": "987001424"
                                  },
                                  "sectionID": {
                                    "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                    "type": "string",
                                    "example": "9878785"
                                  },
                                  "reqTs": {
                                    "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                    "type": "string",
                                    "example": "1652622484055"
                                  },
                                  "userID": {
                                    "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                    "type": "string",
                                    "example": "4656722918296846673"
                                  },
                                  "version": {
                                    "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                    "type": "string",
                                    "example": "2"
                                  },
                                  "events": {
                                    "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "ver": {
                                          "type": "string",
                                          "example": "101482916"
                                        },
                                        "expVisitId": {
                                          "type": "string",
                                          "example": "4032971100745578591"
                                        },
                                        "smech": {
                                          "type": "string",
                                          "example": ""
                                        },
                                        "vars": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "example": "101098971"
                                          }
                                        },
                                        "exp": {
                                          "type": "string",
                                          "example": "1296028"
                                        },
                                        "mech": {
                                          "type": "string",
                                          "example": "1"
                                        }
                                      }
                                    }
                                  }
                                },
                                "example": {
                                  "rri": "987001424",
                                  "sectionID": "9878785",
                                  "reqTs": "1652622484055",
                                  "userID": "4656722918296846673",
                                  "version": "2",
                                  "events": [
                                    {
                                      "ver": "101482916",
                                      "expVisitId": "4032971100745578591",
                                      "smech": "",
                                      "vars": "[101098971]",
                                      "exp": "1296028",
                                      "mech": "1"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "trackingData"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "engagements"
                  ]
                },
                {
                  "allOf": [
                    {
                      "title": "Engagement Request - Financial Institutions"
                    },
                    {
                      "title": "Engagement Request - E-Commerce",
                      "type": "object",
                      "properties": {
                        "user": {
                          "title": "User",
                          "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                          "type": "object",
                          "properties": {
                            "dyid": {
                              "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                              "type": "string"
                            },
                            "dyid_server": {
                              "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                              "type": "string"
                            },
                            "active_consent_accepted": {
                              "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "session": {
                          "title": "Session",
                          "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                          "type": "object",
                          "properties": {
                            "dy": {
                              "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                              "type": "string"
                            }
                          }
                        },
                        "context": {
                          "title": "Context",
                          "description": "The request's context.",
                          "type": "object",
                          "properties": {
                            "device": {
                              "description": "Data for the served device.",
                              "type": "object",
                              "properties": {
                                "ip": {
                                  "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                                  "type": "string",
                                  "example": "54.100.200.255"
                                }
                              }
                            },
                            "channel": {
                              "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                              "type": "string",
                              "enum": [
                                "WEB",
                                "APP"
                              ]
                            }
                          }
                        },
                        "engagements": {
                          "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "title": "Engagement (type: IMP, CLICK)",
                                "description": "A user engagement with a DY campaign.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Pass the value `CLICK` or `IMP` (impressions) for API custom code campaigns.",
                                    "type": "string",
                                    "enum": [
                                      "CLICK",
                                      "IMP"
                                    ]
                                  },
                                  "decisionId": {
                                    "description": "**Required for reporting `CLICK` or `IMP`:** The unique Decision ID as returned from the `/choose` endpoint.",
                                    "type": "string"
                                  },
                                  "variations": {
                                    "description": "Use to report explicit impressions over custom code campaigns that return multiple variations on each decision (for example, a slider). Values are variation IDs.",
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "decisionId",
                                  "variations"
                                ]
                              },
                              {
                                "title": "Engagement (type: SLOT_CLICK)",
                                "description": "A user engagement with a DY campaign.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Pass the value `SLOT_CLICK` for API recommendation campaigns.",
                                    "type": "string",
                                    "enum": [
                                      "SLOT_CLICK"
                                    ]
                                  },
                                  "slotId": {
                                    "description": "Use to report a click on an API recommendation or a search result. Pass the Slot ID for the clicked product as returned in the `/choose` response. Do not use for for API custom code campaigns.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "slotId"
                                ]
                              },
                              {
                                "title": "Engagement (type: PN_CLICK)",
                                "description": "A user engagement with a DY campaign.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Pass the value `PN_CLICK` for Reconnect push notification campaigns.",
                                    "type": "string",
                                    "enum": [
                                      "PN_CLICK"
                                    ]
                                  },
                                  "trackingData": {
                                    "description": "Enables Dynamic Yield to track actions attributable to the push notification. Must be extracted from messaging provider. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/13472246286749-Create-a-Reconnect-Campaign#tracklink).",
                                    "type": "object",
                                    "properties": {
                                      "rri": {
                                        "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                        "type": "string",
                                        "example": "987001424"
                                      },
                                      "sectionID": {
                                        "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                        "type": "string",
                                        "example": "9878785"
                                      },
                                      "reqTs": {
                                        "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                        "type": "string",
                                        "example": "1652622484055"
                                      },
                                      "userID": {
                                        "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                        "type": "string",
                                        "example": "4656722918296846673"
                                      },
                                      "version": {
                                        "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                        "type": "string",
                                        "example": "2"
                                      },
                                      "events": {
                                        "description": "One of the `trackingData` object's attributes returned from the push notification's payload. [Learn more](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect#h_01HHHJW6R5AZ7MZ663DE0KKT7J).",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "ver": {
                                              "type": "string",
                                              "example": "101482916"
                                            },
                                            "expVisitId": {
                                              "type": "string",
                                              "example": "4032971100745578591"
                                            },
                                            "smech": {
                                              "type": "string",
                                              "example": ""
                                            },
                                            "vars": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "example": "101098971"
                                              }
                                            },
                                            "exp": {
                                              "type": "string",
                                              "example": "1296028"
                                            },
                                            "mech": {
                                              "type": "string",
                                              "example": "1"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "example": {
                                      "rri": "987001424",
                                      "sectionID": "9878785",
                                      "reqTs": "1652622484055",
                                      "userID": "4656722918296846673",
                                      "version": "2",
                                      "events": [
                                        {
                                          "ver": "101482916",
                                          "expVisitId": "4032971100745578591",
                                          "smech": "",
                                          "vars": "[101098971]",
                                          "exp": "1296028",
                                          "mech": "1"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "trackingData"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "user",
                        "session",
                        "engagements"
                      ]
                    }
                  ]
                },
                {
                  "title": "Engagement Request - Restaurants",
                  "type": "object",
                  "properties": {
                    "user": {
                      "oneOf": [
                        {
                          "title": "User (sharedDevice: true)",
                          "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                          "type": "object",
                          "properties": {
                            "sharedDevice": {
                              "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                              "type": "boolean",
                              "default": true
                            }
                          },
                          "required": [
                            "sharedDevice"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "User (sharedDevice: false)"
                            },
                            {
                              "title": "User",
                              "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                              "type": "object",
                              "properties": {
                                "dyid": {
                                  "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                  "type": "string"
                                },
                                "dyid_server": {
                                  "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                  "type": "string"
                                },
                                "active_consent_accepted": {
                                  "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            },
                            {
                              "properties": {
                                "sharedDevice": {
                                  "description": "Set to `false` for transactions made on personal devices.",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            }
                          ],
                          "required": [
                            "sharedDevice"
                          ]
                        }
                      ]
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            }
                          }
                        },
                        "branch": {
                          "description": "Use to recommend only items in stock at the branch the user is browsing.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The ID of the branch the recommendation is for.",
                              "type": "string"
                            },
                            "dayPart": {
                              "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                              "type": "string",
                              "enum": [
                                "BREAKFAST",
                                "LUNCH",
                                "DINNER",
                                "LATENIGHT"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "dayPart"
                          ]
                        },
                        "channel": {
                          "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP",
                            "KIOSK",
                            "DRIVE-THRU"
                          ]
                        }
                      },
                      "required": [
                        "branch",
                        "channel"
                      ]
                    },
                    "engagements": {
                      "description": "Report the [type of engagement](https://dy.dev/docs/engagement#types-of-engagement) with a reference to the content or recommendation that the user engaged with.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "Engagement (type: SLOT_CLICK)",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Pass `SLOT_CLICK`.",
                                "type": "string",
                                "enum": [
                                  "SLOT_CLICK"
                                ]
                              },
                              "slotId": {
                                "description": "Use to report a click on an API recommendation. Pass the Slot ID for the clicked product as returned in the `/choose` response.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "slotId"
                            ]
                          },
                          {
                            "title": "Engagement (type: SLOT_IMP)",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Pass `SLOT_IMP`.",
                                "type": "string",
                                "enum": [
                                  "SLOT_IMP"
                                ]
                              },
                              "slotIds": {
                                "description": "Use to report impressions of an API recommendation. Pass the Slot IDs for the products as returned in the `/choose` response.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "type",
                              "slotIds"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "engagements"
                  ]
                }
              ]
            }
          }
        }
      },
      "EventBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "anyOf": [
                {
                  "title": "Event Request - E-Commerce",
                  "type": "object",
                  "properties": {
                    "user": {
                      "title": "User",
                      "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                      "type": "object",
                      "properties": {
                        "dyid": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "dyid_server": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "active_consent_accepted": {
                          "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            }
                          }
                        },
                        "channel": {
                          "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP"
                          ]
                        }
                      }
                    },
                    "events": {
                      "description": "One or more events to report.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "Add to Cart",
                            "description": "Reports that the user added a product to the cart.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `add-to-cart-v1`.",
                                        "type": "string",
                                        "pattern": "add-to-cart-v1",
                                        "default": "add-to-cart-v1"
                                      },
                                      "value": {
                                        "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                        "type": "number",
                                        "example": 19.9
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "allOf": [
                                          {
                                            "description": "Number of items.",
                                            "type": "number",
                                            "example": 1
                                          },
                                          {
                                            "description": "The number of items with this SKU added to the cart in the scope of this event."
                                          }
                                        ]
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "The updated contents of the cart, including the items added to trigger this event. Each object is a unique item/SKU.<br>This object is required for Reconnect campaigns, as well as to enable the recommendations engine to filter out products that are already in the cart. [Learn more about this filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178-Recommendation-Filters#exclude)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "productId",
                                      "quantity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Add To Cart",
                              "properties": {
                                "dyType": "add-to-cart-v1",
                                "value": 118.26,
                                "currency": "any supported currency code",
                                "productId": "item-34454",
                                "quantity": 2,
                                "cart": [
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 12.34
                                  },
                                  {
                                    "productId": "item-34454",
                                    "quantity": 2,
                                    "itemPrice": 59.13
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Purchase",
                            "description": "Reports that the user completed a purchase.<br>**REQUIRED FOR E-COMMERCE SECTIONS**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `purchase-v1`.",
                                        "type": "string",
                                        "pattern": "purchase-v1",
                                        "default": "purchase-v1"
                                      },
                                      "value": {
                                        "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                        "type": "number",
                                        "example": 98.8
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "uniqueTransactionId": {
                                        "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                                        "type": "string",
                                        "example": "38373991919193830033"
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "cart"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Purchase",
                              "properties": {
                                "uniqueTransactionId": 123456,
                                "dyType": "purchase-v1",
                                "value": 90.55,
                                "currency": "any supported currency code",
                                "cart": [
                                  {
                                    "productId": "item-34454",
                                    "quantity": 1,
                                    "itemPrice": 65.87
                                  },
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 12.34
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Remove from Cart",
                            "description": "Reports that the user removed an item from the cart.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `remove-from-cart-v1`.",
                                        "type": "string",
                                        "pattern": "remove-from-cart-v1",
                                        "default": "remove-from-cart-v1"
                                      },
                                      "value": {
                                        "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                        "type": "number",
                                        "example": 19.9
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "allOf": [
                                          {
                                            "description": "Number of items.",
                                            "type": "number",
                                            "example": 1
                                          },
                                          {
                                            "description": "The total number of items removed."
                                          }
                                        ]
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "description": "The cart's current state, after the removal of the item. Products are ordered from the first added to the cart to the most recent.<br>*Optional, but recommended.*"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "productId",
                                      "quantity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Remove from Cart",
                              "properties": {
                                "dyType": "remove-from-cart-v1",
                                "value": 34.45,
                                "currency": "any supported currency code",
                                "productId": "gswefd-34-454",
                                "quantity": 1,
                                "cart": [
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 12.34
                                  },
                                  {
                                    "productId": "item-34454",
                                    "quantity": 1,
                                    "itemPrice": 34.45
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Sync Cart",
                            "description": "**THIS EVENT IS MANDATORY FOR:**<br><ul><li>The [*Exclude items currently in cart* filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178#h_01FZW8C8C9JSHT05QW6764K0XV), and must be fired upon every page load.</li><li>[Reconnect](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect) implementation.</li></ul>",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `sync-cart-v1`.",
                                        "type": "string",
                                        "pattern": "sync-cart-v1",
                                        "default": "sync-cart-v1"
                                      },
                                      "value": {
                                        "allOf": [
                                          {
                                            "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                            "type": "number",
                                            "example": 98.8
                                          },
                                          {
                                            "description": "The total monetary value of the event (the total value of the cart, not just the item that triggered the event); in the actual payment currency."
                                          }
                                        ]
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "description": "The cart's absolute current state, including the last item added. Products are ordered from the first added to the cart to the most recent."
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "cart"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Sync Cart",
                              "properties": {
                                "dyType": "sync-cart-v1",
                                "value": 125.5,
                                "currency": "any supported currency code",
                                "cart": [
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 12.34
                                  },
                                  {
                                    "productId": "item-34454",
                                    "quantity": 1,
                                    "itemPrice": 34.45
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Identify User",
                            "type": "object",
                            "description": "Use to identify visitors at any point during their journey on your site or app, such as during the checkout process.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `identify-v1`.",
                                        "type": "string",
                                        "pattern": "identify-v1",
                                        "default": "identify-v1"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/identify-user#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Identify",
                              "properties": {
                                "dyType": "identify-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Login",
                            "type": "object",
                            "description": "Reports that a user has logged in.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `login-v1`.",
                                        "type": "string",
                                        "pattern": "login-v1",
                                        "default": "login-v1"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/login#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Login",
                              "properties": {
                                "dyType": "login-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Signup",
                            "type": "object",
                            "description": "Reports that the user completed the signup process and is a registered user.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `signup-v1`.",
                                        "type": "string"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/signup#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Signup",
                              "properties": {
                                "dyType": "signup-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Newsletter Subscription",
                            "description": "Reports that a user subscribed to a newsletter. Identification event.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `newsletter-subscription-v1`.",
                                        "type": "string",
                                        "pattern": "newsletter-subscription-v1",
                                        "default": "newsletter-subscription-v1"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/newsletter-subscription#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Newsletter Subscription",
                              "properties": {
                                "dyType": "newsletter-subscription-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Push Opt-In",
                            "description": "Reports that a user opted in to receive Reconnect push notifications.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `message-optin-v1`.",
                                        "type": "string",
                                        "pattern": "message-optin-v1",
                                        "default": "message-optin-v1"
                                      },
                                      "pushId": {
                                        "description": "Reports that a user opted in to receive Reconnect push notifications.",
                                        "type": "string",
                                        "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "pushId"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Push Opt-in",
                              "properties": {
                                "dyType": "message-optin-v1",
                                "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                              }
                            }
                          },
                          {
                            "title": "Push Opt-Out",
                            "description": "Reports that a user opted out of receiving Reconnect push notifications.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `message-optout-v1`.",
                                        "type": "string",
                                        "pattern": "message-optout-v1",
                                        "default": "message-optout-v1"
                                      },
                                      "pushId": {
                                        "description": "Reports that a user opted in to receive Reconnect push notifications.",
                                        "type": "string",
                                        "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "pushId"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Push Opt-Out",
                              "properties": {
                                "dyType": "message-optout-v1",
                                "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                              }
                            }
                          },
                          {
                            "title": "Keyword Search",
                            "description": "Reports that a user ran a freestyle keyword search.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `keyword-search-v1`.",
                                        "type": "string",
                                        "pattern": "keyword-search-v1",
                                        "default": "keyword-search-v1"
                                      },
                                      "keywords": {
                                        "description": "The search string.",
                                        "type": "string",
                                        "example": "contact info"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "keywords"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Keyword search",
                              "properties": {
                                "dyType": "keyword-search-v1",
                                "keywords": "contact info"
                              }
                            }
                          },
                          {
                            "title": "Add to Wishlist",
                            "description": "Reports that a user added a product to their wishlist.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `add-to-wishlist-v1`.",
                                        "type": "string",
                                        "pattern": "add-to-wishlist-v1",
                                        "default": "add-to-wishlist-v1"
                                      },
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "size": {
                                        "description": "Product size.",
                                        "type": "string",
                                        "example": "L"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "productId"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Add to Wishlist",
                              "properties": {
                                "dyType": "add-to-wishlist-v1",
                                "productId": "item-34454",
                                "size": "XL"
                              }
                            }
                          },
                          {
                            "title": "Filter Items",
                            "description": "Reports that the user filtered the product list by a specific field value.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `filter-items-v1`.",
                                        "type": "string",
                                        "pattern": "filter-items-v1",
                                        "default": "filter-items-v1"
                                      },
                                      "filterType": {
                                        "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
                                        "type": "string",
                                        "example": "color"
                                      },
                                      "filterNumericValue": {
                                        "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
                                        "type": "number",
                                        "example": 20
                                      },
                                      "filterStringValue": {
                                        "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
                                        "type": "string",
                                        "example": "Gray"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "filterType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Filter Items",
                              "properties": {
                                "dyType": "filter-items-v1",
                                "filterType": "color",
                                "filterNumericValue": 4
                              }
                            }
                          },
                          {
                            "title": "Change Attribute",
                            "description": "Reports that a user changed an attribute of the displayed product (such as color or size).<br>**Note:** The attribute type and value must match information in your product feed. The currently displayed product is inferred from the in-page context.<br>**This event is currently available for script implementation only.**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `change-attribute-v1`.",
                                        "type": "string",
                                        "pattern": "change-attr-v1",
                                        "default": "change-attr-v1"
                                      },
                                      "attributeType": {
                                        "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
                                        "type": "string",
                                        "example": "Color"
                                      },
                                      "attributeValue": {
                                        "description": "The new value (for example, new color is Gray).",
                                        "type": "string",
                                        "example": "Navy Blue"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "attributeType",
                                      "attributeValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Change Attribute",
                              "properties": {
                                "dyType": "change-attr-v1",
                                "attributeType": "Color",
                                "attributeValue": "Navy Blue"
                              }
                            }
                          },
                          {
                            "title": "Video Watch",
                            "description": "Reports that a user watched a video on a media site or application.<br>This event can report that the user watched a video in part or in full. You can distinguish between auto-play videos and those that the user explicitly clicked to watch.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `video-watch-v1`.",
                                        "type": "string",
                                        "pattern": "video-watch-v1",
                                        "default": "video-watch-v1"
                                      },
                                      "itemId": {
                                        "description": "ID that matches an item ID in the content feed.",
                                        "type": "string",
                                        "example": "33849492012003"
                                      },
                                      "categories": {
                                        "description": "*Optional*",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "Sports",
                                          "Baseball"
                                        ]
                                      },
                                      "autoplay": {
                                        "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "progress": {
                                        "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
                                        "type": "string",
                                        "enum": [
                                          "VIDEO_STARTED",
                                          "PREROLL_FINISHED",
                                          "VIDEO_FINISHED",
                                          "VIDEO_PROGRESS"
                                        ],
                                        "example": "VIDEO_STARTED"
                                      },
                                      "progressPercent": {
                                        "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
                                        "type": "number",
                                        "example": 65
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "itemId",
                                      "autoplay",
                                      "progress",
                                      "progressPercent"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Video Watch",
                              "properties": {
                                "dyType": "video-watch-v1",
                                "itemId": "33849492012003",
                                "categories": [
                                  "Sports",
                                  "Baseball"
                                ],
                                "autoplay": true,
                                "progress": "VIDEO_PROGRESS",
                                "progressPercent": 65
                              }
                            }
                          },
                          {
                            "title": "Sort Items",
                            "description": "Reports that the user changed the sorting of a product list.<br>**This event is currently available for script implementation only.**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `sort-items-v1`.",
                                        "type": "string",
                                        "pattern": "sort-items-v1",
                                        "default": "sort-items-v1"
                                      },
                                      "sortBy": {
                                        "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
                                        "type": "string",
                                        "example": "price"
                                      },
                                      "sortOrder": {
                                        "description": "`ASC` or `DESC`.",
                                        "type": "string",
                                        "example": "ASC"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "sortBy",
                                      "sortOrder"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Sort Items",
                              "properties": {
                                "dyType": "sort-items-v1",
                                "sortBy": "PRICE",
                                "sortOrder": "ASC"
                              }
                            }
                          },
                          {
                            "title": "Promo Code Entered",
                            "description": "Reports that the user entered a valid promotion code.<br>**This event is currently available for script implementation only.**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `enter-promo-code-v1`.",
                                        "type": "string",
                                        "pattern": "enter-promo-code-v1",
                                        "default": "enter-promo-code-v1"
                                      },
                                      "code": {
                                        "description": "The promo code.",
                                        "type": "string",
                                        "example": "SPECIALOFFER"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "code"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Promo Code Entered",
                              "properties": {
                                "dyType": "enter-promo-code-v1",
                                "code": "SPECIALOFFER"
                              }
                            }
                          },
                          {
                            "title": "Custom Event",
                            "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Event name for display. Does not have a `dyType` property.",
                                "type": "string",
                                "example": "VIP Login"
                              },
                              "properties": {
                                "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                                    "type": "number",
                                    "example": 98.7
                                  },
                                  "currency": {
                                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                    "type": "string",
                                    "example": "USD"
                                  }
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "example": {
                              "name": "Custom Event Example 1",
                              "properties": {
                                "isVIP": true
                              }
                            }
                          },
                          {
                            "title": "Inform Affinity",
                            "description": "Report an array of product attributes to use in affinity personalization.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `inform-affinity-v1`.",
                                        "type": "string",
                                        "pattern": "inform-affinity-v1"
                                      },
                                      "source": {
                                        "description": "The source of the user data",
                                        "type": "string"
                                      },
                                      "data": {
                                        "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "attribute": {
                                              "description": "name of attribute"
                                            },
                                            "values": {
                                              "type": "array",
                                              "maxItems": 10,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "data"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Inform Affinity",
                              "properties": {
                                "dyType": "inform-affinity-v1",
                                "source": "registration-form",
                                "data": [
                                  {
                                    "attribute": "categories",
                                    "values": [
                                      "shoes",
                                      "tops",
                                      "accessories"
                                    ]
                                  },
                                  {
                                    "attribute": "brand",
                                    "values": [
                                      "adidas"
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "context",
                    "events"
                  ]
                },
                {
                  "title": "Event Request - Financial Institutions",
                  "type": "object",
                  "properties": {
                    "user": {
                      "title": "User",
                      "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                      "type": "object",
                      "properties": {
                        "dyid": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For new users not assigned a `dyid`, use a `choose` call to generate one. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "dyid_server": {
                          "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                          "type": "string"
                        },
                        "active_consent_accepted": {
                          "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            }
                          }
                        },
                        "channel": {
                          "description": "Report and monitor each channel’s Experience API implementation. The channel corresponds to the Experience OS app used (`WEB` or `APP`), and the values are available for filtering in the API logs.",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP"
                          ]
                        }
                      }
                    },
                    "events": {
                      "description": "One or more events to report.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "Application",
                            "description": "Reports that a user started the application process for a product.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `add-to-cart-v1`.",
                                        "type": "string",
                                        "pattern": "add-to-cart-v1",
                                        "default": "add-to-cart-v1"
                                      },
                                      "value": {
                                        "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                        "type": "number",
                                        "example": 19.9
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "allOf": [
                                          {
                                            "description": "Number of items.",
                                            "type": "number",
                                            "example": 1
                                          },
                                          {
                                            "description": "The total number of items that were added to the cart."
                                          }
                                        ]
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "The cart's current state, including the last item added. Products are ordered from the first added to the cart to the most recent.<br><br>**Note:** Pass the updated cart with the newly added products to ensure that the cart state is fully in sync with your system. This is important mainly for triggered email and push notifications. *Optional, but recommended.*"
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "productId",
                                      "quantity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Application Started",
                              "properties": {
                                "dyType": "add-to-cart-v1",
                                "value": 400,
                                "currency": "EUR",
                                "productId": "item-34454",
                                "quantity": 2,
                                "cart": [
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 100
                                  },
                                  {
                                    "productId": "item-34454",
                                    "quantity": 2,
                                    "itemPrice": 200
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Submission",
                            "description": "Reports that the user submitted an application.<br>**REQUIRED FOR FINANCIAL INSTITUTIONS SECTIONS**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `purchase-v1`.",
                                        "type": "string",
                                        "pattern": "purchase-v1",
                                        "default": "purchase-v1"
                                      },
                                      "value": {
                                        "allOf": [
                                          {
                                            "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                            "type": "number",
                                            "example": 98.8
                                          },
                                          {
                                            "description": "The total monetary value of the event. This refers only to the item or items removed that triggered the event, not the entire cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0."
                                          }
                                        ]
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "uniqueTransactionId": {
                                        "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                                        "type": "string",
                                        "example": "38373991919193830033"
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "cart"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Submission",
                              "properties": {
                                "uniqueTransactionId": 123456,
                                "dyType": "purchase-v1",
                                "value": 90.55,
                                "currency": "any supported currency code",
                                "cart": [
                                  {
                                    "productId": "item-34454",
                                    "quantity": 1,
                                    "itemPrice": 65.87
                                  },
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 12.34
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Remove from Cart",
                            "description": "Reports that the user removed an item from the cart.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `remove-from-cart-v1`.",
                                        "type": "string",
                                        "pattern": "remove-from-cart-v1",
                                        "default": "remove-from-cart-v1"
                                      },
                                      "value": {
                                        "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                        "type": "number",
                                        "example": 19.9
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "allOf": [
                                          {
                                            "description": "Number of items.",
                                            "type": "number",
                                            "example": 1
                                          },
                                          {
                                            "description": "The total number of items removed."
                                          }
                                        ]
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "description": "The cart's current state, after the removal of the item. Products are ordered from the first added to the cart to the most recent.<br>*Optional, but recommended.*"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "productId",
                                      "quantity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Remove from Cart",
                              "properties": {
                                "dyType": "remove-from-cart-v1",
                                "value": 34.45,
                                "currency": "any supported currency code",
                                "productId": "gswefd-34-454",
                                "quantity": 1,
                                "cart": [
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 12.34
                                  },
                                  {
                                    "productId": "item-34454",
                                    "quantity": 1,
                                    "itemPrice": 34.45
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Sync Cart",
                            "description": "**THIS EVENT IS MANDATORY FOR:**<br><ul><li>The [*Exclude items currently in cart* filter](https://support.dynamicyield.com/hc/en-us/articles/360019720178#h_01FZW8C8C9JSHT05QW6764K0XV), and must be fired upon every page load.</li><li>[Reconnect](https://support.dynamicyield.com/hc/en-us/articles/14365496351901-Getting-Started-with-Reconnect) implementation.</li></ul>",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `sync-cart-v1`.",
                                        "type": "string",
                                        "pattern": "sync-cart-v1",
                                        "default": "sync-cart-v1"
                                      },
                                      "value": {
                                        "allOf": [
                                          {
                                            "description": "The total monetary value of the event in the actual payment currency. This is the total value of the cart purchased, not just a triggering item.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                            "type": "number",
                                            "example": 98.8
                                          },
                                          {
                                            "description": "The total monetary value of the event (the total value of the cart, not just the item that triggered the event); in the actual payment currency."
                                          }
                                        ]
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "description": "The cart's absolute current state, including the last item added. Products are ordered from the first added to the cart to the most recent."
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "SKU exactly as it appears in the product feed.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "cart"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Sync Cart",
                              "properties": {
                                "dyType": "sync-cart-v1",
                                "value": 125.5,
                                "currency": "any supported currency code",
                                "cart": [
                                  {
                                    "productId": "sku-4324-bg",
                                    "quantity": 2,
                                    "itemPrice": 12.34
                                  },
                                  {
                                    "productId": "item-34454",
                                    "quantity": 1,
                                    "itemPrice": 34.45
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Identify User",
                            "type": "object",
                            "description": "Use to identify visitors at any point during their journey on your site or app, such as during the checkout process.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `identify-v1`.",
                                        "type": "string",
                                        "pattern": "identify-v1",
                                        "default": "identify-v1"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/identify-user#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Identify",
                              "properties": {
                                "dyType": "identify-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Login",
                            "type": "object",
                            "description": "Reports that a user has logged in.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `login-v1`.",
                                        "type": "string",
                                        "pattern": "login-v1",
                                        "default": "login-v1"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/login#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Login",
                              "properties": {
                                "dyType": "login-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Signup",
                            "type": "object",
                            "description": "Reports that the user completed the signup process and is a registered user.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `signup-v1`.",
                                        "type": "string"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/signup#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Signup",
                              "properties": {
                                "dyType": "signup-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Newsletter Subscription",
                            "description": "Reports that a user subscribed to a newsletter. Identification event.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `newsletter-subscription-v1`.",
                                        "type": "string",
                                        "pattern": "newsletter-subscription-v1",
                                        "default": "newsletter-subscription-v1"
                                      },
                                      "cuid": {
                                        "description": "User identifier value. Max 250 characters.",
                                        "type": "string",
                                        "enum": [
                                          "demo@email.com",
                                          "123456789"
                                        ]
                                      },
                                      "cuidType": {
                                        "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                        "type": "string"
                                      },
                                      "secondaryIdentifiers": {
                                        "allOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "hashedPhoneNumber"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "description": "Additional methods for cross-identification. IDs can be any type, but if you use hashed email address (`he`) or hashed phone number (‘hashedPhoneNumber`), it must be SHA-256 hashed. [Learn more about secondary identifiers](https://dy.dev/docs/newsletter-subscription#parameters)."
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Newsletter Subscription",
                              "properties": {
                                "dyType": "newsletter-subscription-v1",
                                "cuid": "demo@email.com",
                                "cuidType": "EcommerceID",
                                "secondaryIdentifiers": [
                                  {
                                    "type": "hashedPhoneNumber",
                                    "value": "49c7b1f6d24121078d8f37997b433586fe9a28e2dc4fbd0803eac237ac82255e"
                                  },
                                  {
                                    "type": "ecommerceID",
                                    "value": "12345"
                                  },
                                  {
                                    "type": "vipClub",
                                    "value": "678910"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "Push Opt-In",
                            "description": "Reports that a user opted in to receive Reconnect push notifications.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `message-optin-v1`.",
                                        "type": "string",
                                        "pattern": "message-optin-v1",
                                        "default": "message-optin-v1"
                                      },
                                      "pushId": {
                                        "description": "Reports that a user opted in to receive Reconnect push notifications.",
                                        "type": "string",
                                        "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "pushId"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Push Opt-in",
                              "properties": {
                                "dyType": "message-optin-v1",
                                "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                              }
                            }
                          },
                          {
                            "title": "Push Opt-Out",
                            "description": "Reports that a user opted out of receiving Reconnect push notifications.",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `message-optout-v1`.",
                                        "type": "string",
                                        "pattern": "message-optout-v1",
                                        "default": "message-optout-v1"
                                      },
                                      "pushId": {
                                        "description": "Reports that a user opted in to receive Reconnect push notifications.",
                                        "type": "string",
                                        "example": "f7a8c987-7ab5-400f-b989-5357af507343"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "pushId"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Push Opt-Out",
                              "properties": {
                                "dyType": "message-optout-v1",
                                "pushId": "f7a8c987-7ab5-400f-b989-5357af507343"
                              }
                            }
                          },
                          {
                            "title": "Keyword Search",
                            "description": "Reports that a user ran a freestyle keyword search.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `keyword-search-v1`.",
                                        "type": "string",
                                        "pattern": "keyword-search-v1",
                                        "default": "keyword-search-v1"
                                      },
                                      "keywords": {
                                        "description": "The search string.",
                                        "type": "string",
                                        "example": "contact info"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "keywords"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Keyword search",
                              "properties": {
                                "dyType": "keyword-search-v1",
                                "keywords": "contact info"
                              }
                            }
                          },
                          {
                            "title": "Add to Wishlist",
                            "description": "Reports that a user added a product to their wishlist.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `add-to-wishlist-v1`.",
                                        "type": "string",
                                        "pattern": "add-to-wishlist-v1",
                                        "default": "add-to-wishlist-v1"
                                      },
                                      "productId": {
                                        "description": "SKU exactly as it appears in the product feed.",
                                        "type": "string"
                                      },
                                      "size": {
                                        "description": "Product size.",
                                        "type": "string",
                                        "example": "L"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "productId"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Add to Wishlist",
                              "properties": {
                                "dyType": "add-to-wishlist-v1",
                                "productId": "item-34454",
                                "size": "XL"
                              }
                            }
                          },
                          {
                            "title": "Filter Items",
                            "description": "Reports that the user filtered the product list by a specific field value.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `filter-items-v1`.",
                                        "type": "string",
                                        "pattern": "filter-items-v1",
                                        "default": "filter-items-v1"
                                      },
                                      "filterType": {
                                        "description": "Name of the filter (color, size, brand, fit, author, keyword, category...)<br>Must correspond to a product property in your product feed.",
                                        "type": "string",
                                        "example": "color"
                                      },
                                      "filterNumericValue": {
                                        "description": "Specify a value for this property **OR** for `filterStringValue`, but not both. This affects how segmentation conditions are run.",
                                        "type": "number",
                                        "example": 20
                                      },
                                      "filterStringValue": {
                                        "description": "Specify a value for this property **OR** for `filterNumericValue`, but not both. This affects how segmentation conditions are run.",
                                        "type": "string",
                                        "example": "Gray"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "filterType"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Filter Items",
                              "properties": {
                                "dyType": "filter-items-v1",
                                "filterType": "color",
                                "filterNumericValue": 4
                              }
                            }
                          },
                          {
                            "title": "Change Attribute",
                            "description": "Reports that a user changed an attribute of the displayed product (such as color or size).<br>**Note:** The attribute type and value must match information in your product feed. The currently displayed product is inferred from the in-page context.<br>**This event is currently available for script implementation only.**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `change-attribute-v1`.",
                                        "type": "string",
                                        "pattern": "change-attr-v1",
                                        "default": "change-attr-v1"
                                      },
                                      "attributeType": {
                                        "description": "Color, size, fit, brand, author, keyword, category, or any other attribute you allow.",
                                        "type": "string",
                                        "example": "Color"
                                      },
                                      "attributeValue": {
                                        "description": "The new value (for example, new color is Gray).",
                                        "type": "string",
                                        "example": "Navy Blue"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "attributeType",
                                      "attributeValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Change Attribute",
                              "properties": {
                                "dyType": "change-attr-v1",
                                "attributeType": "Color",
                                "attributeValue": "Navy Blue"
                              }
                            }
                          },
                          {
                            "title": "Video Watch",
                            "description": "Reports that a user watched a video on a media site or application.<br>This event can report that the user watched a video in part or in full. You can distinguish between auto-play videos and those that the user explicitly clicked to watch.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `video-watch-v1`.",
                                        "type": "string",
                                        "pattern": "video-watch-v1",
                                        "default": "video-watch-v1"
                                      },
                                      "itemId": {
                                        "description": "ID that matches an item ID in the content feed.",
                                        "type": "string",
                                        "example": "33849492012003"
                                      },
                                      "categories": {
                                        "description": "*Optional*",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "Sports",
                                          "Baseball"
                                        ]
                                      },
                                      "autoplay": {
                                        "description": "Indicates whether the video played automatically (`true`) or due to user action (`false` (default)).",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "progress": {
                                        "description": "Possible values:<br><ul><li>`VIDEO_STARTED` (default): The video started playing. It doesn't indicate whether it was then watched till the end or up to any specific marker.</li><li>`PREROLL_FINISHED`: the pre-roll was watched in full.</li><li>`VIDEO_FINISHED`: The content was watched in full (whether or not a pre-roll was included)</li><li>`VIDEO_PROGRESS`: If the client can periodically report fine-grained progress in percentages within the video, use this value together with the `progressPercent` property.</li></ul>",
                                        "type": "string",
                                        "enum": [
                                          "VIDEO_STARTED",
                                          "PREROLL_FINISHED",
                                          "VIDEO_FINISHED",
                                          "VIDEO_PROGRESS"
                                        ],
                                        "example": "VIDEO_STARTED"
                                      },
                                      "progressPercent": {
                                        "description": "Indicates how much of a video was watched as a percentage.<br>*Use only with the `progress` value of `VIDEO_PROGRESS`*",
                                        "type": "number",
                                        "example": 65
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "itemId",
                                      "autoplay",
                                      "progress",
                                      "progressPercent"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Video Watch",
                              "properties": {
                                "dyType": "video-watch-v1",
                                "itemId": "33849492012003",
                                "categories": [
                                  "Sports",
                                  "Baseball"
                                ],
                                "autoplay": true,
                                "progress": "VIDEO_PROGRESS",
                                "progressPercent": 65
                              }
                            }
                          },
                          {
                            "title": "Sort Items",
                            "description": "Reports that the user changed the sorting of a product list.<br>**This event is currently available for script implementation only.**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `sort-items-v1`.",
                                        "type": "string",
                                        "pattern": "sort-items-v1",
                                        "default": "sort-items-v1"
                                      },
                                      "sortBy": {
                                        "description": "Sorting parameter, such as price, age, popularity, rating, or any other you allow.",
                                        "type": "string",
                                        "example": "price"
                                      },
                                      "sortOrder": {
                                        "description": "`ASC` or `DESC`.",
                                        "type": "string",
                                        "example": "ASC"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "sortBy",
                                      "sortOrder"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Sort Items",
                              "properties": {
                                "dyType": "sort-items-v1",
                                "sortBy": "PRICE",
                                "sortOrder": "ASC"
                              }
                            }
                          },
                          {
                            "title": "Promo Code Entered",
                            "description": "Reports that the user entered a valid promotion code.<br>**This event is currently available for script implementation only.**",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `enter-promo-code-v1`.",
                                        "type": "string",
                                        "pattern": "enter-promo-code-v1",
                                        "default": "enter-promo-code-v1"
                                      },
                                      "code": {
                                        "description": "The promo code.",
                                        "type": "string",
                                        "example": "SPECIALOFFER"
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "code"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Promo Code Entered",
                              "properties": {
                                "dyType": "enter-promo-code-v1",
                                "code": "SPECIALOFFER"
                              }
                            }
                          },
                          {
                            "title": "Custom Event",
                            "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Event name for display. Does not have a `dyType` property.",
                                "type": "string",
                                "example": "VIP Login"
                              },
                              "properties": {
                                "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                                    "type": "number",
                                    "example": 98.7
                                  },
                                  "currency": {
                                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                    "type": "string",
                                    "example": "USD"
                                  }
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "example": {
                              "name": "Custom Event Example 1",
                              "properties": {
                                "isVIP": true
                              }
                            }
                          },
                          {
                            "title": "Inform Affinity",
                            "description": "Report an array of product attributes to use in affinity personalization.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `inform-affinity-v1`.",
                                        "type": "string",
                                        "pattern": "inform-affinity-v1"
                                      },
                                      "source": {
                                        "description": "The source of the user data",
                                        "type": "string"
                                      },
                                      "data": {
                                        "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "attribute": {
                                              "description": "name of attribute"
                                            },
                                            "values": {
                                              "type": "array",
                                              "maxItems": 10,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "data"
                                    ]
                                  }
                                ]
                              }
                            },
                            "example": {
                              "name": "Inform Affinity",
                              "properties": {
                                "dyType": "inform-affinity-v1",
                                "source": "registration-form",
                                "data": [
                                  {
                                    "attribute": "categories",
                                    "values": [
                                      "shoes",
                                      "tops",
                                      "accessories"
                                    ]
                                  },
                                  {
                                    "attribute": "brand",
                                    "values": [
                                      "adidas"
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "context",
                    "events"
                  ]
                },
                {
                  "title": "Event Request - Restaurants",
                  "type": "object",
                  "properties": {
                    "user": {
                      "oneOf": [
                        {
                          "title": "User (sharedDevice: true)",
                          "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies.",
                          "type": "object",
                          "properties": {
                            "sharedDevice": {
                              "description": "Set to `true` for transactions done on a shared device in a branch (always `true` for kiosk and ODMB).",
                              "type": "boolean",
                              "default": true
                            }
                          },
                          "required": [
                            "sharedDevice"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "User (sharedDevice: false)"
                            },
                            {
                              "title": "User",
                              "description": "User ID. A Dynamic Yield-generated identifier is used, and managed via cookies. For a new user, send this object empty.",
                              "type": "object",
                              "properties": {
                                "dyid": {
                                  "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                  "type": "string"
                                },
                                "dyid_server": {
                                  "description": "The _dyid cookie value. The user ID assigned to visitors by Dynamic Yield. For a new user, send this param empty. Learn more about the [user ID](https://dy.dev/docs/experience-api-basics#user-id).",
                                  "type": "string"
                                },
                                "active_consent_accepted": {
                                  "description": "Add this attribute only if [active cookie consent](https://dy.dev/docs/active-cookie-consent) is enabled. Set to `true` if user gave consent for cookies.",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            },
                            {
                              "properties": {
                                "sharedDevice": {
                                  "description": "Set to `false` for transactions made on personal devices.",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            }
                          ],
                          "required": [
                            "sharedDevice"
                          ]
                        }
                      ]
                    },
                    "session": {
                      "title": "Session",
                      "description": "Session ID. A Dynamic Yield-generated identifier is used.",
                      "type": "object",
                      "properties": {
                        "dy": {
                          "description": "Pass the value of the `_dyjsession` cookie if it exists. Otherwise, a new session identifier will be created by Dynamic Yield and returned in the response.",
                          "type": "string"
                        }
                      }
                    },
                    "context": {
                      "title": "Context",
                      "description": "The request's context.",
                      "type": "object",
                      "properties": {
                        "device": {
                          "description": "Data for the served device.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Use when the user agent isn't available. Valid values are:<br>`DESKTOP`, `SMARTPHONE`, `TABLET`, `KIOSK`, `ODMB`",
                              "type": "string",
                              "enum": [
                                "DESKTOP",
                                "SMARTPHONE",
                                "TABLET",
                                "KIOSK",
                                "ODMB"
                              ]
                            },
                            "ip": {
                              "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                              "type": "string",
                              "example": "54.100.200.255"
                            },
                            "id": {
                              "description": "The identifier of the device in the branch.",
                              "type": "string"
                            },
                            "dateTime": {
                              "description": "Date & time in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sss±hh:mm (with local time zone).",
                              "type": "string",
                              "example": "2024-01-01T22:30:00.000-05:00"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "branch": {
                          "description": "Use to recommend only items in stock at the branch the user is browsing.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The ID of the branch the recommendation is for.",
                              "type": "string"
                            },
                            "dayPart": {
                              "description": "Define the period of the day the request ralates to. Possible values are those used in the Product Catalog.",
                              "type": "string",
                              "enum": [
                                "BREAKFAST",
                                "LUNCH",
                                "DINNER",
                                "LATENIGHT"
                              ]
                            },
                            "orderFulfillment": {
                              "description": "The fulfillment type of the order the request relates to.",
                              "type": "string",
                              "enum": [
                                "DELIVERY",
                                "PICKUP",
                                "DINEIN",
                                "CURBSIDE"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "dayPart"
                          ]
                        },
                        "channel": {
                          "description": "Report and monitor each channel's experience API implementation. Channels correspond to the Experience OS app used. Available channels: `WEB`, `APP`, `KIOSK`, `DRIVE-THRU`",
                          "type": "string",
                          "enum": [
                            "WEB",
                            "APP",
                            "KIOSK",
                            "DRIVE-THRU"
                          ]
                        }
                      },
                      "required": [
                        "device",
                        "branch"
                      ]
                    },
                    "events": {
                      "description": "One or more events to report.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "Purchase",
                            "description": "Reports that the user completed a purchase.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "A human-readable name corresponding to the schema name.",
                                "type": "string"
                              },
                              "properties": {
                                "allOf": [
                                  {
                                    "description": "Data for the reported event.",
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "dyType": {
                                        "description": "Must be `purchase-v1`.",
                                        "type": "string",
                                        "pattern": "purchase-v1",
                                        "default": "purchase-v1"
                                      },
                                      "value": {
                                        "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                        "type": "number",
                                        "example": 19.9
                                      },
                                      "currency": {
                                        "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                        "type": "string",
                                        "example": "USD"
                                      },
                                      "uniqueTransactionId": {
                                        "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                                        "type": "string",
                                        "example": "38373991919193830033"
                                      },
                                      "cart": {
                                        "allOf": [
                                          {
                                            "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                          },
                                          {
                                            "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "productId": {
                                                  "description": "The product ID from the restaurant product catalog.",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Number of items.",
                                                  "type": "number"
                                                },
                                                "itemPrice": {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                },
                                                "innerProducts": {
                                                  "description": "Indicate any inner products within the main product (for example, the individual products that make up a meal, or any extras/toppings). All inner products are listed at the same hierarchical level, even if they are a component of a component (say, extra cheese on a sandwich that is part of a meal).",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "productId": {
                                                        "description": "The product ID from the restaurant product catalog.",
                                                        "type": "string"
                                                      },
                                                      "quantity": {
                                                        "description": "Number of items.",
                                                        "type": "number"
                                                      },
                                                      "itemPrice": {
                                                        "description": "unit.cents format using the section default currency.",
                                                        "type": "number",
                                                        "example": 23.99
                                                      }
                                                    },
                                                    "required": [
                                                      "productId"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "productId"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "dyType",
                                      "value",
                                      "cart"
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "user",
                    "session",
                    "context",
                    "events"
                  ]
                }
              ]
            }
          }
        }
      },
      "ProductFeedBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "title": "Product Feed Request",
              "type": "object",
              "properties": {
                "requests": {
                  "description": "A list of product feed action requests.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "SKU exactly as it appears in the product feed.",
                        "type": "string"
                      },
                      "action": {
                        "description": "Type of action requested. Valid values are:<ul>`update` - Insert a new product or rewrite an entire product’s data<br>`partial` - Update specific fields for a single product<br>`delete` - Delete a product</ul>",
                        "type": "string",
                        "enum": [
                          "update",
                          "partial",
                          "delete"
                        ]
                      },
                      "body": {
                        "description": "Single request body.",
                        "type": "object",
                        "properties": {
                          "data": {
                            "description": "Product data.",
                            "type": "object",
                            "properties": {
                              "sku": {
                                "description": "SKU exactly as it appears in the product feed.",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Product group ID.",
                                "type": "string",
                                "example": "abc"
                              },
                              "url": {
                                "description": "Product details page URL (must be a valid URL, starting with HTTP/HTTPS).",
                                "type": "string",
                                "example": "http://www.example.com/abc-123"
                              },
                              "name": {
                                "description": "Product name.",
                                "type": "string",
                                "example": "white sneakers"
                              },
                              "price": {
                                "description": "unit.cents format using the section default currency.",
                                "type": "number",
                                "example": 23.99
                              },
                              "in_stock": {
                                "description": "Whether the product is in stock or in outage.",
                                "type": "boolean",
                                "example": true
                              },
                              "image_url": {
                                "description": "Product image URL.",
                                "type": "string",
                                "example": "http://www.example.com/abc-123.png"
                              },
                              "categories": {
                                "description": "Categories the product belongs to.",
                                "type": "string",
                                "example": "shoes|sneakers"
                              },
                              "description": {
                                "description": "Product description.",
                                "type": "string",
                                "example": "The white sneakers that everybody wants"
                              },
                              "publish_time": {
                                "description": "Date & time the product was published (added to feed or edited), using the following format: `yyyy-MM-dd'T'HH:mm:ss`",
                                "type": "string",
                                "example": "2018-02-12T17:05:12"
                              },
                              "keywords": {
                                "description": "A list of keywords describing the product.",
                                "type": "string",
                                "example": "tag1|tag2"
                              }
                            },
                            "additionalProperties": true
                          }
                        }
                      }
                    },
                    "required": [
                      "id",
                      "action"
                    ]
                  }
                }
              },
              "required": [
                "requests"
              ],
              "example": {
                "requests": [
                  {
                    "id": "56EF030B",
                    "action": "UPDATE",
                    "body": {
                      "data": {
                        "sku": "56EF030B",
                        "group_id": "abc",
                        "url": "http://www.example.com/abc-123",
                        "name": "white sneakers",
                        "price": 40.9,
                        "in_stock": true,
                        "image_url": "http://www.example.com/abc-123.png",
                        "categories": "shoes|sneakers",
                        "description": "The white sneakers that everybody wants",
                        "publish_time": "2018-02-12T17:05:12",
                        "keywords": "tag1|tag2"
                      }
                    }
                  },
                  {
                    "id": "56EF0889",
                    "action": "DELETE"
                  }
                ]
              }
            },
            "example": {
              "value": {
                "requests": [
                  {
                    "id": "abc-123",
                    "action": "UPDATE",
                    "body": {
                      "data": {
                        "sku": "abc-123",
                        "group_id": "abc",
                        "url": "http://www.example.com/abc-123",
                        "name": "white sneakers",
                        "price": 29.99,
                        "in_stock": true,
                        "image_url": "http://www.example.com/abc-123.png",
                        "categories": "shoes|sneakers",
                        "description": "The white sneakers that everybody wants",
                        "publish_time": "2018-02-12T17:05:12",
                        "keywords": "tag1|tag2",
                        "any_other_field": "any other value"
                      }
                    }
                  },
                  {
                    "id": "abcd-123",
                    "action": "delete"
                  },
                  {
                    "id": "abcde-123",
                    "action": "partial",
                    "body": {
                      "data": {
                        "price": 39.99
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "BranchFeedBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "title": "Branch Feed Update Request - Restaurants",
              "description": "Availability status and price for each product in a specific branch.",
              "type": "object",
              "properties": {
                "products": {
                  "description": "A list of products to be updated.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "sku": {
                        "description": "The SKU (unique identifier) of the product. These SKUs must exist in the global product feed.",
                        "type": "string",
                        "example": "A123"
                      },
                      "availability": {
                        "description": "Whether the product is available in the specific branch or not. Unavailable products will not be recommended.",
                        "type": "boolean",
                        "example": true
                      },
                      "price": {
                        "description": "The price of the product that is used in the specific branch.",
                        "type": "number",
                        "example": 3.14
                      },
                      "name": {
                        "description": "A local variation of the product name, if exists in the specific branch.",
                        "type": "string"
                      },
                      "addons": {
                        "description": "The SKUs of all the products that can be added onto the main product, and the permitted quantities.",
                        "type": "array",
                        "items": {
                          "properties": {
                            "sku": {
                              "description": "The SKU (unique identifier) of the product. These SKUs must exist in the global product feed.",
                              "type": "string",
                              "example": "A123"
                            },
                            "default_quantity": {
                              "description": "The default quantity of this ingredient (add on) inside the parent product.",
                              "type": "number",
                              "example": 1
                            },
                            "min_quantity": {
                              "description": "The minimum quantity of this ingredient (add on) inside the parent product.",
                              "type": "number",
                              "example": 0
                            },
                            "max_quantity": {
                              "description": "The maximum quantity of this ingredient (add on) inside the parent product.",
                              "type": "number",
                              "example": 3
                            },
                            "charge_threshold": {
                              "description": "The amount from which the QSR is going to charge for the addition of the add on.",
                              "type": "number",
                              "example": 1
                            }
                          },
                          "required": [
                            "sku"
                          ]
                        }
                      }
                    },
                    "required": [
                      "sku",
                      "availability",
                      "price"
                    ]
                  }
                }
              },
              "required": [
                "products"
              ]
            }
          }
        }
      },
      "OutageBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "title": "Outage Request - Restaurants",
              "type": "object",
              "properties": {
                "outages": {
                  "description": "A list of outage reports per branch.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "branchId": {
                        "description": "The ID of the branch the recommendation is for.",
                        "type": "string"
                      },
                      "products": {
                        "description": "A list of out-of-stock product IDs",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "branchId",
                      "products"
                    ]
                  }
                }
              },
              "required": [
                "outages"
              ]
            }
          }
        }
      },
      "UserDataBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "title": "User Data Request",
              "type": "object",
              "properties": {
                "requests": {
                  "description": "A list of user data update requests to be executed.",
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "title": "Upsert Request",
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "Use `upsert` to add user data.",
                            "type": "string",
                            "enum": [
                              "upsert"
                            ],
                            "example": "upsert"
                          },
                          "cuid": {
                            "allOf": [
                              {
                                "description": "User identifier value. Max 250 characters.",
                                "type": "string",
                                "enum": [
                                  "demo@email.com",
                                  "123456789"
                                ]
                              },
                              {
                                "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                              }
                            ]
                          },
                          "cuidtype": {
                            "allOf": [
                              {
                                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                "type": "string"
                              },
                              {
                                "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                              },
                              {
                                "example": "he"
                              }
                            ]
                          },
                          "timestamp": {
                            "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-07-24T13:44:17+02:00"
                          },
                          "data": {
                            "description": "Add CRM data here. Date values within the CRM Data should be date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "action",
                          "cuid",
                          "cuidtype",
                          "timestamp",
                          "data"
                        ]
                      },
                      {
                        "title": "Delete Request",
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "Use `delete` to remove data.",
                            "type": "string",
                            "enum": [
                              "delete"
                            ],
                            "example": "delete"
                          },
                          "cuid": {
                            "allOf": [
                              {
                                "description": "User identifier value. Max 250 characters.",
                                "type": "string",
                                "enum": [
                                  "demo@email.com",
                                  "123456789"
                                ]
                              },
                              {
                                "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                              }
                            ]
                          },
                          "cuidtype": {
                            "allOf": [
                              {
                                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                "type": "string"
                              },
                              {
                                "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                              },
                              {
                                "example": "he"
                              }
                            ]
                          },
                          "timestamp": {
                            "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-07-24T13:44:17+02:00"
                          }
                        },
                        "required": [
                          "action",
                          "cuid",
                          "cuidtype",
                          "timestamp"
                        ]
                      },
                      {
                        "title": "array_add/array_remove Request",
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "Use `array_add` and `array_remove` to edit data in existing arrays.",
                            "type": "string",
                            "enum": [
                              "array_add",
                              "array_remove"
                            ],
                            "example": "array_add"
                          },
                          "cuid": {
                            "allOf": [
                              {
                                "description": "User identifier value. Max 250 characters.",
                                "type": "string",
                                "enum": [
                                  "demo@email.com",
                                  "123456789"
                                ]
                              },
                              {
                                "example": "531168e71649b840a843bc3c3859c072195866cae634fa65efe2328b5ef54134"
                              }
                            ]
                          },
                          "cuidtype": {
                            "allOf": [
                              {
                                "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                                "type": "string"
                              },
                              {
                                "description": "Use `he` for hashed email addresses or use your custom identifier type. If importing data based on users' DYID, use `dyid` as the `cuidtype` and enter its value in the `cuid` field."
                              },
                              {
                                "example": "he"
                              }
                            ]
                          },
                          "timestamp": {
                            "description": "Date & time in ISO 8601 format, with or without milliseconds (YYYY-MM-DDThh:mm:ssTZD or YYYY-MM-DDThh:mm:ss.sTZD ), expressed either in UTC or in local time. Alternatively, you can use an epoch timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-07-24T13:44:17+02:00"
                          },
                          "data": {
                            "oneOf": [
                              {
                                "title": "Data: array of strings",
                                "description": "Add CRM data here.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "title": "Data: array of numbers",
                                "description": "Add CRM data here. Insert the integer values corresponding to your predefined dropdown array. [Learn more about mapping numeric values to dropdown arrays](https://support.dynamicyield.com/hc/en-us/articles/4409595248017-Update-Your-User-Data-Feed-by-API#h_01FZ58DYM9WMR66N2P3Z4NKF7R).",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "action",
                          "cuid",
                          "cuidtype",
                          "timestamp",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "requests"
              ],
              "example": {
                "requests": [
                  {
                    "action": "upsert",
                    "cuid": "0c907031b7d6515ce8def68a767272d0ec7225e987c3e0ce70b985c265f318f0",
                    "cuidType": "ihe",
                    "timestamp": "2023-07-02T10:44:44+02:00",
                    "data": {
                      "UserSegments": [
                        "segment 1",
                        "segment 2"
                      ]
                    }
                  },
                  {
                    "action": "delete",
                    "cuid": "myuser789",
                    "cuidType": "ihe",
                    "timestamp": "2022-05-24T12:31:09+02:00"
                  }
                ]
              }
            },
            "example": {
              "value": {
                "requests": [
                  {
                    "action": "upsert",
                    "cuid": "myuser123",
                    "cuidtype": "ihe",
                    "timestamp": "2021-07-24T13:44:17+02:00",
                    "data": {
                      "VIP": "T",
                      "contacts_buyer": "T",
                      "premium_score": 0.8,
                      "segment_name": null,
                      "last_visit": "2020-05-16T05:50:06-05:00"
                    }
                  },
                  {
                    "action": "upsert",
                    "cuid": "myuser456",
                    "cuidtype": "ihe",
                    "timestamp": "2021-07-24T13:45:52+02:00",
                    "data": {
                      "VIP": "F",
                      "contacts_buyer": "T",
                      "premium_score": 0.3
                    }
                  },
                  {
                    "action": "upsert",
                    "cuid": "0c907031b7d6515ce8def68a767272d0ec7225e987c3e0ce70b985c265f318f0",
                    "cuidtype": "ihe",
                    "timestamp": "2023-07-02T10:44:44+02:00",
                    "data": {
                      "UserSegments": [
                        "segment 1",
                        "segment 2"
                      ]
                    }
                  },
                  {
                    "action": "delete",
                    "cuid": "myuser789",
                    "cuidtype": "ihe",
                    "timestamp": "2022-05-24T12:31:09+02:00"
                  }
                ]
              }
            }
          }
        }
      },
      "ExternalEventsBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "title": "External Events Request",
              "properties": {
                "user": {
                  "description": "User's identifying details.",
                  "type": "object",
                  "properties": {
                    "cuid": {
                      "description": "User identifier value. Max 250 characters.",
                      "type": "string",
                      "enum": [
                        "demo@email.com",
                        "123456789"
                      ]
                    },
                    "cuidType": {
                      "allOf": [
                        {
                          "description": "Use this identifier type to identify users across devices (for example, `customer_id`, `account_id`, or `he` for SHA-256 hashed email).<br>**Note: Do not include any personal information in this ID.**",
                          "type": "string"
                        },
                        {
                          "description": "The type of identifier used to identify the user. The value should be one of the following:<ul><li>`he` - hashed email</li><li>Any custom identifier previously defined</li></ul>"
                        }
                      ]
                    }
                  },
                  "required": [
                    "cuidType",
                    "cuid"
                  ]
                },
                "device": {
                  "description": "Data for the served device.",
                  "type": "object",
                  "properties": {
                    "ip": {
                      "description": "The client IP address, for geolocation-based targeting and audience building. If not passed, the caller IP is used.",
                      "type": "string",
                      "example": "54.100.200.255"
                    }
                  }
                },
                "events": {
                  "description": "One or more events to report.",
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "title": "Offline Purchase",
                        "description": "Reports that the user completed a purchase.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "A human-readable name corresponding to the schema name.",
                            "type": "string"
                          },
                          "properties": {
                            "allOf": [
                              {
                                "description": "Data for the reported event.",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "dyType": {
                                    "description": "Must be `offline-purchase-v1`.",
                                    "type": "string",
                                    "pattern": "offline-purchase-v1",
                                    "default": "offline-purchase-v1",
                                    "example": "offline-purchase-v1"
                                  },
                                  "uniqueTransactionId": {
                                    "allOf": [
                                      {
                                        "description": "When this value is passed it ensures that only one purchase is recorded for the transaction ID, even if duplicate events are reported.<br>Maximum of 64 characters.<br>*Optional, but recommended*",
                                        "type": "string",
                                        "example": "38373991919193830033"
                                      },
                                      {
                                        "description": "The purchase transaction ID. Each line contains a maximum of one SKU. If multiple items were purchased together, create multiple lines with the same transactionId.<br>The transaction ID must be unique per transaction, including online purchases.<br>A transaction with the same ID as another transaction previously ingested within the past day is ignored."
                                      }
                                    ]
                                  },
                                  "transactionSource": {
                                    "description": "The source where the transaction occurred, usually the physical store ID.",
                                    "type": "string",
                                    "example": "f877e8a9dbb"
                                  },
                                  "transactionDatetime": {
                                    "description": "The date and time of the purchase in **ISO 8601 combined date and time** format.",
                                    "type": "string",
                                    "example": "2018-09-23T07:29:51+00:00"
                                  },
                                  "currency": {
                                    "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                    "type": "string",
                                    "example": "USD"
                                  },
                                  "value": {
                                    "description": "The total monetary value of the event. This is the item or items added that triggered the event only, not necessarily all items in the cart.<br>Numbers are rounded to the nearest 0.01. Numbers smaller than 0.005 are rounded down to 0.",
                                    "type": "number",
                                    "example": 19.9
                                  },
                                  "cart": {
                                    "allOf": [
                                      {
                                        "description": "Personalize campaigns based on cart state.<br>**Required when basket-based strategies and rules are being used.**",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "productId": {
                                              "description": "SKU exactly as it appears in the product feed.",
                                              "type": "string"
                                            },
                                            "quantity": {
                                              "description": "Number of items.",
                                              "type": "number"
                                            },
                                            "itemPrice": {
                                              "allOf": [
                                                {
                                                  "description": "unit.cents format using the section default currency.",
                                                  "type": "number",
                                                  "example": 23.99
                                                },
                                                {
                                                  "description": "List price for each item (quantity of one). This might be different from the `transactionItemValue` due to discounts, taxes, and so on."
                                                }
                                              ]
                                            },
                                            "transactionItemValue": {
                                              "description": "Value of the line item in actual payment currency.<br>The value is the product of `itemPrice` times `quantity`, after discount and taxes.<br>Negative values are ignored.<br>Required if the `value` property is not defined. Otherwise, it's optional.",
                                              "type": "number",
                                              "example": 23.99
                                            },
                                            "size": {
                                              "description": "Product size.",
                                              "type": "string",
                                              "example": "L"
                                            },
                                            "innerProducts": {
                                              "description": "**For restaurants only.** Indicate any inner products within the main product.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "productId": {
                                                    "description": "SKU exactly as it appears in the product feed.",
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "description": "Number of items.",
                                                    "type": "number"
                                                  },
                                                  "itemPrice": {
                                                    "description": "unit.cents format using the section default currency.",
                                                    "type": "number",
                                                    "example": 23.99
                                                  }
                                                },
                                                "required": [
                                                  "productId"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "productId",
                                            "quantity",
                                            "itemPrice",
                                            "transactionItemValue"
                                          ]
                                        }
                                      },
                                      {
                                        "description": "The cart's absolute current state. Products are ordered from the first added to the cart to the most recent."
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "dyType",
                                  "uniqueTransactionId",
                                  "transactionDatetime",
                                  "value",
                                  "cart"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "name",
                          "properties"
                        ]
                      },
                      {
                        "title": "Inform Affinity",
                        "description": "Report an array of product attributes to use in affinity personalization.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "A human-readable name corresponding to the schema name.",
                            "type": "string"
                          },
                          "properties": {
                            "allOf": [
                              {
                                "description": "Data for the reported event.",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "dyType": {
                                    "description": "Must be `inform-affinity-v1`.",
                                    "type": "string",
                                    "pattern": "inform-affinity-v1"
                                  },
                                  "source": {
                                    "description": "The source of the user data",
                                    "type": "string"
                                  },
                                  "data": {
                                    "description": "An array of attributes and values.<br><strong>Important:</strong> Reported attributes and values must be an exact match to the product feed<br>Each item in the array includes an attribute and up to 10 values:<br><br>- attribute: \"name of attribute\"<br>- values: [\"value1\", \"value2\"...]",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "attribute": {
                                          "description": "name of attribute"
                                        },
                                        "values": {
                                          "type": "array",
                                          "maxItems": 10,
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "dyType",
                                  "data"
                                ]
                              }
                            ]
                          }
                        },
                        "example": {
                          "name": "Inform Affinity",
                          "properties": {
                            "dyType": "inform-affinity-v1",
                            "source": "registration-form",
                            "data": [
                              {
                                "attribute": "categories",
                                "values": [
                                  "shoes",
                                  "tops",
                                  "accessories"
                                ]
                              },
                              {
                                "attribute": "brand",
                                "values": [
                                  "adidas"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      {
                        "title": "Custom Event",
                        "description": "Use custom events to report any event that isn't already defined for use in Experience OS, but is significant to your business.<br>**Note:** custom events support only symbols that are encoded with UTF-8 ([Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)). Some characters with diacritics (additional symbols above or below the letter) are read as the base character. For example, **é** is processed as **e**.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Event name for display. Does not have a `dyType` property.",
                            "type": "string",
                            "example": "VIP Login"
                          },
                          "properties": {
                            "description": "Properties can be strings, numbers, or Boolean. Note that we don't support nested properties when creating targeting rules over custom events.",
                            "type": "object",
                            "properties": {
                              "value": {
                                "description": "Indicates the monetary value of the event, with or without the optional currency designation. Use for goals based on events.",
                                "type": "number",
                                "example": 98.7
                              },
                              "currency": {
                                "description": "The currency used for the value. *Optional, but required for multi-currency sites.*<br>[List of supported currencies](https://support.dynamicyield.com/hc/en-us/articles/360022558254#h_01F248KMJV1VWADRC2H7WYFWCZ)",
                                "type": "string",
                                "example": "USD"
                              }
                            },
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "example": {
                          "name": "Custom Event Example 1",
                          "properties": {
                            "isVIP": true
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "required": [
                "user",
                "events"
              ],
              "example": null
            }
          }
        }
      }
    },
    "responses": {
      "Success": {
        "description": "Success."
      },
      "SuccessChoose": {
        "description": "Variation chosen successfully.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Choice",
              "type": "object",
              "properties": {
                "choices": {
                  "description": "The chosen variation for each campaign.",
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "title": "type: DECISION",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "default": "DECISION",
                            "pattern": "DECISION"
                          },
                          "variations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "payload": {
                                  "oneOf": [
                                    {
                                      "title": "Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "CUSTOM_JSON",
                                          "pattern": "CUSTOM_JSON"
                                        },
                                        "data": {
                                          "type": "object"
                                        }
                                      }
                                    },
                                    {
                                      "title": "Control Group Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "CUSTOM_JSON_CONTROL_GROUP_VARIATION",
                                          "pattern": "CUSTOM_JSON_CONTROL_GROUP_VARIATION"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "analyticsMetadata": {
                                  "type": "object",
                                  "properties": {
                                    "campaignId": {
                                      "type": "number"
                                    },
                                    "campaignName": {
                                      "type": "string"
                                    },
                                    "experienceId": {
                                      "type": "number"
                                    },
                                    "experienceName": {
                                      "type": "string"
                                    },
                                    "variationId": {
                                      "type": "number"
                                    },
                                    "variationName": {
                                      "type": "string",
                                      "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "decisionId": {
                            "type": "string"
                          },
                          "allocationGroup": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "title": "type: RECS_DECISION",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "default": "RECS_DECISION",
                            "pattern": "RECS_DECISION"
                          },
                          "variations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "payload": {
                                  "oneOf": [
                                    {
                                      "title": "Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "RECS",
                                          "pattern": "RECS"
                                        },
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "custom": {
                                              "type": "object"
                                            },
                                            "slots": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "sku": {
                                                    "type": "string"
                                                  },
                                                  "slotId": {
                                                    "type": "string"
                                                  },
                                                  "productData": {
                                                    "type": "object"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "title": "Control Group Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "RECS_CONTROL_GROUP_VARIATION",
                                          "pattern": "RECS_CONTROL_GROUP_VARIATION"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "analyticsMetadata": {
                                  "type": "object",
                                  "properties": {
                                    "campaignId": {
                                      "type": "number"
                                    },
                                    "campaignName": {
                                      "type": "string"
                                    },
                                    "experienceId": {
                                      "type": "number"
                                    },
                                    "experienceName": {
                                      "type": "string"
                                    },
                                    "variationId": {
                                      "type": "number"
                                    },
                                    "variationName": {
                                      "type": "string",
                                      "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "decisionId": {
                            "type": "string"
                          },
                          "allocationGroup": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "title": "type: STORE_RECS_DECISION",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "default": "STORE_RECS_DECISION",
                            "pattern": "STORE_RECS_DECISION"
                          },
                          "variations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "payload": {
                                  "oneOf": [
                                    {
                                      "title": "Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "STORE_RECS",
                                          "pattern": "STORE_RECS"
                                        },
                                        "data": {
                                          "type": "object"
                                        }
                                      }
                                    },
                                    {
                                      "title": "Control Group Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "STORE_RECS_CONTROL_GROUP_VARIATION",
                                          "pattern": "STORE_RECS_CONTROL_GROUP_VARIATION"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "analyticsMetadata": {
                                  "type": "object",
                                  "properties": {
                                    "campaignId": {
                                      "type": "number"
                                    },
                                    "campaignName": {
                                      "type": "string"
                                    },
                                    "experienceId": {
                                      "type": "number"
                                    },
                                    "experienceName": {
                                      "type": "string"
                                    },
                                    "variationId": {
                                      "type": "number"
                                    },
                                    "variationName": {
                                      "type": "string",
                                      "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "decisionId": {
                            "type": "string"
                          },
                          "allocationGroup": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "title": "type: SORTING_DECISION",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string",
                            "default": "SORTING_DECISION",
                            "pattern": "SORTING_DECISION"
                          },
                          "decisionId": {
                            "type": "string"
                          },
                          "variations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "payload": {
                                  "oneOf": [
                                    {
                                      "title": "Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "SORT",
                                          "pattern": "SORT"
                                        },
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "slots": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "sku": {
                                                    "type": "string"
                                                  },
                                                  "slotId": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "title": "Control Group Payload",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "SORT_CONTROL_GROUP_VARIATION",
                                          "pattern": "SORT_CONTROL_GROUP_VARIATION"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "analyticsMetadata": {
                                  "type": "object",
                                  "properties": {
                                    "campaignId": {
                                      "type": "number"
                                    },
                                    "campaignName": {
                                      "type": "string"
                                    },
                                    "experienceId": {
                                      "type": "number"
                                    },
                                    "experienceName": {
                                      "type": "string"
                                    },
                                    "variationId": {
                                      "type": "number"
                                    },
                                    "variationName": {
                                      "type": "string",
                                      "description": "The name of the variation as appears in the DY Admin or \"Control Group Variation\""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "cookies": {
                  "description": "Cookies returned from the server.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "maxAge": {
                        "type": "string"
                      }
                    }
                  }
                },
                "warnings": {
                  "description": "Errors returned by the server.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "ChooseResponseExample": {
                "value": {
                  "choices": [
                    {
                      "id": 5,
                      "name": "PDP Top Banner",
                      "type": "DECISION",
                      "decisionId": "aGVsbG8K",
                      "variations": [
                        {
                          "id": 52,
                          "payload": {
                            "type": "CUSTOM_JSON",
                            "data": {
                              "key1": "value1",
                              "key2": "value2"
                            }
                          },
                          "analyticsMetadata": {
                            "campaignId": 771007,
                            "campaignName": "Global control group",
                            "experienceId": 1464264,
                            "experienceName": "Served DY",
                            "variationId": 27883308,
                            "variationName": "Variation 1"
                          }
                        }
                      ]
                    },
                    {
                      "id": 24,
                      "name": "PDP Recs",
                      "type": "RECS_DECISION",
                      "decisionId": "d29ybGQK",
                      "variations": [
                        {
                          "id": 203,
                          "payload": {
                            "type": "RECS",
                            "data": {
                              "slots": [
                                {
                                  "slotId": "aGVsbG93b3JsZAo=",
                                  "sku": "6323723",
                                  "productData": {
                                    "name": "Plaid shirt",
                                    "price": 39.99,
                                    "url": "https://website.com/men-pants/p6323723-020"
                                  }
                                },
                                {
                                  "slotId": "d2VsY29tZWR1ZAo=",
                                  "sku": "5413764",
                                  "productData": {
                                    "name": "Khaki pants",
                                    "price": 59.99,
                                    "url": "https://website.com/men-pants/p5413764-010"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "ChooseResponseExampleControl": {
                "value": {
                  "type": "object",
                  "properties": {
                    "choices": [
                      {
                        "id": "652700",
                        "name": "demoBanner",
                        "type": "DECISION",
                        "variations": null,
                        "groups": [
                          "demo"
                        ],
                        "decisionId": "mbQtNDMxOTQxODU1MTU3ODI0MjY2Ms4AGKErqDEyNjkyNjU4AJECkc4BsFonpTQ1OTg4wMA="
                      }
                    ],
                    "cookies": [
                      {
                        "name": "_dyid_server",
                        "value": "7282320792394869879",
                        "maxAge": "31556926"
                      },
                      {
                        "name": "_dyjsession",
                        "value": "e3xi77qrxbsxxxmi18d8kxek6tdd12qj",
                        "maxAge": "1800"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "SuccessSearch": {
        "description": "Query results returned successfully.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Query Results",
              "type": "object",
              "properties": {
                "choices": {
                  "description": "The chosen variation for each campaign.",
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "title": "type: \"SEMANTIC_SEARCH_DECISION\"",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "default": "Semantic Search",
                            "pattern": "Semantic Search"
                          },
                          "type": {
                            "type": "string",
                            "default": "SEMANTIC_SEARCH_DECISION",
                            "pattern": "SEMANTIC_SEARCH_DECISION"
                          },
                          "variations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "payload": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "default": "SEARCH",
                                      "pattern": "SEARCH"
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "totalNumResults": {
                                          "type": "number"
                                        },
                                        "facets": {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "title": "valuesType: \"string\"",
                                                "type": "object",
                                                "properties": {
                                                  "column": {
                                                    "type": "string"
                                                  },
                                                  "valuesType": {
                                                    "type": "string",
                                                    "enum": [
                                                      "string"
                                                    ]
                                                  },
                                                  "displayName": {
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "count": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "title": "valuesType: \"number\"",
                                                "type": "object",
                                                "properties": {
                                                  "column": {
                                                    "type": "string"
                                                  },
                                                  "valuesType": {
                                                    "type": "string",
                                                    "enum": [
                                                      "number"
                                                    ]
                                                  },
                                                  "displayName": {
                                                    "type": "string"
                                                  },
                                                  "min": {
                                                    "type": "number"
                                                  },
                                                  "max": {
                                                    "type": "number"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "slots": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "slotId": {
                                                "type": "string"
                                              },
                                              "sku": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "analyticsMetadata": {
                                  "type": "object",
                                  "properties": {
                                    "campaignId": {
                                      "type": "number"
                                    },
                                    "campaignName": {
                                      "type": "string"
                                    },
                                    "experienceId": {
                                      "type": "number"
                                    },
                                    "experienceName": {
                                      "type": "string"
                                    },
                                    "variationId": {
                                      "type": "number"
                                    },
                                    "variationName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "decisionId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "title": "type: \"VISUAL_SEARCH_DECISION\"",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "default": "Visual Search",
                            "pattern": "Visual Search"
                          },
                          "type": {
                            "type": "string",
                            "default": "VISUAL_SEARCH_DECISION",
                            "pattern": "VISUAL_SEARCH_DECISION"
                          },
                          "variations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "payload": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "default": "SEARCH",
                                      "pattern": "SEARCH"
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "totalNumResults": {
                                          "type": "number"
                                        },
                                        "facets": {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "title": "valuesType: \"string\"",
                                                "type": "object",
                                                "properties": {
                                                  "column": {
                                                    "type": "string"
                                                  },
                                                  "valuesType": {
                                                    "type": "string",
                                                    "enum": [
                                                      "string"
                                                    ]
                                                  },
                                                  "displayName": {
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "count": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "title": "valuesType: \"number\"",
                                                "type": "object",
                                                "properties": {
                                                  "column": {
                                                    "type": "string"
                                                  },
                                                  "valuesType": {
                                                    "type": "string",
                                                    "enum": [
                                                      "number"
                                                    ]
                                                  },
                                                  "displayName": {
                                                    "type": "string"
                                                  },
                                                  "min": {
                                                    "type": "number"
                                                  },
                                                  "max": {
                                                    "type": "number"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "slots": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "slotId": {
                                                "type": "string"
                                              },
                                              "sku": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "analyticsMetadata": {
                                  "type": "object",
                                  "properties": {
                                    "campaignId": {
                                      "type": "number"
                                    },
                                    "campaignName": {
                                      "type": "string"
                                    },
                                    "experienceId": {
                                      "type": "number"
                                    },
                                    "experienceName": {
                                      "type": "string"
                                    },
                                    "variationId": {
                                      "type": "number"
                                    },
                                    "variationName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "decisionId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "title": "type: SHOPPING_MUSE_DECISION",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "default": "Shopping Muse",
                            "pattern": "Shopping Muse"
                          },
                          "type": {
                            "type": "string",
                            "default": "SHOPPING_MUSE_DECISION",
                            "pattern": "SHOPPING_MUSE_DECISION"
                          },
                          "variations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "payload": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "default": "SHOPPING_MUSE",
                                      "pattern": "SHOPPING_MUSE"
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "assistant": {
                                          "type": "string"
                                        },
                                        "widgets": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string"
                                              },
                                              "slots": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "sku": {
                                                      "type": "string"
                                                    },
                                                    "slotId": {
                                                      "type": "string"
                                                    },
                                                    "productData": {
                                                      "type": "object"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "support": {
                                          "type": "boolean"
                                        },
                                        "chatId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "analyticsMetadata": {
                                  "type": "object",
                                  "properties": {
                                    "campaignId": {
                                      "type": "number"
                                    },
                                    "campaignName": {
                                      "type": "string"
                                    },
                                    "experienceId": {
                                      "type": "number"
                                    },
                                    "experienceName": {
                                      "type": "string"
                                    },
                                    "variationId": {
                                      "type": "number"
                                    },
                                    "variationName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "decisionId": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "cookies": {
                  "description": "Cookies returned from the server.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "maxAge": {
                        "type": "string"
                      }
                    }
                  }
                },
                "warnings": {
                  "description": "Errors returned by the server.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SuccessProductFeed": {
        "description": "Product feed udpated successfully.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Product Feed Update",
              "type": "object",
              "properties": {
                "success": {
                  "description": "The update request's success status.",
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "description": "Response body.",
                  "type": "object",
                  "properties": {
                    "transaction_id": {
                      "description": "The ID for the update transaction. A transaction includes all individual items for which an update was requested.",
                      "type": "string",
                      "example": "3754b085584be8561926dabc32b359a0"
                    }
                  }
                }
              }
            },
            "examples": {
              "ProductFeedResponseExample01": {
                "value": {
                  "success": true,
                  "data": {
                    "transaction_id": "MDcyNWM0MTEtYWZlZS00MjdkLWExYmYtMDlhMWIwNGFjMzg4LWZpZC0yMTYxNi10cy0xNTg2NjgxOTE0MDYwLXQtcGFydGlhbA=="
                  }
                }
              }
            }
          }
        }
      },
      "SuccessUserData": {
        "description": "User data updated.",
        "content": {
          "application/json": {
            "examples": {
              "UserDataResponseExample01": {
                "value": {
                  "error": null,
                  "dy_trace_id": "eed3b778281fe4bd435902c8c7f854a3"
                }
              }
            }
          }
        }
      },
      "ResultTransactionStatusSpecificItem": {
        "description": "Result",
        "content": {
          "application/json": {
            "schema": {
              "title": "Transaction Status - Specific Item",
              "type": "object",
              "properties": {
                "item": {
                  "description": "The request item's ID.",
                  "type": "string",
                  "example": "abc-123"
                },
                "status": {
                  "description": "Whether the item has been successfully updated.",
                  "type": "string",
                  "example": "success"
                },
                "time": {
                  "description": "Timestamp for most recent status change.",
                  "type": "string",
                  "example": "2023-03-30T08:20:35.827+0000"
                }
              },
              "additionalProperties": true
            },
            "example": {
              "value": {
                "item": "abc-123",
                "status": "success",
                "time": "2023-03-30T08:20:35.827+0000"
              }
            }
          }
        }
      },
      "ResultTransactionStatus": {
        "description": "Result",
        "content": {
          "application/json": {
            "schema": {
              "title": "Transaction Status",
              "type": "array",
              "items": {
                "title": "Transaction Status - Specific Item",
                "type": "object",
                "properties": {
                  "item": {
                    "description": "The request item's ID.",
                    "type": "string",
                    "example": "abc-123"
                  },
                  "status": {
                    "description": "Whether the item has been successfully updated.",
                    "type": "string",
                    "example": "success"
                  },
                  "time": {
                    "description": "Timestamp for most recent status change.",
                    "type": "string",
                    "example": "2023-03-30T08:20:35.827+0000"
                  }
                },
                "additionalProperties": true
              }
            },
            "example": {
              "value": [
                {
                  "item": "abc-123",
                  "status": "success",
                  "time": "2023-03-30T08:20:35.827+0000"
                },
                {
                  "item": "abcde-123",
                  "status": "failed",
                  "time": "2023-03-30T08:20:23.324+0000",
                  "message": "failed"
                },
                {
                  "item": "abcd-123",
                  "status": "success",
                  "time": "2023-03-30T08:20:30.005+0000",
                  "message": "Item missing"
                }
              ]
            }
          }
        }
      },
      "ResultUserProfile": {
        "description": "Result",
        "content": {
          "application/json": {
            "examples": {
              "ProfileAnywhereResponseExample01": {
                "value": {
                  "1217282-400": {
                    "productInterest": {
                      "view": {
                        "daily": 1,
                        "twoDays": 1
                      },
                      "city": {
                        "view": {},
                        "purchase": {}
                      }
                    }
                  },
                  "1217282-600": {
                    "productInterest": {
                      "view": {
                        "daily": 1,
                        "twoDays": 1
                      },
                      "city": {
                        "view": {},
                        "purchase": {}
                      }
                    }
                  }
                }
              },
              "ProfileAnywhereResponseExample02": {
                "value": {
                  "affinity": {
                    "color": {
                      "Black": 1,
                      "White": 2,
                      "Red": 3
                    },
                    "categories": {
                      "Men": 1,
                      "Flats": 2,
                      "Shoes": 3,
                      "Trainers": 4,
                      "Sneakers": 5
                    }
                  }
                }
              }
            }
          }
        }
      },
      "NotFoundBranchFeed": {
        "description": "Branch not found."
      },
      "Unauthorized": {
        "description": "Unauthorized request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "description": "Error code.",
                  "type": "string",
                  "example": "401"
                }
              }
            }
          }
        }
      },
      "Invalid": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "description": "Response object for an invalid request.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "Error description.",
                  "type": "string",
                  "example": "request must contain context page location"
                },
                "type": {
                  "description": "The type of error encountered.",
                  "type": "string",
                  "example": "badRequest"
                }
              }
            }
          }
        }
      },
      "InvalidBranchFeed": {
        "description": "Unprocessable Content - in the case of application/gzip content-type, the file is corrupt and cannot be unzipped."
      },
      "InvalidUserData": {
        "description": "Response with error.",
        "content": {
          "application/json": {
            "examples": {
              "UserDataResponseExample02": {
                "value": {
                  "error": {
                    "message": "The feedKey must match the feed key in the feed settings",
                    "type": "E019"
                  },
                  "dy_trace_id": "74eb317b0a44addc30e765e6b9a83675"
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "ChoosePayloadExample01": {
        "value": {
          "user": {
            "dyid": "-4350463893986789401",
            "dyid_server": "-4350463893986789401"
          },
          "session": {
            "dy": "ohyr6v42l9zd4bpinnvp7urjjx9lrssw"
          },
          "selector": {
            "names": [
              "PDP Top Banner",
              "PDP Recs"
            ]
          },
          "context": {
            "page": {
              "type": "PRODUCT",
              "data": [
                "7383723-010"
              ],
              "location": "<https://sugoi-ne.com/men-pants/p7383723-010>",
              "referrer": "<https://sugoi-ne.com/men-pants>",
              "locale": "en_US"
            },
            "device": {
              "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
              "ip": "54.100.200.255"
            },
            "pageAttributes": {
              "customPageAttribute": "someValue"
            }
          },
          "options": {
            "isImplicitPageview": false
          }
        }
      },
      "SearchRequestExample01": {
        "value": {
          "query": {
            "imageBase64": "bGlnaHQgd29yay4=",
            "text": "dress",
            "filters": [
              {
                "field": "category",
                "values": [
                  "dresses",
                  "tops"
                ]
              },
              {
                "field": "price",
                "min": 100,
                "max": 200
              }
            ],
            "pagination": {
              "numItems": 10,
              "offset": 0
            },
            "enableSpellCheck": true
          },
          "user": {
            "active_consent_accepted": true,
            "dyid": "122113",
            "dyid_server": "3213213"
          },
          "session": {
            "dy": "3123123"
          },
          "context": {
            "page": {
              "type": "HOMEPAGE",
              "location": "https://shop.biz/nice-shirt-p76311.html",
              "referrer": "https://google.cz",
              "locale": "en_US"
            }
          },
          "selector": {
            "name": "Visual Search"
          },
          "options": {
            "returnAnalyticsMetadata": false,
            "isImplicitClientData": false
          }
        }
      },
      "ChoiceExample01": {
        "value": {
          "choices": [
            {
              "id": 5,
              "name": "PDP Top Banner",
              "type": "DECISION",
              "decisionId": "aGVsbG8K",
              "variations": [
                {
                  "id": 52,
                  "payload": {
                    "type": "CUSTOM_JSON",
                    "data": {
                      "key1": "value1",
                      "key2": "value2"
                    }
                  },
                  "analyticsMetadata": {
                    "campaignId": 771007,
                    "campaignName": "Global control group",
                    "experienceId": 1464264,
                    "experienceName": "Served DY",
                    "variationId": 27883308,
                    "variationName": "Variation 1"
                  }
                }
              ]
            },
            {
              "id": 24,
              "name": "PDP Recs",
              "type": "RECS_DECISION",
              "decisionId": "d29ybGQK",
              "variations": [
                {
                  "id": 203,
                  "payload": {
                    "type": "RECS",
                    "data": {
                      "slots": [
                        {
                          "slotId": "aGVsbG93b3JsZAo=",
                          "sku": "6323723",
                          "productData": {
                            "name": "Plaid shirt",
                            "price": 39.99,
                            "url": "https://website.com/men-pants/p6323723-020"
                          }
                        },
                        {
                          "slotId": "d2VsY29tZWR1ZAo=",
                          "sku": "5413764",
                          "productData": {
                            "name": "Khaki pants",
                            "price": 59.99,
                            "url": "https://website.com/men-pants/p5413764-010"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "ChoiceExampleControl01": {
        "value": {
          "type": "object",
          "properties": {
            "choices": [
              {
                "id": "652700",
                "name": "demoBanner",
                "type": "DECISION",
                "variations": null,
                "groups": [
                  "demo"
                ],
                "decisionId": "mbQtNDMxOTQxODU1MTU3ODI0MjY2Ms4AGKErqDEyNjkyNjU4AJECkc4BsFonpTQ1OTg4wMA="
              }
            ],
            "cookies": [
              {
                "name": "_dyid_server",
                "value": "7282320792394869879",
                "maxAge": "31556926"
              },
              {
                "name": "_dyjsession",
                "value": "e3xi77qrxbsxxxmi18d8kxek6tdd12qj",
                "maxAge": "1800"
              }
            ]
          }
        }
      },
      "UserDataPayloadExample01": {
        "value": {
          "requests": [
            {
              "action": "upsert",
              "cuid": "myuser123",
              "cuidtype": "ihe",
              "timestamp": "2021-07-24T13:44:17+02:00",
              "data": {
                "VIP": "T",
                "contacts_buyer": "T",
                "premium_score": 0.8,
                "segment_name": null,
                "last_visit": "2020-05-16T05:50:06-05:00"
              }
            },
            {
              "action": "upsert",
              "cuid": "myuser456",
              "cuidtype": "ihe",
              "timestamp": "2021-07-24T13:45:52+02:00",
              "data": {
                "VIP": "F",
                "contacts_buyer": "T",
                "premium_score": 0.3
              }
            },
            {
              "action": "upsert",
              "cuid": "0c907031b7d6515ce8def68a767272d0ec7225e987c3e0ce70b985c265f318f0",
              "cuidtype": "ihe",
              "timestamp": "2023-07-02T10:44:44+02:00",
              "data": {
                "UserSegments": [
                  "segment 1",
                  "segment 2"
                ]
              }
            },
            {
              "action": "delete",
              "cuid": "myuser789",
              "cuidtype": "ihe",
              "timestamp": "2022-05-24T12:31:09+02:00"
            }
          ]
        }
      },
      "UserDataUpdateExample01": {
        "value": {
          "error": null,
          "dy_trace_id": "eed3b778281fe4bd435902c8c7f854a3"
        }
      },
      "UserDataUpdateExample02": {
        "value": {
          "error": {
            "message": "The feedKey must match the feed key in the feed settings",
            "type": "E019"
          },
          "dy_trace_id": "74eb317b0a44addc30e765e6b9a83675"
        }
      },
      "ProductFeedPayloadExample01": {
        "value": {
          "requests": [
            {
              "id": "abc-123",
              "action": "UPDATE",
              "body": {
                "data": {
                  "sku": "abc-123",
                  "group_id": "abc",
                  "url": "http://www.example.com/abc-123",
                  "name": "white sneakers",
                  "price": 29.99,
                  "in_stock": true,
                  "image_url": "http://www.example.com/abc-123.png",
                  "categories": "shoes|sneakers",
                  "description": "The white sneakers that everybody wants",
                  "publish_time": "2018-02-12T17:05:12",
                  "keywords": "tag1|tag2",
                  "any_other_field": "any other value"
                }
              }
            },
            {
              "id": "abcd-123",
              "action": "delete"
            },
            {
              "id": "abcde-123",
              "action": "partial",
              "body": {
                "data": {
                  "price": 39.99
                }
              }
            }
          ]
        }
      },
      "ProductFeedUpdateExample01": {
        "value": {
          "success": true,
          "data": {
            "transaction_id": "MDcyNWM0MTEtYWZlZS00MjdkLWExYmYtMDlhMWIwNGFjMzg4LWZpZC0yMTYxNi10cy0xNTg2NjgxOTE0MDYwLXQtcGFydGlhbA=="
          }
        }
      },
      "TransactionStatusSpecificItemExample01": {
        "value": {
          "item": "abc-123",
          "status": "success",
          "time": "2023-03-30T08:20:35.827+0000"
        }
      },
      "TransactionStatusExample01": {
        "value": [
          {
            "item": "abc-123",
            "status": "success",
            "time": "2023-03-30T08:20:35.827+0000"
          },
          {
            "item": "abcde-123",
            "status": "failed",
            "time": "2023-03-30T08:20:23.324+0000",
            "message": "failed"
          },
          {
            "item": "abcd-123",
            "status": "success",
            "time": "2023-03-30T08:20:30.005+0000",
            "message": "Item missing"
          }
        ]
      },
      "UserProfileExample01": {
        "value": {
          "1217282-400": {
            "productInterest": {
              "view": {
                "daily": 1,
                "twoDays": 1
              },
              "city": {
                "view": {},
                "purchase": {}
              }
            }
          },
          "1217282-600": {
            "productInterest": {
              "view": {
                "daily": 1,
                "twoDays": 1
              },
              "city": {
                "view": {},
                "purchase": {}
              }
            }
          }
        }
      },
      "UserProfileExample02": {
        "value": {
          "affinity": {
            "color": {
              "Black": 1,
              "White": 2,
              "Red": 3
            },
            "categories": {
              "Men": 1,
              "Flats": 2,
              "Shoes": 3,
              "Trainers": 4,
              "Sneakers": 5
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "description": "Your API key",
        "type": "apiKey",
        "in": "header",
        "name": "dy-api-key",
        "x-default": "your-api-key"
      }
    }
  }
}